<?xml version="1.0" encoding="utf-8"?>

<!--
Project: 	malkey-screens	
File:		CheckIn.mxml	(CopyOf CheckOut and editd)
Date:		Jun 7, 2011	
Author:		Sanka Senavirathna-Administrator
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:valueObjects="com.dspl.malkey.valueObjects.*" 
		 xmlns:services="com.dspl.malkey.services.*" 
		 xmlns:controls="com.dspl.efinac.components.common.controls.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 enabled="{isEnable}"
		 disabledAlpha="1">
	
	
	<!--METADATA here-->
	<fx:Metadata>
		[Event(name="dateChange",type="flash.events.Event")]
		[Event(name="checkInChange",type="flash.events.Event")]
		[Event(name="vehicleChange",type="flash.events.Event")]
		[Event(name="agreementChange",type="flash.events.DataEvent")]
	</fx:Metadata>
	
	
	<!--View Tier-->
	
	
	<mx:Form width="417" height="345" x="12" y="10"
			 paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="2"
			 borderAlpha="0.10" borderColor="black" borderStyle="solid" borderVisible="true">
		<s:Label text="Indication of Damages" fontWeight="bold"/>
		
		<s:BorderContainer id="bcVehiDiagram" width="404" height="279" verticalCenter="0" horizontalCenter="0">
			<mx:Image id="imgCI" click="imgCI_clickHandler(event)" width="402" height="277" 
					  source="{com_dspl_malkey_domain_Fvehicletype.image}"/>					

		</s:BorderContainer>
		<s:HGroup width="232" height="25">
			<s:ToggleButton id="btnDent" label="Dent"
							click="btnDent_clickHandler(event)" 
							enabled.stUndo="false" enabled.stNew="true" enabled.stEdit="true"/>
			<s:ToggleButton id="btnScratch" label="Scratch"
							click="btnScratch_clickHandler(event)" 
							enabled.stUndo="false" enabled.stNew="true" enabled.stEdit="true"/>
			<s:Button id="btnUndoMarking" label="Undo" 
					  click="btnUndoMarking_clickHandler(event)" 
					  enabled.stUndo="false" enabled.stNew="true" enabled.stEdit="true"/>
		</s:HGroup>
	</mx:Form>
	
	<mx:Form width="315" height="100"  borderAlpha="0.10" borderColor="black" x="10" y="358">
		<s:Label text="Check-In Mileage" fontWeight="bold"/>
		<mx:SWFLoader id="slODOOrgMile" complete="slODOOrgMile_completeHandler(event)" creationComplete="slODOOrgMile_creationCompleteHandler(event)" scaleContent="true" width="219" height="37" source="@Resource(key='odourl', bundle='resource')"/>
	</mx:Form>
	
	<mx:Form width="233" height="240" x="437" y="10"
			 paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="2"
			 borderAlpha="0.10" borderColor="black" borderStyle="solid" borderVisible="true">
		<s:Label text="Fuel Level" fontWeight="bold"/>
		<mx:SWFLoader id="slFuelMeter" complete="slFuelMeter_completeHandler(event)" creationComplete="slFuelMeter_creationCompleteHandler(event)" scaleContent="true" enabled="false" enabled.stNew="true" enabled.stEdit="true" width="220" height="210" source="@Resource(key='fuelurl', bundle='resource')"/>
	</mx:Form>
	
	<mx:Form width="233" height="200" x="437" y="250"
			 paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="2"
			 borderAlpha="0.10" borderColor="black" borderStyle="solid" borderVisible="true">
		<s:Label text="Inventory" fontWeight="bold"/>
		

		<mx:List id="lstVehiInv" dataProvider="{acFvinventrylist}" labelField="description"
				 width="220" height="100%" alternatingItemColors="[#edf0fa, white]"
				 enabled.stUndo="false" enabled.stNew="true" enabled.stEdit="true"
				 itemClick="lstVehiInv_itemClickHandler(event)"
				 >
			<mx:itemRenderer>
				<fx:Component>
					<mx:CheckBox selected="{Boolean(data.isselected)}" 
								 change="checkbox1_changeHandler(event)">
						<fx:Script>
							<![CDATA[
								protected function checkbox1_changeHandler(event:Event):void
								{
									data.isselected = this.selected ? 1 : 0;
								}
							]]>
						</fx:Script>
					</mx:CheckBox>
					
				</fx:Component>
			</mx:itemRenderer>
			
		</mx:List>
	</mx:Form>
		
	

	<mx:Form height="440" x="675" y="10"
			 borderAlpha="0.10"
			 paddingTop="5"
			 paddingLeft="5"
			 paddingRight="5"
			 paddingBottom="2"
			 borderColor="black"
			 borderStyle="solid"
			 borderVisible="true" 
			 width="283">
		<!--		<mx:FormItem label="Hire Status" width="225" styleName="formItem" labelStyleName="formItemLabel">
		<s:DropDownList width="115"/>
		</mx:FormItem>-->
		
		<mx:FormItem label="Check In Date" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0" disabledOverlayAlpha="0.9">
			<s:TextInput id="dtDateInActual" text="{dateFormatter.format(com_dspl_malkey_domain_Freservation.din)}" editable="false" width="70"/>
			<!--<mx:Label text=":" width="20"/>-->
			<mx:LinkButton label="Change"  color="#0A33BB" textDecoration="underline" id="lnkChangeCheckInDate" click="lnkChangeCheckInDate_clickHandler(event)" width="70"/>
		</mx:FormItem>
		
		<mx:FormItem label="Check In Time" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0" disabledOverlayAlpha="0.9">
		<s:ComboBox 
			id="cmbTimeIn" 
			dataProvider="{acTime}" 
			selectedIndex="{acTime.getItemIndex(com_dspl_malkey_domain_Freservation.timein)}"  
			width="75" 
			enabled="false"
			tabIndex="5"
			/>
		</mx:FormItem>
		
		<mx:FormItem label="Hire Status"  styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal">
<!--			<controls:_tiMasterFile id="txtHireStatus"											
									_acDataProvider="{acFhirestatus}"
									text="@{com_dspl_malkey_domain_Freservation.cohirestsid}"
									_strKeyColumn="hirestsid"
									_strKeyColCaption="Hire Status" 
									_strDetailColumn="description" 
									_strDetailColCaption="description"
									_strWindowTitle="Select Hire Status"
									width="115"
									editable="false" 
									/>-->
			
			<mx:ComboBox id="txtHireStatus"	dataProvider="{acHireStatus}" change="txtHireStatus_changeHandler(event)"/>
			<!--			<s:TextInput text="{genericFunctions.getArrayCollection(txtHireStatus._acDataProvider,'hirestsid',com_dspl_malkey_domain_Freservation.cohirestsid).description}" 
			
			width="300"
			/>-->
			
			<!--<mx:LinkButton label="Search" width="60" color="#0A33BB" textDecoration="underline" click="{txtHireStatus.launchSearchGrid()}"/>-->
		</mx:FormItem>
<!--		<mx:FormItem label="Long Term"  styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal">
			<mx:ComboBox id="txtHireStatus"	dataProvider="{acLongtermHireStatus}" change=""/>
		</mx:FormItem>-->
		
		<mx:FormItem label="Excess Mileage" width="225" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextInput id="txtExcessMileage" width="40" text="{com_dspl_malkey_domain_Freservation.cixsmileage}" editable="false" />
			<mx:Label text="KM(s)" width="40"/>
			<!--<s:TextInput id="txtExcessMileagers" width="30" editable="false" />-->
			<!--<mx:Label text="RS/=" width="30"/>-->
		</mx:FormItem>
		<mx:FormItem label="Detention Hours" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextInput 
				id="txtDetentionHours" 
				width="40" 
				text="{com_dspl_malkey_domain_Freservation.cidetenhrs}"
				toolTip="Rs {com_dspl_malkey_domain_Freservation.cidetenhrsrs}/="
				restrict="0-9."
				editable="false"
				/>
			<mx:Label text="{com_dspl_malkey_domain_Freservation.cidetenhrsrs}/=" width="50" color="#069413" fontSize="9"/>
			<mx:LinkButton width="70" color="#0A33BB" textDecoration="underline" 
						   id="lnkChange_txtDetentionHours" 
						   click="lnkChange_txtDetentionHours_clickHandler(event)"
						   label="Change"
						   />
		</mx:FormItem>
		<mx:FormItem label="Excess Hours" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextInput 
				id="txtExcessHours" 
				width="40" 
				text="{com_dspl_malkey_domain_Freservation.xhours}"
				toolTip="Rs {com_dspl_malkey_domain_Freservation.xhoursamt}/="
				restrict="0-9."
				editable="false"
				/>
			<mx:Label text="{com_dspl_malkey_domain_Freservation.xhoursamt}/=" width="50" color="#069413" fontSize="9"/>
			<mx:LinkButton width="70" color="#0A33BB" textDecoration="underline" 
						   id="lnkChange_txtExcessHours" 
						   click="lnkChange_txtExcessHours_clickHandler(event)"
						   label="Change"
						   enabled="{com_dspl_malkey_domain_Freservation.hiretypeid==resourceManager.getString('resource','reservation.hiretype.wedding') ? true : false}"
						   />
		</mx:FormItem>
<!--		<mx:FormItem label="Night Out " styleName="formItemM" labelStyleName="formItemLabel">
			<s:TextInput id="txtNightOut" width="115"  text="@{com_dspl_malkey_domain_Freservation.cinightout}"/>
		</mx:FormItem>-->
		<mx:FormItem label="Out of Colombo" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextInput 
				id="txtOutofColombo" 
				width="40"  
				text="{com_dspl_malkey_domain_Freservation.cinightout}" 
				restrict="0-9." 
				editable="false"
				/>
			<mx:Label text="{com_dspl_malkey_domain_Freservation.cinightoutrs}/=" width="50" color="#069413" fontSize="9"/>
			<mx:LinkButton width="70" color="#0A33BB" textDecoration="underline" 
						   id="lnkChange_txtOutofColombo" 
						   click="lnkChange_txtOutofColombo_clickHandler(event)"
						   label="Change"
						   />
		</mx:FormItem>
<!--		<mx:FormItem label="Out of Colombo(hrs)" toolTip="Night Out" styleName="formItemM" labelStyleName="formItemLabel">
			<s:TextInput id="txtOutofColombo" width="115"  text="{com_dspl_malkey_domain_Freservation.cinightout}" restrict="0-9."/>
		</mx:FormItem>-->

		<mx:FormItem label="Damage (Rs.)" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextInput id="txtDamage" width="90" textAlign="right"  restrict="0-9." text="@{com_dspl_malkey_domain_Freservation.cidamagers}"   editable="false"/>
			
			<mx:LinkButton width="70" color="#0A33BB" textDecoration="underline" 
						   id="lnkChange_txtDamage" 
						   click="lnkChange_txtDamage_clickHandler(event)"
						   label="Change"
						   />
		</mx:FormItem>
		<mx:FormItem label="Fuel Diff (Rs.)" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextInput id="txtFuelDiff" width="90" textAlign="right"  text="@{com_dspl_malkey_domain_Freservation.cifueldiff}" restrict="-0-9."  editable="false"/>
			
			<mx:LinkButton width="70" color="#0A33BB" textDecoration="underline" 
						   id="lnkChange_txtFuelDiff" 
						   click="lnkChange_txtFuelDiff_clickHandler(event)"
						   label="Change"
						   />
		</mx:FormItem>

		<mx:FormItem label="Total Other (Rs.)" toolTip="Eg:Parking.etc" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextInput id="txtOther" width="90" textAlign="right"  text="@{com_dspl_malkey_domain_Freservation.ciother}" restrict="0-9."   editable="false"/>
			
			<mx:LinkButton width="70" color="#0A33BB" textDecoration="underline" 
						   id="lnkChange_txtOther" 
						   click="lnkChange_txtOther_clickHandler(event)"
						   label="Change"
						   enabled="false"
						   />
		</mx:FormItem>
		<mx:FormItem label="Naration" toolTip="Other Charges Naration Eg:Parking.etc" styleName="formItemM" labelStyleName="formItemLabel" direction="horizontal" horizontalGap="0">
			<s:TextArea 
				restrict="a-z A-z 0-9 \- _ @ ."
				id="txtOtherNaration" width="150" height="145"   text="@{com_dspl_malkey_domain_Freservation.othernaration}"/>
		</mx:FormItem>
	</mx:Form>
	
	
	<mx:Form   
		x="965" y="10" width="253" height="200"
		borderAlpha="0.10"
		paddingTop="5"
		paddingLeft="5"
		paddingRight="5"
		paddingBottom="2"
		borderColor="black"
		borderStyle="solid"
		borderVisible="true" 
		enabled="{session.getAttribute('hirestatus') =='CHECKOUT'}"
		>
		<mx:FormHeading  label="Vehicle Change Agreement"/>
			<s:CheckBox id="cbUpgrade" label="Agree to Change Vehicle and Continue" enabled="{session.getAttribute('hirestatus') =='CHECKOUT'}"/>
		<!--<s:Label text=" Reservation with new Agreement.Press Next to save(Check-In) existing Agreement and Change vehicle."  width="245" height="56"/>-->
		<s:VGroup 
			includeInLayout="{com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype=='LONGTERM'}"
			>
			<mx:FormHeading  label="LongTerm Hire"
							 visible="{com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype=='LONGTERM'}"/>
			<s:CheckBox 
				id="cbLTUpgrade" 
				label="Agree to Continue Longterm Hire." 
				enabled="{com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype=='LONGTERM'}"
				visible="{com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype=='LONGTERM'}"
				/>
			<s:Label 
				text="Note:Longterm hires periodically renew agreement monthly/quartaly with billing basis" 
				width="225" height="50"
				color="green"
				visible="{com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype=='LONGTERM'}"
				/>
		</s:VGroup>
		<mx:FormItem label="" labelWidth="150">
			<s:Button 
				id="btnConfirm" 
				label="Next" 
				enabled="{cbUpgrade.selected || cbLTUpgrade.selected}" 
				click="btnConfirm_clickHandler(event)"
				toolTip="Click here to select vehicle and continue."/>
		</mx:FormItem>
	</mx:Form>
	
	
	
	
	
	
	
	
	
	<mx:Form   
		x="965" y="220" width="253" height="270" verticalGap="0"
		borderAlpha="0.10"
		paddingTop="5"
		paddingLeft="5"
		paddingRight="5"
		paddingBottom="2"
		borderColor="black"
		borderStyle="solid"
		borderVisible="true" 
		>
		<mx:FormHeading  label="Other Charges Detail"/>
<mx:FormItem  label="Parking Chargers">
<mx:TextInput id="txtOtherCharges1" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="D/L Endosment" toolTip="Driving Licence Endrosement">
<mx:TextInput id="txtOtherCharges2" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="AA Licence">
<mx:TextInput id="txtOtherCharges3" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="Deco Chargers" toolTip="Flower Decorastion Charges">		
<mx:TextInput id="txtOtherCharges4" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="Highway" toolTip="Highway/Bus fare">		
<mx:TextInput id="txtOtherCharges5" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="Car Carrier" toolTip="CREW BATA">		
<mx:TextInput id="txtOtherCharges6" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="Baby Seats" toolTip="Baby Seats">		
<mx:TextInput id="txtOtherCharges7" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="GPS Charges" toolTip="GPS Charges">		
<mx:TextInput id="txtOtherCharges8" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<mx:FormItem  label="Driver Expenses" toolTip="Driver Meals and Accommodation">		
<mx:TextInput id="txtOtherCharges9" width="100" change="btnOtherCharges_clickHandler()"/>
</mx:FormItem>
<!--<s:Button id="btnOtherCharges" label="Update" click="btnOtherCharges_clickHandler()"/>-->
</mx:Form>
	
	<!--STATES here-->
	<s:states>
		<s:State name="State1"   	id="State1"/>
		<s:State name="stDelete" 	id="stDelete"/>
		<s:State name="stEdit" 		id="stEdit"/>
		<s:State name="stNew"    	id="stNew"/>
		<s:State name="stView"  	id="stView"/>
		<s:State name="stUndo"  	id="stUndo"/>
	</s:states>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!--Bindings Here-->
	<fx:Binding source="{stCurrent}" destination="currentState"/>
<!--	<fx:Binding source="{stCurrent}" destination="{slFuelMeter.content.setFuelLevel(com_dspl_malkey_domain_Freservation.cifuellevel.toString())}"/>-->
	<fx:Binding source="genericFunctions.getArrayCollection(acVehicleAll,'regno',com_dspl_malkey_domain_Fresvehicle.id.regno) as Com_dspl_malkey_domain_Fvehicle" 				destination="com_dspl_malkey_domain_Fvehicle" />
	<fx:Binding source="genericFunctions.getArrayCollection(acVehicleTypeAll,'vehitypeid',com_dspl_malkey_domain_Fvehicle.vehitypeid) as Com_dspl_malkey_domain_Fvehicletype" 	destination="com_dspl_malkey_domain_Fvehicletype"/>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!--Controller-->
	<fx:Declarations>
		
		<fx:String id="stCurrent"/>
		
		<!--VALIDATORS-->
		
		<!--FORMATTERS HERE-->
		<mx:DateFormatter id="dateFormatter" formatString="@Resource(key='dateFormat',bundle='resource')"/>
		
		<!--VALUEOBJECTS/DOMAINS HERE-->
		<valueObjects:Com_dspl_malkey_domain_Freservation 	id="com_dspl_malkey_domain_Freservation"/>
		<valueObjects:Com_dspl_malkey_domain_Fresvehicle 	id="com_dspl_malkey_domain_Fresvehicle"/>
		<valueObjects:Com_dspl_malkey_domain_FresvehiclePK 	id="com_dspl_malkey_domain_FresvehiclePK"/>
		<valueObjects:Com_dspl_malkey_domain_Fvehicle 		id="com_dspl_malkey_domain_Fvehicle"/>
		<valueObjects:Com_dspl_malkey_domain_Fvehicletype 	id="com_dspl_malkey_domain_Fvehicletype"/>
		<valueObjects:Com_dspl_malkey_domain_Fvehiclemake 	id="com_dspl_malkey_domain_Fvehiclemake"/>
		<valueObjects:Com_dspl_malkey_domain_Fresdriver 	id="com_dspl_malkey_domain_Fresdriver"/>
		<valueObjects:Com_dspl_malkey_domain_Fresdriverrate id="com_dspl_malkey_domain_Fresdriverrate"/>
		
		<!--ARRAYCOLLECTION HERE-->
		<mx:ArrayCollection id="acVehicleAll"/>
		<mx:ArrayCollection id="acVehicleMake"/>
		<mx:ArrayCollection id="acVehicleTypeAll"/>
		<mx:ArrayCollection id="acFvinventrylist"/>
		<mx:ArrayCollection id="acFresVehicleInventory"/>
		<mx:ArrayCollection id="acVehicleDamage"/>
		<mx:ArrayCollection id="acFhirestatus"/>
		<mx:ArrayCollection id="acTime"/>
		
		<s:ArrayCollection id="acHireStatus">
			<fx:String>SELECT</fx:String>
			<fx:String>COMPLETED</fx:String>
			<fx:String>NOSHOW</fx:String>
		</s:ArrayCollection>	
		<s:ArrayCollection id="acLongtermHireStatus">
			<fx:String>SELECT</fx:String>
			<fx:String>CONTINUE</fx:String>
			<fx:String>COMPLETED</fx:String>
		</s:ArrayCollection>	
	
		
	</fx:Declarations>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!--Model:Bussiness Logic Here/ActionScript Here-->
	<fx:Script>
		<![CDATA[
			
			/***
			 * ABOUT THE CODE
			 * used a property file for avoiding hardcording hire type 'WEDDING'  and code was like following 
			 * resourceManager.getInt('resource','reservation.hiretype.wedding')
			 * 
			 * */
			
			import com.dspl.efinac.components.common.utils.GenericFunctions;
			import com.dspl.malkey.components.odoPopup;
			import com.dspl.malkey.events.TextBoxEvent;
			import com.dspl.malkey.util.Session;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresvehicledamage;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresvehinv;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_FresvehinvPK;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fvehicledamage;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fvinventrylist;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.TextOperationEvent;
			
			
			//Bindable variables Here
			[Bindable] private var session:Session = Session.getInstance();
			[Bindable]private var genericFunctions:GenericFunctions=new GenericFunctions();	
			[Bindable]public var isEnable:Boolean=false;
//			[Bindable]public var resourceManager:IResourceManager = ResourceManager.getInstance();
			
			//non bindable variables Here
			private var CIchildCnt:int=1;
			private var size:uint         = 80;
			private var bgColor:uint      = 0xCCCCCC;
			private var bgColor1:uint     = 0x000000;
/* 			private var bgColor:uint      = 0xFFCC00;
			private var bgColor1:uint     = 0xFFAACC; */
			private var borderColor:uint  = 0x666666;
			private var borderSize:uint   = 0;
			private var cornerRadius:uint = 9;
			private var gutter:uint       = 5;
			private var isCreatedlODOOrgMile:Boolean=false;
			private var isCreatedFuelMeter:Boolean=false;
			

			
			/***
			 * Reset all form (fuel level/inventory/indication of damage)
			 * 
			 * */
			public function resetAll():void
			{
				btnDent.selected=false;
				btnScratch.selected=false;
				isEnable=false;
				resetInventory();
				com_dspl_malkey_domain_Fvehicle=new Com_dspl_malkey_domain_Fvehicle();
				removeAllCI();
				cbUpgrade.selected=false;
 				try{
					if(isCreatedlODOOrgMile){setODOOrgMile("0");}
					if(isCreatedFuelMeter){setFuelLevel("0");}
				}
				catch(e:Error)
				{} 
			}
			
			
			
			public function set setVehicleInventory(ac:ArrayCollection):void
			{
				trace("set setVehicleInventory");
				acFresVehicleInventory=ac;
				setSelectedInventory();
			}
			
			public function get getVehicleInventory():ArrayCollection
			{
				return acFresVehicleInventory;
			}
			
			public function set setVehicleDamage(ac:ArrayCollection):void
			{
				acVehicleDamage.removeAll();
				acVehicleDamage.refresh();
				acVehicleDamage=ac;
				removeAllCI();
				drawDamages();
			}
			
			public function get getVehicleDamage():ArrayCollection
			{
				var acTemp:ArrayCollection=new ArrayCollection();
				for each(var loVehiDamage:Object in acVehicleDamage)
				{

						if(loVehiDamage is Com_dspl_malkey_domain_Fvehicledamage)
						{
							acTemp.addItem(loVehiDamage);
						}
						if(loVehiDamage is Com_dspl_malkey_domain_Fresvehicledamage)
						{
							if(loVehiDamage.ioflag==0){
								var x:Com_dspl_malkey_domain_Fvehicledamage =new Com_dspl_malkey_domain_Fvehicledamage();
								x.damagetype=loVehiDamage.damagetype;
								x.regno=com_dspl_malkey_domain_FresvehiclePK.regno;
								x.xvalue=loVehiDamage.xvalue;
								x.yvalue=loVehiDamage.yvalue;
								acTemp.addItem(x);
							}
						}
					}

				
				trace("length:"+acTemp.length);
				return acTemp;
			}
			
			
			
			
			
			//drawing methods
			
			
			protected function imgCI_clickHandler(event:MouseEvent):void
			{
				if (currentState.toUpperCase() == "STNEW" || currentState.toUpperCase() == "STEDIT"){
					var lnDamageType:int;
					if(btnDent.selected==true){
						lnDamageType = 1;
					} else if(btnScratch.selected==true){
						lnDamageType = 2;
					} else {
						return;
					}
					
					var lnXValue:Number = imgCI.mouseX;
					var lnYValue:Number = imgCI.mouseY;
					var lnChildCount:int = CIchildCnt;			// Store the current value since the "CIchildCnt" would be incremented within doDrawRectCI() method 
					doDrawRectCI(lnXValue,lnYValue,lnDamageType);
					
					// Update the relational table with the damage info
					var loVehiDamage:Com_dspl_malkey_domain_Fvehicledamage = new Com_dspl_malkey_domain_Fvehicledamage();
					loVehiDamage.regno = com_dspl_malkey_domain_FresvehiclePK.regno;
					loVehiDamage.xvalue = lnXValue.toString();
					loVehiDamage.yvalue = lnYValue.toString();
					loVehiDamage.damagetype = lnDamageType;
					loVehiDamage.seq = lnChildCount;
					loVehiDamage.recordid = 0;
					acVehicleDamage.addItem(loVehiDamage);
				}
			}	
			
			
			
			
			private function doDrawRectCI(lx:Number,ly:Number,type:int):void {
				try
				{
					var loChild:Shape = new Shape();
					if(type==1){
						loChild.graphics.beginFill(bgColor);
					} else if(type==2){
						loChild.graphics.beginFill(bgColor1);
					}
					
					loChild.graphics.lineStyle(borderSize, borderColor);
					loChild.graphics.drawRect(lx, ly, 10, 10);
					loChild.graphics.endFill();
					imgCI.addChild(loChild);
					CIchildCnt += 1;
				}
				catch(error:Error)
				{
					Alert.show("doDrawRect: " + error.message);
				}
			}
			
			/***
			 * Button click handlers here
			 * 
			 * */
			public function drawDamages():void
			{
				removeAllCI();
				for each(var loVehiDamage:Object in acVehicleDamage)
				{
					try
					{
							if(loVehiDamage is Com_dspl_malkey_domain_Fvehicledamage)
							{
								doDrawRectCI(loVehiDamage.xvalue,loVehiDamage.yvalue,loVehiDamage.damagetype);
							}
							if(loVehiDamage is Com_dspl_malkey_domain_Fresvehicledamage)
							{
								if(loVehiDamage['ioflag']==0)
								{
									doDrawRectCI(loVehiDamage.xvalue,loVehiDamage.yvalue,loVehiDamage.damagetype);
								}
							}
					}
					catch(e:Error)
					{
							trace("while retriving the propoerty.\n"+e.message);
					}
				}
			}
			
			
			protected function btnDent_clickHandler(event:MouseEvent):void
			{
				btnScratch.selected=false;
			}
			
			
			protected function btnScratch_clickHandler(event:MouseEvent):void
			{
				btnDent.selected=false;
			}
			
			protected function btnUndoMarking_clickHandler(event:MouseEvent):void
			{
				undoCI();	
			}
			
			private function undoCI():void
			{
				if(CIchildCnt>1){
					CIchildCnt -= 1;
					imgCI.removeChildAt(CIchildCnt);
					acVehicleDamage.removeItemAt(CIchildCnt-1);		// Since the array collection is zero based, reduce one
				}
			}
			
			// Remove all the existing damage marks and set the counter to zero
			private function removeAllCI():void{
				try{
				if (CIchildCnt>1){
					CIchildCnt -= 1;
					for (var lnCount:int = CIchildCnt ; lnCount > 0 ; lnCount--)
						imgCI.removeChildAt(lnCount);
					
					CIchildCnt = 1
				}
				}
				catch(e:Error)
				{}
			}  
			// End: Vehicle Damage Marking	

			
			
			

			
			
			
			
			
			
			//Start :Inventory reset and setselect methods are belloow
			public function setSelectedInventory():void
			{
				resetInventory();
				setInventory();
			}
			
			//Start :Inventory reset and setselect methods are belloow
			private function setInventory():void
			{
				
				for(var index:int =0 ; index<acFresVehicleInventory.length;index++)
				{
					for(var index2:int =0 ; index2<acFvinventrylist.length;index2++){
						var tempResinv:Com_dspl_malkey_domain_Fresvehinv=acFresVehicleInventory.getItemAt(index) as Com_dspl_malkey_domain_Fresvehinv;
						var tempInventory:Com_dspl_malkey_domain_Fvinventrylist=acFvinventrylist.getItemAt(index2) as Com_dspl_malkey_domain_Fvinventrylist;
						if(tempResinv.id.invid==tempInventory.invid && tempResinv.checkin==1)
						{
							tempInventory.isselected=1;							
						}
					}
				}
				lstVehiInv.invalidateDisplayList();
				lstVehiInv.invalidateList();
				//wakeup();
			}
			

			/***
			 * Reset the list
			 * set all are unselect
			 * un check all
			 * */
			private function resetInventory():void
			{
				
				for each (var tempInventory:Com_dspl_malkey_domain_Fvinventrylist in  acFvinventrylist)
				{
					tempInventory.isselected=0;
				}			
				lstVehiInv.invalidateDisplayList();
				lstVehiInv.invalidateList();
				//wakeup();
			}
			
			/***
			 * set the selected value as fresvehicleInvetory object and put in to paticular resvehicle object
			 * 
			 * 
			 * */
		//	[Bindable("inventoryChange")]
			public function getSelectedInventory():ArrayCollection
			{
					var acFresVehicleInventory:ArrayCollection =new ArrayCollection();
					for each(var tempInventory:Com_dspl_malkey_domain_Fvinventrylist in acFvinventrylist)
					{
						
						if(tempInventory.isselected==1)
						{
							tempInventory.isselected=1;
							var tempResinv:Com_dspl_malkey_domain_Fresvehinv=new Com_dspl_malkey_domain_Fresvehinv();
							var tempResinvPK:Com_dspl_malkey_domain_FresvehinvPK=new Com_dspl_malkey_domain_FresvehinvPK();
							tempResinvPK.invid=tempInventory.invid;
							tempResinvPK.regno=com_dspl_malkey_domain_Fresvehicle.id.regno;
							tempResinvPK.resno=com_dspl_malkey_domain_Freservation.resno;
							tempResinv.id=tempResinvPK;
							tempResinv.checkin=1;
							acFresVehicleInventory.addItem(tempResinv);
						}
					}
					//follwoing line was not working there for manually set the list before call save method in trReservation
					//com_dspl_malkey_domain_Fresvehicle.lstFresvehinv=acFresVehicleInventory;//sety the values to resvehicle object in vehicle details tab
					return acFresVehicleInventory;
			}
			
			//End :inventory
			
			
			/***
			 * This method dispatch the ratechnage event &
			 *  wakeup for getSelectedInventory
			 * 
			 * */
/* 			public function wakeup():void
			{
				dispatchEvent(new Event("inventoryChange"));
			} */
			

			/***
			 * Inventory item click invent
			 * wakeup() method force to create resVehcleInventory object and put int resvehicle object
			 * 
			 * */
			protected function lstVehiInv_itemClickHandler(event:ListEvent):void
			{
			//	wakeup();
			}



			
			/***
			 * should call before perform checkin operaration
			 * 
			 * */
			public function getBind():void
			{
				com_dspl_malkey_domain_Freservation.cidetenhrs=Number(txtDetentionHours.text);
				com_dspl_malkey_domain_Freservation.cifueldiff=new Number(txtFuelDiff.text).toFixed(2);
				com_dspl_malkey_domain_Freservation.cinightout=int(txtOutofColombo.text);
				com_dspl_malkey_domain_Freservation.ciother=new Number(txtOther.text).toFixed(2);
				com_dspl_malkey_domain_Freservation.cixsmileage=int(txtExcessMileage.text);
				if(com_dspl_malkey_domain_Freservation.hiretypeid != 'SD')
				{
					com_dspl_malkey_domain_Freservation.cinightoutrs=(com_dspl_malkey_domain_Freservation.cinightout*new Number(com_dspl_malkey_domain_Fresdriverrate.nightoutrate)).toFixed(2);
					com_dspl_malkey_domain_Freservation.cidetenhrsrs=(com_dspl_malkey_domain_Freservation.cidetenhrs*new Number(com_dspl_malkey_domain_Fresdriverrate.otrate)).toFixed(2);
				}
				com_dspl_malkey_domain_Freservation.cidamagers=new Number(txtDamage.text).toFixed(2);
			}

			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlert(eventObj:CloseEvent):void
				
			{
				
				//if
				
				if(eventObj.detail==Alert.OK)
					
				{
					com_dspl_malkey_domain_Freservation.cohirestsid=txtHireStatus.selectedItem as String;
					
				}
					
				else if(eventObj.detail==Alert.CANCEL)
					
				{
					txtHireStatus.selectedIndex=0;
					com_dspl_malkey_domain_Freservation.cohirestsid="CHECKIN";
					//no code required here unless you want to notify the user that they have cancelled the operation
					
				}
				
			}
/*
			protected function txtDetentionHours_changeHandler(event:TextOperationEvent):void
			{
				com_dspl_malkey_domain_Freservation.cidetenhrs=int(event.currentTarget.text);
				com_dspl_malkey_domain_Freservation.cidetenhrsrs=(com_dspl_malkey_domain_Freservation.cidetenhrs*new Number(com_dspl_malkey_domain_Fresdriverrate.otrate)).toFixed(2);
			}


			protected function txtOutofColombo_changeHandler(event:TextOperationEvent):void
			{
				com_dspl_malkey_domain_Freservation.cinightout=int(txtOutofColombo.text);
				com_dspl_malkey_domain_Freservation.cinightoutrs=(com_dspl_malkey_domain_Freservation.cinightout*new Number(com_dspl_malkey_domain_Fresdriverrate.nightoutrate)).toFixed(2);
			}

			protected function txtDamage_focusOutHandler(event:FocusEvent):void
			{
				com_dspl_malkey_domain_Freservation.cidamagers=new Number(txtDamage.text).toFixed(2);
			}


			protected function txtOther_focusOutHandler(event:FocusEvent):void
			{
				com_dspl_malkey_domain_Freservation.ciother=new Number(txtOther.text).toFixed(2);
			}


			protected function txtFuelDiff_focusOutHandler(event:FocusEvent):void
			{
				var nan:String=new Number(txtFuelDiff.text).toFixed(2);
				if(nan=="NaN")
				{
					com_dspl_malkey_domain_Freservation.cifueldiff="0";
				}
				else
				com_dspl_malkey_domain_Freservation.cifueldiff=new Number(txtFuelDiff.text).toFixed(2);
					
			}

			*/
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			/***
			 * set vehicle status fuel level and millage
			 * 
			 * 
			 * */
			public function setVehicleStatus():void
			{
				setFuelLevel(com_dspl_malkey_domain_Freservation.cifuellevel.toString());
				setODOOrgMile(com_dspl_malkey_domain_Freservation.cimileage.toString());
				if(com_dspl_malkey_domain_Freservation.cohirestsid=='NOSHOW' ||com_dspl_malkey_domain_Freservation.cohirestsid=='COMPLETED')
				{
					txtHireStatus.selectedItem=com_dspl_malkey_domain_Freservation.cohirestsid;
				}
				getBindOtherCharges();
			}
			
			// Start: Fuel Meter
			protected function setFuelLevel(level:String):void
			{ 
				if(isCreatedFuelMeter){
					var loaderManager:Object = slFuelMeter.content as Object;
					loaderManager.setFuelLevel(level);}
			}
			
			/***
			 * set fuel meeter enable
			 * 
			 * */
			protected function setFuelMeterEnabled(lEnabled:Boolean):void
			{
				var loaderManager:Object = slFuelMeter.content as Object;
				loaderManager.setEnable(lEnabled);
			}
			
			/***
			 * get current fuel level
			 * */
			public function getCurrentFuelMeterLevel():int
			{
				var loaderManager:Object = slFuelMeter.content as Object;
				return loaderManager.getCurrentLevel();
			}
			
			
			protected function slFuelMeter_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			/***
			 * Following method fire when swf is loaded to content
			 * After that set vehicle status method called
			 * */
			protected function slFuelMeter_completeHandler(event:Event):void
			{
				isCreatedFuelMeter=true;
				setVehicleStatus();
			}
			
			
			/***
			 * Following method fire when swf is loaded to content
			 * After that set vehicle status method called
			 * */
			protected function slODOOrgMile_completeHandler(event:Event):void
			{
				isCreatedlODOOrgMile=true;
				setVehicleStatus();
			}
			// End: Fuel Meter
			

			
			
			
			
			
			
			// Start: ODO Meter - Original Mileage
			private function odoOrgrMileOnClick(e:DataEvent):void
			{
				if (currentState.toUpperCase() == "STNEW" || currentState.toUpperCase() == "STEDIT"){
					var pop:odoPopup = new odoPopup();
					pop.cMileage = e.data;
					pop.addEventListener("mileageChange",odoOrgMilePopupClose,false,0,false);
					PopUpManager.addPopUp(pop,this,true,null,null);
					PopUpManager.centerPopUp(pop);
				}
			}
			
			private function odoOrgMilePopupClose(e:DataEvent):void
			{
				if( int(e.data) > com_dspl_malkey_domain_Freservation.comileage)
				{
					setODOOrgMile(e.data);
					com_dspl_malkey_domain_Freservation.cimileage = int(e.data);
					//Fllowing code calculate extra mileage
					
					if((com_dspl_malkey_domain_Freservation.cimileage-com_dspl_malkey_domain_Freservation.comileage) > (com_dspl_malkey_domain_Freservation.chargdays*com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.allotedkms))
					{
						com_dspl_malkey_domain_Freservation.cixsmileage= (com_dspl_malkey_domain_Freservation.cimileage-com_dspl_malkey_domain_Freservation.comileage)-(com_dspl_malkey_domain_Freservation.chargdays*com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.allotedkms);
						com_dspl_malkey_domain_Freservation.cixsmileagers=(com_dspl_malkey_domain_Freservation.cixsmileage* new Number(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate)).toFixed(2);
						txtExcessMileage.toolTip="Rs "+com_dspl_malkey_domain_Freservation.cixsmileagers+"/=\nDetails\n"+com_dspl_malkey_domain_Freservation.cixsmileage+" x "+com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate;
					}
					else
					{
						com_dspl_malkey_domain_Freservation.cixsmileage=0;
					}
					dispatchEvent(new Event("checkInChange"));
				}
				else
				{
					Alert.show("Invalid data.\nCheck-in mileage should be greater-than check-out mileage.","Warning",Alert.OK,null,null,genericFunctions.IconWarning,Alert.OK,null);
				}
			}
			
			public function setExcesMileage():void
			{
					if((com_dspl_malkey_domain_Freservation.cimileage-com_dspl_malkey_domain_Freservation.comileage) > (com_dspl_malkey_domain_Freservation.chargdays*com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.allotedkms))
					{
						com_dspl_malkey_domain_Freservation.cixsmileage= (com_dspl_malkey_domain_Freservation.cimileage-com_dspl_malkey_domain_Freservation.comileage)-(com_dspl_malkey_domain_Freservation.chargdays*com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.allotedkms);
						com_dspl_malkey_domain_Freservation.cixsmileagers=(com_dspl_malkey_domain_Freservation.cixsmileage* new Number(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate)).toFixed(2);
						txtExcessMileage.toolTip="Rs "+com_dspl_malkey_domain_Freservation.cixsmileagers+"/=\nDetails\n"+com_dspl_malkey_domain_Freservation.cixsmileage+" x "+com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate;
					}
					else
					{
						com_dspl_malkey_domain_Freservation.cixsmileage=0;
					}
			}
			
			private function setODOOrgMile(value:String):void
			{
				if(isCreatedlODOOrgMile){
					var loaderManager:Object = slODOOrgMile.content as Object;
					loaderManager.setOdoMeter(value);}
			}
			
			protected function slODOOrgMile_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				slODOOrgMile.addEventListener("ODOClick",odoOrgrMileOnClick,false,0,false);
				
				//isCreatedlODOOrgMile=true;
				
			}
			
			// End: ODO Meter - Original Mileage
			
			
			
			
			

			



			protected function txtHireStatus_changeHandler(event:ListEvent):void
			{
				//if(txtHireStatus.selectedItem as String!="UPGRADE")
			//	{
					if(txtHireStatus.selectedItem as String!="SELECT")
					{
						Alert.show("Are you sure,you want to set hire status to '"+txtHireStatus.selectedItem+"'? \nAnd after changing hire status in to '"+txtHireStatus.selectedItem+"',\nmay not allow to change any hire information",
							"Warning",Alert.OK|Alert.CANCEL,this,confirmAlert,genericFunctions.IconQuestion,Alert.OK);
					}
			//	}
			//	else
			//	{
					/* session.getAttribute("hirestatus"); */
			//	}
			}


			
			/* Start:linkButton Change events------------------------------------------------------------------------------------------- */	
			/***
			 * Following method fire when user enter check-in date,
			 * senario 1:user can add check in date before or after resereved date.
			 * data entry operator should be able to enter back date checkin operations 
			 * senario 1.1:vehicle recieved 15th of august @ mid night and there were nobody to update the system.then user can enter those data @16th of august but chaeck in date shuld be 15th of august.
			 * */
			protected function lnkChangeCheckInDate_clickHandler(event:MouseEvent):void
			{
					dispatchEvent(new Event("dateChange"));
			}
			protected function lnkChange_txtExcessHours_clickHandler(event:MouseEvent):void
			{
				commonPopupMethod(txtExcessHours.text,"Excess Hours","Excess Hours",listener_txtExcessHours);
			}
			protected function lnkChange_txtDetentionHours_clickHandler(event:MouseEvent):void
			{
				commonPopupMethod(txtDetentionHours.text,"Detention Hours","Detention Hours",listener_txtDetentionHours);
			}
			protected function lnkChange_txtOutofColombo_clickHandler(event:MouseEvent):void
			{
				commonPopupMethod(txtOutofColombo.text,"Out of Colombo","Out of Colombo",listener_txtOutofColombo);
			}
			protected function lnkChange_txtOther_clickHandler(event:MouseEvent):void
			{
				commonPopupMethod(txtOther.text,"Other (Rs.)","Other (Rs.)",listener_txtOther);
			}
			protected function lnkChange_txtDamage_clickHandler(event:MouseEvent):void
			{
				commonPopupMethodNegativeEnabeled(txtDamage.text,"Damage (Rs.)","Damage (Rs.)",listener_txtDamage);
			}
			protected function lnkChange_txtFuelDiff_clickHandler(event:MouseEvent):void
			{
				commonPopupMethodNegativeEnabeled(txtFuelDiff.text,"Fuel Diff (Rs.)","Fuel Diff (Rs.)",listener_txtFuelDiff);
			}
			/* END:linkButton Change events------------------------------------------------------------------------------------------- */
			
			
			
			/* Start:Listerners------------------------------------------------------------------------------------------- */

			protected function listener_txtOther(event:TextBoxEvent):void
			{
				com_dspl_malkey_domain_Freservation.ciother=new Number(event.text).toFixed(2);
				dispatchEvent(new Event("checkInChange"));
			}
			protected function listener_txtOutofColombo(event:TextBoxEvent):void
			{
				com_dspl_malkey_domain_Freservation.cinightout=int(event.text);
				com_dspl_malkey_domain_Freservation.cinightoutrs=(com_dspl_malkey_domain_Freservation.cinightout*new Number(com_dspl_malkey_domain_Fresdriverrate.nightoutrate)).toFixed(2);
				dispatchEvent(new Event("checkInChange"));
			}
			protected function listener_txtExcessHours(event:TextBoxEvent):void
			{
				com_dspl_malkey_domain_Freservation.xhours=int(event.text);
				com_dspl_malkey_domain_Freservation.xhoursamt=new Number(com_dspl_malkey_domain_Freservation.xhours*new Number(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xhourrate)).toFixed(2);
				dispatchEvent(new Event("checkInChange"));
			}
			protected function listener_txtDetentionHours(event:TextBoxEvent):void
			{
				com_dspl_malkey_domain_Freservation.cidetenhrs=new Number(Number(event.text).toFixed(2));
				com_dspl_malkey_domain_Freservation.cidetenhrsrs=(com_dspl_malkey_domain_Freservation.cidetenhrs*new Number(com_dspl_malkey_domain_Fresdriverrate.otrate)).toFixed(2);
				dispatchEvent(new Event("checkInChange"));
			}
			protected function listener_txtDamage(event:TextBoxEvent):void
			{
				
				var nan:String=new Number(event.text).toFixed(2);
				if(nan=="NaN")
				{
					com_dspl_malkey_domain_Freservation.cidamagers="0";
				}
				else
					com_dspl_malkey_domain_Freservation.cidamagers=new Number(event.text).toFixed(2);
				
				dispatchEvent(new Event("checkInChange"));
			}
			protected function listener_txtFuelDiff(event:TextBoxEvent):void
			{
				var nan:String=new Number(event.text).toFixed(2);
				if(nan=="NaN")
				{
					com_dspl_malkey_domain_Freservation.cifueldiff="0";
				}
				else
					com_dspl_malkey_domain_Freservation.cifueldiff=new Number(event.text).toFixed(2);
				
				dispatchEvent(new Event("checkInChange"));
			}

			/*  End:Listerners------------------------------------------------------------------------------------------- */
			
			/* Common method to popup TextBox control------------------------------------------------------------------------------------------- */
			
			protected function commonPopupMethod(text:String,titleLabel:String,label:String,myListener:Function):void
			{
				var textbox:TextBox=new TextBox();
				textbox.text=text;
				textbox.label=label;
				textbox.titleLabel=titleLabel;
				textbox.addEventListener("enter",myListener);
				PopUpManager.addPopUp(textbox,this,true);
				PopUpManager.centerPopUp(textbox);
			}
			
			protected function commonPopupMethodNegativeEnabeled(text:String,titleLabel:String,label:String,myListener:Function):void
			{
				var textbox:TextBox=new TextBox();
				textbox.text=text;
				textbox.label=label;
				textbox.titleLabel=titleLabel;
				textbox.setEnableNegative();
				textbox.addEventListener("enter",myListener);
				PopUpManager.addPopUp(textbox,this,true);
				PopUpManager.centerPopUp(textbox);
			}
			/* ------------------------------------------------------------------------------------------- */
			









			protected function btnConfirm_clickHandler(event:MouseEvent):void
			{
				dispatchCopyNewAgreement();
			}
			
			public function dispatchCopyNewAgreement():void
			{
				if(cbUpgrade.selected==true && cbLTUpgrade.selected==false)//CAHNGE VEHICLE
				{
					getVehicleChangeConfirmation();
				}
				else if(cbUpgrade.selected==true && cbLTUpgrade.selected==true)//CAHNGE VEHICLE FOR LONG TERM HIRE
				{
					getVehicleChangeConfirmation();
				}
				else if(cbUpgrade.selected==false && cbLTUpgrade.selected==true)//CAHNGE AGGREMENT WITH SAME VEHIDLE
				{
					getRenewConfirmation();
				}
				else if(cbUpgrade.selected==false && cbLTUpgrade.selected==false)
				{
					
				}
			}
			
			
			public function isCopyNewAgreement():Boolean
			{
				return (cbUpgrade.selected || cbLTUpgrade.selected);
			}
			
			
			/***
			 * FOLLOWING METHOD ASK USER REALY WANT TO CHANGE THE VEHICLE AND CONTINUE THE AGREEMENT
			 * 
			 * 
			 * */
			public function getVehicleChangeConfirmation():void
			{
				Alert.show("Are you sure,you wanna change current vehicle and continue old agreement data?","Warning",Alert.YES|Alert.NO,this,confirmAlertChangeVehicle,genericFunctions.IconQuestion,Alert.OK);
			}
			/***
			 * FOLLOWING METHOD ASK USER REALY WANT TO CHANGE THE VEHICLE AND CONTINUE THE AGREEMENT
			 * 
			 * 
			 * */
			public function getRenewConfirmation():void
			{
				Alert.show("Are you sure,you wanna do bill for the current longterm hire for the selected billing cycle?","Warning",Alert.YES|Alert.NO,this,confirmAlertRenewAgreement,genericFunctions.IconQuestion,Alert.OK);
			}
			
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlertChangeVehicle(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.YES)
				{
					if(cbUpgrade.selected==true)
					{
						dispatchEvent(new Event("vehicleChange"));
					}
					else
					{
						//Alert.show("Please Agree to change vehicle");
					}
				}
				else if(eventObj.detail==Alert.NO)
				{
					
				}
				
			}
			/***
			 * 
			 * 
			 * 
			 * */
			public function confirmAlertRenewAgreement(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.YES)
				{
					var de:DataEvent=new DataEvent("agreementChange");
					if(cbUpgrade.selected==true)
					{
						de.text="true";//
					}
					else
					{
						de.text="false";//
					}
					dispatchEvent(de);
				}
				else if(eventObj.detail==Alert.NO)
				{
					
				}
				
			}
			


			protected function btnOtherCharges_clickHandler():void
			{
				// TODO Auto-generated method stub
				var otherCharges1:Number=new Number(txtOtherCharges1.text);
				var otherCharges2:Number=new Number(txtOtherCharges2.text);
				var otherCharges3:Number=new Number(txtOtherCharges3.text);
				var otherCharges4:Number=new Number(txtOtherCharges4.text);
				var otherCharges5:Number=new Number(txtOtherCharges5.text);
				var otherCharges6:Number=new Number(txtOtherCharges6.text);
				var otherCharges7:Number=new Number(txtOtherCharges7.text);
				var otherCharges8:Number=new Number(txtOtherCharges8.text);
				var otherCharges9:Number=new Number(txtOtherCharges9.text);
				
				if(!(otherCharges1>=0)){txtOtherCharges1.text="0";otherCharges1=0;}
				if(!(otherCharges2>=0)){txtOtherCharges2.text="0";otherCharges2=0;}
				if(!(otherCharges3>=0)){txtOtherCharges3.text="0";otherCharges3=0;}
				if(!(otherCharges4>=0)){txtOtherCharges4.text="0";otherCharges4=0;}
				if(!(otherCharges5>=0)){txtOtherCharges5.text="0";otherCharges5=0;}
				if(!(otherCharges6>=0)){txtOtherCharges6.text="0";otherCharges6=0;}
				if(!(otherCharges7>=0)){txtOtherCharges7.text="0";otherCharges7=0;}
				if(!(otherCharges8>=0)){txtOtherCharges8.text="0";otherCharges8=0;}
				if(!(otherCharges9>=0)){txtOtherCharges9.text="0";otherCharges9=0;}
				com_dspl_malkey_domain_Freservation.ciother=(otherCharges1+otherCharges2+otherCharges3+otherCharges4+otherCharges5+otherCharges6+otherCharges7+otherCharges8+otherCharges9).toFixed(2);
				
				var narationText:String = "Parking Charges=" +otherCharges1+ "\nDriving License Endosment=" +otherCharges2+ "\nAA Licence=" +otherCharges3+ "\nDeco Chargers=" +otherCharges4+ "\nHighway=" +otherCharges5+ "\ncrew bata=" +otherCharges6+"\nBaby Seats "+otherCharges7+"\nGPS Charges "+otherCharges8+"\nDriver Meals And Accommodation  "+otherCharges9;
				com_dspl_malkey_domain_Freservation.othernaration=narationText;
				
				com_dspl_malkey_domain_Freservation.otherChargersDetails=txtOtherCharges1.text+","+txtOtherCharges2.text+","+txtOtherCharges3.text+","+txtOtherCharges4.text+","+txtOtherCharges5.text+","+txtOtherCharges6.text+","+txtOtherCharges7.text+","+txtOtherCharges8.text+","+txtOtherCharges9.text;
				
			}
			
			private function getBindOtherCharges():void
			{
				try{
				var a:Array = com_dspl_malkey_domain_Freservation.otherChargersDetails.split(",");
				for(var i:int=0; i<a.length; i++)
				{
					if(i==0)
					{
						txtOtherCharges1.text=a[i];
					}
					if(i==1)
					{
						txtOtherCharges2.text=a[i];
					}
					if(i==2)
					{
						txtOtherCharges3.text=a[i];
					}
					if(i==3)
					{
						txtOtherCharges4.text=a[i];
					}
					if(i==4)
					{
						txtOtherCharges5.text=a[i];
					}
					if(i==5)
					{
						txtOtherCharges6.text=a[i];
					}
				}
				}
				catch(e:Error)
				{
				e.getStackTrace();
				}
			}

		]]>
	</fx:Script>
	
</s:Group>

