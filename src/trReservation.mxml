<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				minWidth="916" minHeight="516" 
				xmlns:local="*"
				initialize="titlewindow1_initializeHandler(event)"
				title="{titleText}"
				width="1250" height="600"
				close="titlewindow1_closeHandler(event)"				
				xmlns:services="com.dspl.malkey.services.*" 
				xmlns:controls="com.dspl.efinac.components.common.controls.*" 
				xmlns:valueObjects="com.dspl.malkey.valueObjects.*" 
				currentStateChange="currentStateChangeHandler(event)"
				currentState="stUndo" 
				xmlns:components="com.dspl.malkey.components.*" 
				xmlns:util="com.dspl.malkey.util.*"
				creationComplete="titlewindow1_creationCompleteHandler(event)"
				>

	
	
	
	
	
	
	
	
	
	
	<!--Sates are here-->
	<s:states>
		<s:State name="State1"   	id="State1"/>
		<s:State name="stDelete" 	id="stDelete"/>
		<s:State name="stEdit" 		id="stEdit"/>
		<s:State name="stNew"    	id="stNew"/>
		<s:State name="stView"  	id="stView"/>
		<s:State name="stUndo"  	id="stUndo"/>
	</s:states>
	
	
	
	
	
	
	
	
	
	
	
	<!--METADATA here-->
	<fx:Metadata>
		[Event(name="saveAgr",type="flash.events.Event")]
		[Event(name="createCompleate",type="flash.events.Event")]
		[Event(name="changeRate",type="flash.events.Event")]
		[Event(name="reloadCopy",type="flash.events.Event")]
		
	</fx:Metadata>

	
	
	
	
	
	
	
	
	
	<fx:Declarations>
		
		
		
		
		
		
		
		
		<!--Validators-->
		
		<mx:NumberValidator source="{nsNumDays}" 
							property="value" 
							integerError="Enter Integer value"
							minValue="1" 
							maxValue="1000" 
							domain="int" 
							id="nvNumDays"
							enabled.stView="false"
							enabled.stEdit="false"
							enabled.stNew="true"
							/>
		
		<mx:NumberValidator source="{nsChargeableDays}" 
							property="value" 
							integerError="Enter Integer value"
							minValue="1" 
							maxValue="1000" 
							domain="int" 
							id="nvChargeableDays"/>
		
		<mx:StringValidator id="svHireType"
							source="{txtHireType}"
							property="text"
							/>
		<mx:StringValidator id="svHireStatus"
							source="{txtHireStatus}"
							property="text"
							/>
		<mx:StringValidator id="svBillingBasis"
							source="{txtBillingBasis}"
							property="text"
							/>
		
		<mx:DateValidator  id="dvOut"
						   source="{dtDateOut}"
						   property="selectedDate"
						   />
		
		<mx:DateValidator  id="dvIn"
						   source="{dtDateIn}"
						   property="selectedDate"
						   />
		

		
		
		
		
		
		
		
		
		
		<!--RadioButtonGroups here-->
		<mx:RadioButtonGroup id="transactionType" />
		
		<!--Formatters here-->
		<mx:DateFormatter id="dateFormatter" formatString="@Resource(key='dateFormat',bundle='resource')"/>
		
		
		
		
		
		
		
		
		
		
		
		
		<!--valueObjects/domains here-->
		<valueObjects:Com_dspl_malkey_domain_Freshed id="com_dspl_malkey_domain_Freshed"/>
		<valueObjects:Com_dspl_malkey_domain_Freservation id="com_dspl_malkey_domain_Freservation"/>
		<valueObjects:Com_dspl_malkey_domain_Fdebtor id="com_dspl_malkey_domain_Fdebtor"/>
		<valueObjects:Com_dspl_malkey_domain_Fresvehicle id="com_dspl_malkey_domain_Fresvehicle"/>
		<valueObjects:Com_dspl_malkey_domain_Fresvehiclerate id="com_dspl_malkey_domain_Fresvehiclerate"/>
		<valueObjects:Com_dspl_malkey_domain_Fvehicle id="com_dspl_malkey_domain_Fvehicle"/>
		<valueObjects:Com_dspl_malkey_domain_Fresdriver id="com_dspl_malkey_domain_Fresdriver"/>
		<valueObjects:Com_dspl_malkey_domain_Fresdriverrate id="com_dspl_malkey_domain_Fresdriverrate"/>
		<valueObjects:Com_dspl_malkey_domain_FresdriverratePK id="com_dspl_malkey_domain_FresdriverratePK"/>
		
		<!--<valueObjects:Com_dspl_malkey_domain_Fresaccs id="com_dspl_malkey_domain_Fresaccs"/>
		<valueObjects:Com_dspl_malkey_domain_FresaccsPK id="com_dspl_malkey_domain_FresaccsPK"/>-->
		
		
		
		
		
		
		
		
		<!--CallResponders here-->
		<s:CallResponder id="crFhiretypeSRVListAll"/>
		<s:CallResponder id="crFaccessoryListAll"/>
		<s:CallResponder id="crFothersrvSRVListAll"/>
		<s:CallResponder id="crfdebtorSRVListAll"/>
		<s:CallResponder id="crFguarantorSRVListAll"/>
		<s:CallResponder id="crFvehicleclassSRVListAll"/>
		<s:CallResponder id="crFvehicleSRVListAll" result="crFvehicleSRVListAll_resultHandler(event)"/>
		<s:CallResponder id="crFvehicletransSRVListAll"/>
		<s:CallResponder id="crFvehicletypeSRVListAll"/>
		<s:CallResponder id="crFvehiclemakeSRVListAll"/>
		<s:CallResponder id="crFvehiclemodelSRVListAll"/>
		<s:CallResponder id="crFclienttypeSRVListAll"/>
		<s:CallResponder id="crDriverListAllResult" 					result="crDriverListAllResult_resultHandler(event)"/>
		<s:CallResponder id="crFclientdriverSRVListAll"/>
		<s:CallResponder id="crFclientdriverSRVlistByClientid"/>
		<s:CallResponder id="crFaddchargeSRVListAll"/>
		<s:CallResponder id="crFpaytypeSRVListAll"/>
		<s:CallResponder id="crFratetypeSRVlistAll" 					result="crFratetypeSRVlistAll_resultHandler(event)"/>
		<s:CallResponder id="crFdriverrateSRVListAll"/>
		<s:CallResponder id="crFreservationSRVcreate" 					result="crFreservationSRVcreate_resultHandler(event)" fault="crFreservationSRVcreate_faultHandler(event)"/>
		<s:CallResponder id="crFhirestatusSRVListAll"/>
		<s:CallResponder id="crFreservationSRVListAll" 					result="crFreservationSRVListAll_resultHandler(event)"/>
		<s:CallResponder id="crFresvehicleSRVlistByResNo" 				result="crFresvehicleSRVlistByResNo_resultHandler(event)"/>
		<s:CallResponder id="crFresaccsSRVlistAllByresNo" 				result="crFresaccsSRVlistAllByresNo_resultHandler(event)"/>
		<s:CallResponder id="crFresothsrvSRVlistByResNo" 				result="crFresothsrvSRVlistByResNo_resultHandler(event)"/>
		<s:CallResponder id="crFresdriverSRVlistByResno" 				result="crFresdriverSRVlistByResno_resultHandler(event)"/>
		<s:CallResponder id="crFresdriverrateSRVfindByResno" 			result="crFresdriverrateSRVfindByResno_resultHandler(event)"/>
		<s:CallResponder id="crFreservationSRVremoveByID"				result="crFreservationSRVremoveByID_resultHandler(event)"/>
		<s:CallResponder id="crFresothersrvrateSRVlistByResno"/>
		<s:CallResponder id="crFresvehiclerateSRVlistByResno" 			result="crFresvehiclerateSRVlistByResno_resultHandler(event)"/>
		<s:CallResponder id="updateResult" 								result="updateResult_resultHandler(event)"/>
		<s:CallResponder id="crFresaccrateSRVlistAllByResno" 			result="crFresaccrateSRVlistAllByResno_resultHandler(event)"/>
		<s:CallResponder id="crfresaddchargeSRVlistByresno" 			result="crfresaddchargeSRVlistByresno_resultHandler(event)"/>
		<s:CallResponder id="crfresvehinvSRVlistByResno" 				result="crfresvehinvSRVlistByResno_resultHandler(event)"/>
		<s:CallResponder id="crfvinventrylistSRVListAll"/>
		<!--<s:CallResponder id="crVehicleDamage" result="crVehicleDamage_resultHandler(event)"/>-->
		<s:CallResponder id="crfvehicleinventrySRVlistByRegNo" 			result="listByRegNoResult_resultHandler(event)"/>
		<s:CallResponder id="crFvehicledamageSRVlistByRegNo" 			result="crFvehicledamageSRVlistByRegNo_resultHandler(event)"/>		
		<s:CallResponder id="crFresvehicledamageSRVlistByRegNo" 		result="crFresvehicledamageSRVlistByRegNo_resultHandler(event)"/>
		<s:CallResponder id="changeStatusResult" 						result="changeStatusResult_resultHandler(event)" 					fault="changeStatusResult_faultHandler(event)"/>
		<s:CallResponder id="crVehiclesearchSRVsearchVehicles" 			result="crVehiclesearchSRVsearchVehicles_resultHandler(event)"/>
		<s:CallResponder id="crDriverListAvailableResult" 				result="DriverListAvailableResult_resultHandler(event)" 			fault="DriverListAvailableResult_faultHandler(event)"/>
		<s:CallResponder id="crFresdriverrateSRVFindByResno"/>
		<s:CallResponder id="crFvehiclerateEligibleForChange" 				result="crFvehiclerateEligibleForChange_resultHandler(event)"/>
		<s:CallResponder id="crFvehiclerateEligibleForChangeRateType" 		result="crFvehiclerateEligibleForChangeRateType_resultHandler(event)"/>
		<s:CallResponder id="crFreservationSRVlistAllByResno" 				result="crFreservationSRVlistAllByResno_resultHandler(event)"/>
		<s:CallResponder id="crFreservationSRVlistAllByResnoCopyMode" 		result="crFreservationSRVlistAllByResnoCopyMode_resultHandler(event)"/>
		<s:CallResponder id="crFcompanytaxSRVgetTaxComCodeResult"			result="crFcompanytaxSRVgetTaxComCodeResult_resultHandler(event)" fault="crFcompanytaxSRVgetTaxComCodeResult_faultHandler(event)"/>
		<s:CallResponder id="crChangeVehicle"								result="crChangeVehicle_resultHandler(event)" fault="crChangeVehicle_faultHandler(event)"/>
		<s:CallResponder id="crChangeCheckOutVehicle"						result="crChangeCheckOutVehicle_resultHandler(event)"	fault="crChangeCheckOutVehicle_faultHandler(event)"/>
		<s:CallResponder id="crDriverListByResnoResult" 					result="crDriverListByResnoResult_resultHandler(event)"/>
		<s:CallResponder id="crLocationListAll" 							result="crLocationListAll_resultHandler(event)"/>
		<s:CallResponder id="crLocationListAllCI" 							result="crLocationListAllCI_resultHandler(event)"/>
		<s:CallResponder id="crListAllResult" result="crListAllResult_resultHandler(event)" fault="crListAllResult_faultHandler(event)"/>		
		
		
		
		
		
		<!--services here-->
		<services:FhiretypeSRV 			id="fhiretypeSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FaccessorySRV 		id="faccessorySRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FothersrvSRV 			id="fothersrvSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FdebtorSRV 			id="fdebtorSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FguarantorSRV 		id="fguarantorSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FvehicleclassSRV 		id="fvehicleclassSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FvehicleSRV 			id="fvehicleSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FvehicletransSRV 		id="fvehicletransSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FvehicletypeSRV 		id="fvehicletypeSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FvehiclemakeSRV 		id="fvehiclemakeSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FvehiclemodelSRV 		id="fvehiclemodelSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FclienttypeSRV 		id="fclienttypeSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FemployeeSRV 			id="femployeeSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FclientdriverSRV 		id="fclientdriverSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FaddchargeSRV 		id="faddchargeSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FpaytypeSRV 			id="fpaytypeSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FaccrateSRV 			id="faccrateSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FratetypeSRV 			id="fratetypeSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FdriverrateSRV 		id="fdriverrateSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FreservationSRV 		id="freservationSRV" 	endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FhirestatusSRV 		id="fhirestatusSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FvehiclerateSRV 		id="fvehiclerateSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FresvehicleSRV 		id="fresvehicleSRV" 		endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FresothsrvSRV 		id="fresothsrvSRV" 			endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FresaccsSRV 			id="fresaccsSRV" 			endpoint="@Resource(key='url', bundle='resource')" showBusyCursor="true"/>
		<services:FresdriverSRV 		id="fresdriverSRV" 			endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FresdriverrateSRV 	id="fresdriverrateSRV" 		endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FresaccrateSRV 		id="fresaccrateSRV" 		endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FresothersrvrateSRV 	id="fresothersrvrateSRV" 	endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FresvehiclerateSRV 	id="fresvehiclerateSRV" 	endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FresaddchargeSRV 		id="fresaddchargeSRV" 		endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FresvehinvSRV 		id="fresvehinvSRV" 			endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FvinventrylistSRV 	id="fvinventrylistSRV" 		endpoint="@Resource(key='url', bundle='resource')" 	showBusyCursor="true"/>
		<services:FvehicledamageSRV 	id="fvehicledamageSRV"  	endpoint="@Resource(key='url',bundle='resource')" 	showBusyCursor="true"/>
		<services:FvehicleinventrySRV 	id="fvehicleinventrySRV" 	endpoint="@Resource(key='url',bundle='resource')" 	showBusyCursor="true"/>
		<services:FresvehicledamageSRV 	id="fresvehicledamageSRV" 	endpoint="@Resource(key='url',bundle='resource')" 	showBusyCursor="true"/>
		<services:VehiclesearchSRV 		id="vehiclesearchSRV" 		endpoint="@Resource(key='url',bundle='resource')" 	showBusyCursor="true"/>
		<services:FcompanytaxSRV 		id="fcompanytaxSRV" 		endpoint="@Resource(key='url',bundle='resource')"  	showBusyCursor="true"/>
		<services:FlocationSRV id="flocationSRV" endpoint="@Resource(key='url',bundle='resource')" showBusyCursor="true"/>
		<services:SubCustomerSRV  id="srvSubCustomerSRV"  endpoint="@Resource(key='url',bundle='resource')" />	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		<s:ArrayCollection id="acBillingBasis">
			<fx:Object label="MONTHLY" 	des="Monthly Billing" />
			<fx:Object label="QUARTALY" des="Quartaly Billing" />
		</s:ArrayCollection>
		
		<!--Keep the time values-->
		<s:ArrayCollection id="acTime">
			<fx:String>00:00:00</fx:String>
			<fx:String>00:30:00</fx:String>
			<fx:String>01:00:00</fx:String>
			<fx:String>01:30:00</fx:String>
			<fx:String>02:00:00</fx:String>
			<fx:String>02:30:00</fx:String>
			<fx:String>03:00:00</fx:String>
			<fx:String>03:30:00</fx:String>
			<fx:String>04:00:00</fx:String>
			<fx:String>04:30:00</fx:String>
			<fx:String>05:00:00</fx:String>
			<fx:String>05:30:00</fx:String>
			<fx:String>06:00:00</fx:String>
			<fx:String>06:30:00</fx:String>
			<fx:String>07:00:00</fx:String>
			<fx:String>07:30:00</fx:String>
			<fx:String>08:00:00</fx:String>
			<fx:String>08:30:00</fx:String>
			<fx:String>09:00:00</fx:String>
			<fx:String>09:30:00</fx:String>
			<fx:String>10:00:00</fx:String>
			<fx:String>10:30:00</fx:String>
			<fx:String>11:00:00</fx:String>
			<fx:String>11:30:00</fx:String>
			<fx:String>12:00:00</fx:String>
			<fx:String>12:30:00</fx:String>
			<fx:String>13:00:00</fx:String>
			<fx:String>13:30:00</fx:String>
			<fx:String>14:00:00</fx:String>
			<fx:String>14:30:00</fx:String>
			<fx:String>15:00:00</fx:String>
			<fx:String>15:30:00</fx:String>
			<fx:String>16:00:00</fx:String>
			<fx:String>16:30:00</fx:String>
			<fx:String>17:00:00</fx:String>
			<fx:String>17:30:00</fx:String>
			<fx:String>18:00:00</fx:String>
			<fx:String>18:30:00</fx:String>
			<fx:String>19:00:00</fx:String>
			<fx:String>19:30:00</fx:String>
			<fx:String>20:00:00</fx:String>
			<fx:String>20:30:00</fx:String>
			<fx:String>21:00:00</fx:String>
			<fx:String>21:30:00</fx:String>
			<fx:String>22:00:00</fx:String>
			<fx:String>22:30:00</fx:String>
			<fx:String>23:00:00</fx:String>
			<fx:String>23:30:00</fx:String>
		</s:ArrayCollection>

		
		

	</fx:Declarations>
	

	
	
	
	
	
	
	
	
	
	<!--Bindings Here-->
	<fx:Binding destination="dtDateIn.selectedDate" 				source="com_dspl_malkey_domain_Freservation.din" 		twoWay="true"/>
	<fx:Binding destination="nsChargeableDays.value" 				source="com_dspl_malkey_domain_Freservation.chargdays" 	twoWay="true"/>
	<fx:Binding destination="nsNumDays.value" 						source="com_dspl_malkey_domain_Freservation.noofday" 	twoWay="true"/>
	<fx:Binding destination="com_dspl_malkey_domain_Fresdriver" 	source="cmpRates.com_dspl_malkey_domain_Fresdriver"/>
	<fx:Binding destination="com_dspl_malkey_domain_Fdebtor" 		source="genericFunctions.getArrayCollection(session.getAttribute('acClient'),'debcode',(Com_dspl_malkey_domain_Freshed(session.getAttribute('reshed'))).debcode) as Com_dspl_malkey_domain_Fdebtor"/>
	<fx:Binding destination="com_dspl_malkey_domain_Fresvehicle" 	source="{cmpVehicleDetails.acResVehicle.length!=0 ? (cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle) : null }"/>
	
	
	
	

	
	
	
	
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace controls "com.dspl.efinac.components.common.controls.*";
		@namespace services "services.*";
		
		.formItems
		{
			label-width:60;
		}
		.formItem
		{
			label-width:80;
		}
		
		.formItemL
		{
			label-width:120;
		}
		.formItemXL
		{
			label-width:180;
		}
		
		.formItemLabel
		{
			text-align:left;
		}
		
	
		
		
	</fx:Style>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<fx:Script>
		<![CDATA[
			import com.dspl.efinac.components.common.utils.GenericFunctions;
			import com.dspl.malkey.events.CustomerSelectionEvent;
			import com.dspl.malkey.events.DateSelectionEvent;
			import com.dspl.malkey.events.DeleteCommentEvent;
			import com.dspl.malkey.events.TextBoxEvent;
			import com.dspl.malkey.services.FdebtorSRV;
			import com.dspl.malkey.util.DateOperation;
			import com.dspl.malkey.util.HireStatus;
			import com.dspl.malkey.util.Message;
			import com.dspl.malkey.util.RateType;
			import com.dspl.malkey.util.Session;
			import com.dspl.malkey.util.Tax;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_AuditTrail;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_CommMF;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Faccessory;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fdebtor;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fdriverrate;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Femployee;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fpass;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresaccs;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresdriver;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresdriverrate;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Freservation;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Freshed;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresothersrvrate;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresothsrv;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresvehicle;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresvehicledamage;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresvehiclerate;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fresvehinv;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_FresvehinvPK;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fvehicleinventry;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_Fvehiclerate;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_domain_FvehicleratePK;
			import com.dspl.malkey.valueObjects.Com_dspl_malkey_report_Reservation;
			
			import flash.desktop.Clipboard;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.core.ContainerCreationPolicy;
			import mx.core.IUITextField;
			import mx.effects.Move;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.StateChangeEvent;
			import mx.formatters.NumberBaseRoundType;
			import mx.formatters.NumberFormatter;
			import mx.graphics.codec.JPEGEncoder;
			import mx.managers.PopUpManager;
			import mx.managers.SystemManager;
			import mx.messaging.messages.ErrorMessage;
			import mx.preloaders.Preloader;
			import mx.resources.IResourceManager;
			import mx.resources.ResourceManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			import mx.validators.Validator;
			
			
			
			/*My Varaibles*/
			[Bindable] private var acAccessory:ArrayCollection = new ArrayCollection();
			[Bindable] private var session:Session = Session.getInstance();
			[Bindable] private var genericFunctions:GenericFunctions=new GenericFunctions();
			[Bindable] private var btnCode:String="";
			[Bindable] private var isCheckInDateChanged:Boolean=false;
			[Bindable] private var isCopy:Boolean=false;
			[Bindable] private var isVehicleChangeMode:Boolean=false;
			[Bindable] public var acReservation:ArrayCollection=new ArrayCollection();
			[Bindable] public var acHireStatus:ArrayCollection=new ArrayCollection();
			[Bindable] public var acClient:ArrayCollection=new ArrayCollection();
			[Bindable] public var acHireType:ArrayCollection=new ArrayCollection();
			[Bindable] public var acGuarantor:ArrayCollection=new ArrayCollection();
			[Bindable] public var acOtherSRV:ArrayCollection=new ArrayCollection();
			[Bindable] public var acVehicleclass:ArrayCollection=new ArrayCollection();
			[Bindable] public var acVehicletype:ArrayCollection=new ArrayCollection();
			[Bindable] public var acVehiclemake:ArrayCollection=new ArrayCollection();
			[Bindable] public var acVehiclemodel:ArrayCollection=new ArrayCollection();
			[Bindable] public var acClienttype:ArrayCollection=new ArrayCollection();
			[Bindable] public var acAddcharge:ArrayCollection=new ArrayCollection();
			[Bindable] public var acClientdriver:ArrayCollection=new ArrayCollection();
			[Bindable] public var acPaytype:ArrayCollection=new ArrayCollection();
			[Bindable] public var acDriverrate:ArrayCollection=new ArrayCollection();
			[Bindable] public var acInventry:ArrayCollection=new ArrayCollection();
			[Bindable] public var acVehicletrans:ArrayCollection=new ArrayCollection();
			[Bindable] public var acVehicle:ArrayCollection=new ArrayCollection();
			[Bindable] public var acDriver:ArrayCollection=new ArrayCollection();
			[Bindable] public var acRateType:ArrayCollection=new ArrayCollection();
			[Bindable] public var acSubCustomer:ArrayCollection=new ArrayCollection();
//			[Bindable] public var acAccessory:ArrayCollection=new ArrayCollection();
			[Bindable] public var cmpRates_isEnable:Boolean=false;
			[Bindable] public var cmpCheckOut_isEnable:Boolean=false;
			[Bindable] public var cmpCheckIn_isEnable:Boolean=false;
			[Bindable] public var cmpVehicleDetails_isEnable:Boolean=false;
			[Bindable] public var cmpCustomerDetails_isEnable:Boolean=false;
			[Bindable] public var cmpDriverDetails_isEnable:Boolean=false;
			[Bindable] public var cmpAccessoryService_isEnable:Boolean=false;
			[Bindable] public var cmpOtherService_isEnable:Boolean=false;
			[Bindable] private var myValidators:Array;
			[Bindable] public var isHireTypeEditable:Boolean=true;
			[Bindable] public var tax:Tax=new Tax("");
			[Bindable] public var hasnotPaidDeposit:Boolean=true;
			[Bindable] public var hasnotPaidAdvance:Boolean=true;
			[Bindable] public var excessMileageRateTotal:Number=0;//total amount 
			[Bindable] public var excessHourRateTotal:Number=0;
			[Bindable] public var extraHourDiscout:Number=0;
			[Bindable] public var extraMileageDiscout:Number=0;//total amount 
			[Bindable] public var detentionDiscount:Number;//total amount 
			[Bindable] public var detentionRsTotal:Number;//total amount 
			[Bindable] public var outofColomboRsTotal:Number;//total amount 
			[Bindable] public var outofColomboDiscout:Number;//total amount 
			[Bindable] public var titleText:String="Reservation/Check-Out/Check-In";//total amount 
			[Bindable] public var rManager:IResourceManager = ResourceManager.getInstance();
			[Bindable] public var NO_OF_DECIMAL_POINT:int=rManager.getInt("resource","noofdecimals.reservation");
			[Bindable] public var nFormatter:NumberFormatter=new NumberFormatter();
			public var reservationDetails:Com_dspl_malkey_report_Reservation;
			public var oldHireStatus:String="";
			public var oldHireType:String="";
			public var oldRateType:String="";
			public var mode:String="new";
			public var hirestatusmode:String="new";
			

			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			private function setHireTypeSelectable():Boolean
			{
				switch(com_dspl_malkey_domain_Freservation.cohirestsid)
				{
				case "BOOKED" :
					isHireTypeEditable=true;
					break;
				case "CANCELLED" :
					isHireTypeEditable=true;
					break;
				case "CHECKIN" :
					isHireTypeEditable=false;
					break;
				case "CHECKOUT" :
					isHireTypeEditable=false;
					break;
				case "COMPLETED" :
					isHireTypeEditable=false;
					break;
				case "CONFIRMED" :
					isHireTypeEditable=true;
					break;
				case "INQUIRY" :
					isHireTypeEditable=true;
					break;
				case "NOSHOW" :
					isHireTypeEditable=false;
					break;
				case "PREPARED" :
					isHireTypeEditable=true;
					break;
				case "QUOTE" :
					isHireTypeEditable=true;
					break;
				case "COPY" :
					isHireTypeEditable=false;
					break;
				default :
					isHireTypeEditable=true;
					break;
				
				}

			return isHireTypeEditable;
			}
			

			
			private function filterRates(item:Object):Boolean
			{
				if(txtHireType._nSelectedIndex<0)
				{
					return false;
				}
				else
				{
					if(txtHireType._acDataProvider.getItemAt(txtHireType._nSelectedIndex).hiretypeid==item["id"])
					{
						return true;
					}
					else
					{
						return false;
					}
				}
			}
			
			protected function titlewindow1_closeHandler(event:CloseEvent):void
			{
				Message.displayAlert(4,"Are you sure you want to close the window?","Confirmation",closeConfirmationAlert);
			}
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function closeConfirmationAlert(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.YES)
				{
					resetForm();
					PopUpManager.removePopUp(this);
				}
				
			}
			

			
			/*Following are the service calls for the listing functions
			cr-prefix for calresponders*/
			protected function listAllFhiretypeSRV():void
			{
				crFhiretypeSRVListAll.token = fhiretypeSRV.ListAll();
			}
			
			protected function listAllFaccessorySRV():void
			{
				crFaccessoryListAll.token = faccessorySRV.ListAll();
			}
			
			protected function listAllFothersrvSRV():void
			{
				crFothersrvSRVListAll.token = fothersrvSRV.ListAll();
			}
			
			protected function listAllFclientSRV():void
			{
				crfdebtorSRVListAll.token = fdebtorSRV.ListAll();
			}
			
			
			protected function listAllFguarantorSRV():void
			{
				crFguarantorSRVListAll.token = fguarantorSRV.ListAll();
			}
			/*Vehicle tab data loading  */
			protected function listAllFvehicleclassSRV():void
			{
				crFvehicleclassSRVListAll.token = fvehicleclassSRV.ListAll();
			}
			protected function listAllFvehicleSRV():void
			{
				crFvehicleSRVListAll.token = fvehicleSRV.listAll();
			}
			protected function listAllFvehicletransSRV():void
			{
				crFvehicletransSRVListAll.token = fvehicletransSRV.ListAll();
			}
			protected function listAllFvehicletypeSRV():void
			{
				crFvehicletypeSRVListAll.token = fvehicletypeSRV.ListAll();
			}
			protected function listAllFvehiclemakeSRV():void
			{
				crFvehiclemakeSRVListAll.token = fvehiclemakeSRV.ListAll();
			}
			
			
			protected function listAllFvehiclemodelSRV():void
			{
				crFvehiclemodelSRVListAll.token = fvehiclemodelSRV.ListAll();
			}
			protected function listAllFclienttypeSRVListAll():void
			{
				crFclienttypeSRVListAll.token = fclienttypeSRV.ListAll();
			}
			protected function driverListAll():void
			{
				crDriverListAllResult.token = femployeeSRV.DriverListAll();
			}
			protected function listAllFclientdriverSRV():void
			{
				crFclientdriverSRVListAll.token = fclientdriverSRV.ListAll();
			}
			protected function listByClientidFclientdriverSRV(arg0:String):void
			{
				crFclientdriverSRVlistByClientid.token = fclientdriverSRV.listByClientid(arg0);
			}
			protected function listAllFaddchargeSRV():void
			{
				crFaddchargeSRVListAll.token = faddchargeSRV.ListAll();
			}
			protected function listAllFpaytypeSRV():void
			{
				crFpaytypeSRVListAll.token = fpaytypeSRV.ListAll();
			}

			protected function listAllFratetypeSRV():void
			{
				crFratetypeSRVlistAll.token = fratetypeSRV.listAll();
			}
			
			protected function listAllFdriverrateSRV():void
			{
				crFdriverrateSRVListAll.token = fdriverrateSRV.ListAll();
			}
			
			protected function listAllFhirestatusSRV():void
			{
				crFhirestatusSRVListAll.token = fhirestatusSRV.ListAll();
			}
			
/* 			protected function listAllFreservationSRV():void
			{
				crFreservationSRVListAll.token = freservationSRV.ListAll();
			} */
			
			protected function listByResNoFresvehicleSRV(key:String):void
			{
				crFresvehicleSRVlistByResNo.token = fresvehicleSRV.listByResNo(key);
			}
			
			protected function listFresothsrvSRVByResNo(key:String):void
			{
				crFresothsrvSRVlistByResNo.token = fresothsrvSRV.listByResNo(key);
			}
			
			
			protected function listFresaccsSRVByresNo(key:String):void
			{
				crFresaccsSRVlistAllByresNo.token = fresaccsSRV.listAllByresNo(key);
			}
			
			

			protected function createFreservationSRV(arg0:Com_dspl_malkey_domain_Freservation,arg10:Com_dspl_malkey_domain_Freshed, arg1:ArrayCollection, arg2:ArrayCollection, arg3:ArrayCollection, arg4:ArrayCollection, arg5:Com_dspl_malkey_domain_Fresvehiclerate, arg6:ArrayCollection, arg7:Com_dspl_malkey_domain_Fresdriverrate, arg8:ArrayCollection, arg9:ArrayCollection,arg12:ArrayCollection,arg11:Boolean):void
			{
				Mouse.hide();
				setDisableButtonBar();
				crFreservationSRVcreate.token = freservationSRV.create(arg0,arg10, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8,arg9,arg12,arg11);
			}
			

			
			protected function listByResnoFresdriverSRV(arg0:String):void
			{
				crFresdriverSRVlistByResno.token = fresdriverSRV.listByResno(arg0);
			}
			
			protected function fresdriverrateSRVFindByResno(arg0:String):void
			{
				crFresdriverrateSRVfindByResno.token = fresdriverrateSRV.findByResno(arg0);
			}
			
			protected function removeByIDFreservationSRV(arg0:String):void
			{
				crFreservationSRVremoveByID.token = freservationSRV.removeByID(arg0);
			}
			
			
			protected function listAllByResnoFresaccrateSRV(arg0:String):void
			{
				crFresaccrateSRVlistAllByResno.token = fresaccrateSRV.listAllByResno(arg0);
			}
			
			
			protected function listByResnoFresothersrvrateSRV(arg0:String):void
			{
				crFresothersrvrateSRVlistByResno.token = fresothersrvrateSRV.listByResno(arg0);
			}
			
			
			protected function listByResnoFresvehiclerateSRV(arg0:String):void
			{
				crFresvehiclerateSRVlistByResno.token = fresvehiclerateSRV.listByResno(arg0);
			}
			protected function listByResnoFresvehinvSRV(arg0:String):void
			{
				crfresvehinvSRVlistByResno.token = fresvehinvSRV.listByResno(arg0);
			}
			protected function listAllFvinventrylistSRV():void
			{
				crfvinventrylistSRVListAll.token = fvinventrylistSRV.ListAll();
			}
			protected function listByRegNoFvehicleinventrySRV(arg0:String):void
			{
				crfvehicleinventrySRVlistByRegNo.token = fvehicleinventrySRV.listByRegNo(arg0);
			}
			protected function listByRegNoFvehicledamageSRV(arg0:String):void
			{
				crFvehicledamageSRVlistByRegNo.token = fvehicledamageSRV.listByRegNo(arg0);
			}
			protected function listByRegNoFresvehicledamageSRV(arg0:String,arg1:String):void
			{
				crFresvehicledamageSRVlistByRegNo.token = fresvehicledamageSRV.listByRegNo(arg0,arg1);
			}
			protected function changeStatus(arg0:Com_dspl_malkey_domain_Freservation,arg12:Com_dspl_malkey_domain_Freshed, arg1:ArrayCollection, arg2:ArrayCollection, arg3:ArrayCollection, arg4:ArrayCollection, arg5:Com_dspl_malkey_domain_Fresvehiclerate, arg6:ArrayCollection, arg7:Com_dspl_malkey_domain_Fresdriverrate, arg8:ArrayCollection, arg9:ArrayCollection,arg13:ArrayCollection, arg10:ArrayCollection, arg11:ArrayCollection):void
			{
				Mouse.hide();
				setDisableButtonBar();
				changeStatusResult.token = freservationSRV.changeStatus(arg0,arg12, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9,arg13, arg10, arg11);
			}
			protected function searchVehicles(arg0:String, arg1:String, arg2:ArrayCollection, arg3:Boolean):void
			{
				crVehiclesearchSRVsearchVehicles.token = vehiclesearchSRV.searchVehicles(arg0, arg1, arg2, arg3);
			}
			
			/***
			 * This method retrive available+unAllocated drivers for given date range from DB
			 * 
			 * */
			protected function driverListAvailable(arg0:Date, arg1:Date):void
			{
				crDriverListAvailableResult.token = femployeeSRV.DriverListAvailable(arg0, arg1);
			}
			
			public var trCode:String="All";
			protected function listAll():void
			{
				listAllFvehicleSRV();
				acReservation=session.getAttribute("acReservation");
				acHireStatus=session.getAttribute("acHireStatus");
				acClient=session.getAttribute("acClient");
				acHireType=session.getAttribute("acHireType");
				acGuarantor=session.getAttribute("acGuarantor");
				acOtherSRV=session.getAttribute("acOtherSRV");
				acAccessory=session.getAttribute("acAccessory");
				acVehicleclass=session.getAttribute("acVehicleclass");
				acVehicletype=session.getAttribute("acVehicletype");
				acVehiclemake=session.getAttribute("acVehiclemake");
				acVehiclemodel=session.getAttribute("acVehiclemodel");
				acClienttype=session.getAttribute("acClienttype");
				acAddcharge=session.getAttribute("acAddcharge");
				acClientdriver=session.getAttribute("acClientdriver");
				acPaytype=session.getAttribute("acPaytype");
				acDriverrate=session.getAttribute("acDriverrate");
				acInventry=session.getAttribute("acInventry");
				acVehicletrans=session.getAttribute("acVehicletrans");
				acVehicle=session.getAttribute("acVehicle");
				acDriver=session.getAttribute("acDriver");
				acRateType=session.getAttribute("acRateType");//crFratetypeSRVlistAll.lastResult;

			}
			

			/*End Of service calls  */
			



			
			

			

			
			


			
			/***
			 * result handlers here
			 * 
			 * */
			
			protected function crFresdriverSRVlistByResno_resultHandler(event:ResultEvent):void
			{
				setResMalkeyDrivers(event.result as ArrayCollection);
			}
			
			protected function setResMalkeyDrivers(ac:ArrayCollection):void
			{
				cmpDriverDetails.acResMalkeyDrivers=ac;
				btnNext_clickHandler();
				cmpDriverDetails.setDateFromReservation
						(com_dspl_malkey_domain_Freservation.din,
						com_dspl_malkey_domain_Freservation.dout,
						acTime.getItemIndex(com_dspl_malkey_domain_Freservation.timeout),
						acTime.getItemIndex(com_dspl_malkey_domain_Freservation.timein),
						com_dspl_malkey_domain_Freservation.noofday);
			}
			
			
			protected function crFreservationSRVListAll_resultHandler(event:ResultEvent):void
			{
				acReservation=crFreservationSRVListAll.lastResult;
			}
			
			
			
			
			
			
			
			
			/***
			 * Deleted success
			 * 
			 * 
			 * */
			protected function crFreservationSRVremoveByID_resultHandler(event:ResultEvent):void
			{
				if(event.result as Boolean)
				{
				this.setCurrentState("stUndo",true);
				Message.displayAlert(3,"Delete Successfully","Success",null);
				}
				else
				{
					Message.displayAlert(1,"Delete Failed","Error",null);
				}
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			/***
			 * Saved Success
			 * 
			 * */
			protected function crFreservationSRVcreate_resultHandler(event:ResultEvent):void
			{
				var msg:String="";
				var additionalCharges:Boolean=cmpRates.hasAdditionalCharges();
				if(additionalCharges)
					msg="\nPlease Inform Client :\nSeasonal Charges Will Be Applied To Excess Mileage.";
				
				
				Mouse.show();
				setEnableButtonBar();
				var refnolist:String=event.result as String;
				var headRefNo:String=refnolist.substr(14,28);
				var detRefNo:String=refnolist.substr(0,13);
				com_dspl_malkey_domain_Freshed=Com_dspl_malkey_domain_Freshed(session.getAttribute("reshed"));
				com_dspl_malkey_domain_Freshed.isNew=false;//keep trace whether is t new header number or not.
				com_dspl_malkey_domain_Freshed.agrno=headRefNo;
				session.setAttribute("reshed",com_dspl_malkey_domain_Freshed);//update header value and put it into header
				this.setCurrentState("stUndo",true);
				Message.displayAlert(3,"Reserved successfully\nref-No:"+detRefNo+msg,"Success",null);
				PopUpManager.removePopUp(this);
				System.gc();
				dispatchEvent(new Event("saveAgr"));
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			/***
			 * Following method will display according to follwoing logic
			BOOKED 		:If not checked out :then current state should display 
			CHECKOUT	:If not checked in 	:then current checked out state should display 
			CHECKIN		:If  checked in 	:then current checked in state will display
			*/
			protected function crFresvehicleSRVlistByResNo_resultHandler(event:ResultEvent):void
			{
				setVehicleDetails(event.result as ArrayCollection);
			}
			
			/***
			 * FOLLOWING METHOD SET VEHICLE RATE
			 * 
			 * */
			private function setVehicleRate(acResult:ArrayCollection):void
			{
				if(acResult.length>0){
				com_dspl_malkey_domain_Fresvehiclerate=acResult.getItemAt(0).fresvehiclerate as Com_dspl_malkey_domain_Fresvehiclerate;
				//special case for handle zero value 
				//trace("com_dspl_malkey_domain_Fresvehiclerate.rate.toString()=="+com_dspl_malkey_domain_Fresvehiclerate.rate.toString());
				//trace("FLAG:"+com_dspl_malkey_domain_Fresvehiclerate.rate.toString()=="0E-8");
					if(com_dspl_malkey_domain_Fresvehiclerate.rate.toString()=="0E-8")
					{
						com_dspl_malkey_domain_Fresvehiclerate.rate="0";
					}
				}
			}
			protected function setVehicleDetails(acResult:ArrayCollection):void
			{

				try
				{
					cmpVehicleDetails.acResVehicle=acResult;
					setVehicleRate(acResult);
					cmpCheckOut.addImageEventListerner();
					cmpVehicleDetails.wakeup();
					if(	(com_dspl_malkey_domain_Freservation.cohirestsid== "BOOKED") || (com_dspl_malkey_domain_Freservation.cohirestsid== "CONFIRMED")||  (com_dspl_malkey_domain_Freservation.cohirestsid== "PREPARED") || (com_dspl_malkey_domain_Freservation.cohirestsid== "CHECKOUT") )
					{
						//this mean haven't saved data includeed.bcz checkout operaton has not been perfored.this code set virtual data and show this is the cuurent status of vehicle
						cmpVehicleDetails_changeHandler(new Event(Event.SELECT));
					}
					cmpCheckOut.setVehicleStatus();
					if(isNotCheckIn())//LOAD CURRENT STATUS OF VEHICLE FOR EASY FOR USER
					{
						com_dspl_malkey_domain_Freservation.cimileage=com_dspl_malkey_domain_Freservation.comileage;
						com_dspl_malkey_domain_Freservation.cifuellevel=com_dspl_malkey_domain_Freservation.cofuellevel;
						cmpCheckIn.setVehicleStatus();
					} 

				}
				catch(e:Error)
				{
					Message.displayAlert(1,"Messege\n"+e.message,"Error",null);
				}
				
			}
			
			
			protected function crFresaccsSRVlistAllByresNo_resultHandler(event:ResultEvent):void
			{
				setResAccessory(event.result as ArrayCollection);
			}
			
			protected function setResAccessory(ac:ArrayCollection):void
			{
				for each(var temp:Com_dspl_malkey_domain_Fresaccs in ac)
				{
					if(temp.fresaccrate.rate.toString()=="0E-8")
					{
						temp.fresaccrate.rate="0";
					}
					if(temp.rate.toString()=="0E-8")
					{
						temp.rate="0";
					}
				}

				
				cmpAccessoryService.acResAccessory=ac;
				cmpAccessoryService.wakeup();
			}
			
			
			protected function crFresothsrvSRVlistByResNo_resultHandler(event:ResultEvent):void
			{
				setResothsrv(event.result as ArrayCollection);

			}
			
			protected function setResothsrv(ac:ArrayCollection):void
			{
				cmpOtherService.acResothsrv=ac;
				cmpOtherService.wakeup();
			}
			
			protected function crFresvehiclerateSRVlistByResno_resultHandler(event:ResultEvent):void
			{
				cmpVehicleDetails.com_dspl_malkey_domain_Fresvehiclerate=(event.result.getItemAt(0)) as Com_dspl_malkey_domain_Fresvehiclerate;
				cmpVehicleDetails.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate=null;
				cmpVehicleDetails.wakeup();
				cmpRates.wakeup();
				calculate();
				//Alert.show("123test");
			}
			
			protected function crFresaccrateSRVlistAllByResno_resultHandler(event:ResultEvent):void
			{
				/*
				This method should set values to FResAcc collection from saved rate table
				*/
				var acFresaccsRate:ArrayCollection=event.result as ArrayCollection;
/* 				for(var i:int=0 ; i<cmpAccessoryService.acResAccessory.length ; i++ )
				{
				} */
				cmpAccessoryService.wakeup();
				cmpRates.wakeup();
				calculate();
			}
			
			protected function crFratetypeSRVlistAll_resultHandler(event:ResultEvent):void
			{
				session.setAttribute("RateType",new RateType(crFratetypeSRVlistAll.lastResult)); 
				acRateType=crFratetypeSRVlistAll.lastResult;
			}
			
			/***
			 * Fault handlers here
			 * 
			 * 
			 * */
			protected function crFreservationSRVcreate_faultHandler(event:FaultEvent):void
			{
			Mouse.show();
			setEnableButtonBar();
			var errorMessage:ErrorMessage = event.message as ErrorMessage;
			Message.displayAlert(1,errorMessage.rootCause.message,"Error",null);
			}
			
			/***
			 * Update result handler
			 * 
			 * 
			 * 
			 * */
			protected function updateResult_resultHandler(event:ResultEvent):void
			{
				//Alert.show("event result"+event.result);
			}
			
			
			protected function crDriverListAllResult_resultHandler(event:ResultEvent):void
			{
			}
			
			protected function crFresdriverrateSRVfindByResno_resultHandler(event:ResultEvent):void
			{
				setResDriverRate(crFresdriverrateSRVfindByResno.lastResult as Com_dspl_malkey_domain_Fresdriverrate);
			}
			
			protected function setResDriverRate(rate:Com_dspl_malkey_domain_Fresdriverrate):void
			{
				com_dspl_malkey_domain_Fresdriverrate=rate;
				cmpRates.fresdriverrate=rate;
				
			}
			
			
			protected function listByresnoFresaddchargeSRV(arg0:String):void
			{
				crfresaddchargeSRVlistByresno.token = fresaddchargeSRV.listByresno(arg0);
			}
			
			
			protected function crfresaddchargeSRVlistByresno_resultHandler(event:ResultEvent):void
			{
				setAdditionalCharges(event.result as ArrayCollection);
			}
			
			protected function setAdditionalCharges(ac:ArrayCollection):void
			{
				//	Following code set the selection of Additionalcharges list in rates tab
				cmpRates.acResAdditionalCharges=ac;
				cmpRates.setAdditionalRatesOnGrid();
			}
			protected function setSelectClientDriver(ac:ArrayCollection):void
			{
				cmpDriverDetails.autoSelectClientDriver(ac);
			}
			
			
			protected function crfresvehinvSRVlistByResno_resultHandler(event:ResultEvent):void
			{
				
				setVehicleInventory(event.result as ArrayCollection);
			}
			
			protected function setVehicleInventory(ac:ArrayCollection):void
			{
				cmpCheckOut.setVehicleInventory=ac;
				if(isNotCheckIn())//if not checkin then :suggetion for checkin //LOAD CURRENT STATUS OF VEHICLE FOR EASY FOR USER
				{
					//cmpCheckIn.setVehicleInventory=crfresvehinvSRVlistByResno.lastResult;
					var acInventoryCheckIn:ArrayCollection=ObjectUtil.copy(ac) as ArrayCollection;//KEEP A SEPEREATE COPY FOR CHECKIN COMPONENT
					for each(var tempFresvehinv:Com_dspl_malkey_domain_Fresvehinv in acInventoryCheckIn)
					{
						tempFresvehinv.checkin=1;
					} 
					cmpCheckIn.setVehicleInventory=acInventoryCheckIn;//set data to view
					
				}
				else//if checkin : actual checkin data loading
				{
					var acInventoryCheckIn1:ArrayCollection=ObjectUtil.copy(ac) as ArrayCollection;//KEEP A SEPEREATE COPY FOR CHECKIN COMPONENT
					cmpCheckIn.setVehicleInventory=acInventoryCheckIn1;//set data to view
				}
			}
			
			
			
			
			

			
			protected function listByRegNoResult_resultHandler(event:ResultEvent):void
			{
				var acFresVehicleInventory:ArrayCollection=new ArrayCollection();
				for each(var temp:Com_dspl_malkey_domain_Fvehicleinventry in  crfvehicleinventrySRVlistByRegNo.lastResult )
				{
					var resvehinv:Com_dspl_malkey_domain_Fresvehinv=new Com_dspl_malkey_domain_Fresvehinv();
					var resvehinvPK:Com_dspl_malkey_domain_FresvehinvPK=new Com_dspl_malkey_domain_FresvehinvPK();
					resvehinvPK.invid=temp.id.invid;
					resvehinvPK.regno=temp.id.regno;
					resvehinvPK.resno=com_dspl_malkey_domain_Freservation.resno;
					resvehinv.id=resvehinvPK;
					resvehinv.checkout=1;
					resvehinv.checkin=0;
					acFresVehicleInventory.addItem(resvehinv);
				}
				cmpCheckOut.setVehicleInventory=acFresVehicleInventory;//when call set method setSelectedInventory mehotd also called
				if(isNotCheckIn())//LOAD CURRENT STATUS OF VEHICLE FOR EASY FOR USER
				{
					//should set current value to checkin value 1
					var acInventoryCheckIn:ArrayCollection=ObjectUtil.copy(acFresVehicleInventory) as ArrayCollection;//KEEP A SEPEREATE COPY FOR CHECKIN COMPONENT
					for each(var tempFresvehinv:Com_dspl_malkey_domain_Fresvehinv in acInventoryCheckIn)
					{
						tempFresvehinv.checkin=1;
					} 
					cmpCheckIn.setVehicleInventory=acInventoryCheckIn;//when call set method setSelectedInventory mehotd also called
				}
				
				

				
				
			}
			
			protected function crFvehicledamageSRVlistByRegNo_resultHandler(event:ResultEvent):void
			{
				cmpCheckOut.setVehicleDamage=crFvehicledamageSRVlistByRegNo.lastResult;
				if(isNotCheckIn())//LOAD CURRENT STATUS OF VEHICLE FOR EASY FOR USER
				{
					var acDamageCheckIn:ArrayCollection=ObjectUtil.copy(crFvehicledamageSRVlistByRegNo.lastResult) as ArrayCollection;//send cop[y to CHECKIN
					cmpCheckIn.setVehicleDamage=acDamageCheckIn;//test sanka-------------
					
				}
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			protected function crFresvehicledamageSRVlistByRegNo_resultHandler(event:ResultEvent):void
			{
				setVehicleDamage(event.result as ArrayCollection);
			}
			
			
			
			protected function setVehicleDamage(ac:ArrayCollection):void
			{
				cmpCheckOut.setVehicleDamage=ac;
				if(isNotCheckIn())//IF NOT CHECKIN : LOAD CURRENT STATUS OF VEHICLE FOR EASY FOR USER
				{
					var acDamageCheckIn:ArrayCollection=ObjectUtil.copy(ac) as ArrayCollection;//KEEP A SEPEREATE COPY FOR CHECKIN COMPONENT
					for each(var loVehiDamage:Com_dspl_malkey_domain_Fresvehicledamage in acDamageCheckIn)
					{
						loVehiDamage.ioflag=0;
					} 
					cmpCheckIn.setVehicleDamage=acDamageCheckIn;//test sanka------------
				}
				else
				{
					var acDamageCheckIn:ArrayCollection=ObjectUtil.copy(ac) as ArrayCollection;//KEEP A SEPEREATE COPY FOR CHECKIN COMPONENT
					cmpCheckIn.setVehicleDamage=acDamageCheckIn;//test sanka------------
				}
				
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			

			
			/***
			 * 1).This method get Available drivers empId from native query 
			 * 2).and there is list all drivers.
			 * 3).finally create new list and put all available drivers into new list
			 * */
			protected function DriverListAvailableResult_resultHandler(event:ResultEvent):void
			{
				var acAvailableDrivers:ArrayCollection=new ArrayCollection();
				for each(var tempAvailable:Com_dspl_malkey_domain_Femployee in crDriverListAvailableResult.lastResult)
				{
					for each(var tempAll:Com_dspl_malkey_domain_Femployee in acDriver)
					{
						if(tempAvailable.empid==tempAll.empid)
						{
							acAvailableDrivers.addItem(tempAll);
						}
					}
				}
				
				if(currentState=="stEdit" && crFresdriverSRVlistByResno.lastResult!=null)//if stEdit,stDelete,stView
				{
					//add currrent reserverd driver: because that is not included in available list
					for each(var tempAll:Com_dspl_malkey_domain_Femployee in acDriver)
					{
						if(crFresdriverSRVlistByResno.lastResult.getItemAt(0).id.empid==tempAll.empid)
						{
							acAvailableDrivers.addItem(tempAll);
							break;
						}
					}
					
					
					//Following code check low priority resereved drivers are available any more or not....
					var count:int=0;
					for each(var tempDriver:Com_dspl_malkey_domain_Fresdriver in crFresdriverSRVlistByResno.lastResult)
					{
							if(count!=0)//ignore the first element
							{
								tempDriver.isavailabile=0;
								for each(var tempAvailable:Com_dspl_malkey_domain_Femployee in crDriverListAvailableResult.lastResult)
								{
									if(tempAvailable.empid==tempDriver.id.empid)
									{
										tempDriver.isavailabile=1;
										break;
									}
								}
							}
							else
							{
								tempDriver.isavailabile=1;
							}
							count++;
					}
					
				}
				
				//cmpDriverDetails.acAvailableDrivers=acAvailableDrivers;			
				cmpDriverDetails.acMalkeyDrivers=acAvailableDrivers;			
				cmpDriverDetails.acAllDrivers=acDriver;			
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			/***
			 * this method fire when eror occured during retriving the data from 
			 * 
			 * */
			protected function DriverListAvailableResult_faultHandler(event:FaultEvent):void
			{
				Message.displayAlert(1,"Error occured while retriving drivers.\nPlease refresh the page and retry.","ERROR",null);
			}
			

			
			
			
			protected function changeStatusResult_resultHandler(event:ResultEvent):void
			{
				var msg:String="";
				var additionalCharges:Boolean=cmpRates.hasAdditionalCharges();
				if(additionalCharges)
					msg="\nPlease Inform Client :\nSeasonal Charges Will Be Applied To Excess Mileage.";
				Mouse.show();
				setEnableButtonBar();
				Message.displayAlert(3,"Saved successfully\nref-No:"+(event.result as String)+msg,"Success",null);
				currentState="stUndo";
				PopUpManager.removePopUp(this);
				dispatchEvent(new Event("saveAgr"));
				
			}
			
			
			protected function changeStatusResult_faultHandler(event:FaultEvent):void
			{
				Mouse.show();
				setEnableButtonBar();
				var errorMessage:ErrorMessage = event.message as ErrorMessage;
				var msg:String="";
				try
				{
				msg=errorMessage.rootCause.message;
				}
				catch(e:Error)
				{
				msg="Sorry,Server not Found.";
				}
				Message.displayAlert(1,msg,"Error",null);
			}
			
			protected function crVehiclesearchSRVsearchVehicles_resultHandler(event:ResultEvent):void
			{
				trace("trreservation.crVehiclesearchSRVsearchVehicles_resultHandler");
			}
			
			protected function crFvehicleSRVListAll_resultHandler(event:ResultEvent):void
			{
				session.setAttribute("acVehicle",crFvehicleSRVListAll.lastResult);
				acVehicle=crFvehicleSRVListAll.lastResult;
			}
			
			
			/*End of result fault handlers  */
			
			

			
			

			

			



			
			
			
			

			
			

			
			

			
			//Start :Custom compontes event handlers

			/***
			 * This method get the value from tempory variable called :com_dspl_malkey_domain_Fclient
			 * And put it into CmpDriverDetails component,try catch use for If component havent created yet.
			 * Author:Sanka
			 * */
			protected function setClientToDriverDetails():void
			{
				try{
					if(com_dspl_malkey_domain_Freservation.hiretypeid=='SD')
					{
						//cmpDriverDetails.txtSearchCustomer.text=com_dspl_malkey_domain_Fdebtor.debcode;
						cmpDriverDetails.filter();
					}
				}
				catch(e:Error)
				{
					trace("Nullpointer Exception cmpDriverDetails havent created yet");
					//when the user select the customer/client/debtor  drverDetails component havent created yet.
				}
			
			}

			/***
			 * This method fire when component createdComplete
			 * called method :setClientToDriverDetails()
			 * Author:Sanka
			 * */
			protected function cmpDriverDetails_creationCompleteHandler(event:FlexEvent):void
			{
				//setClientToDriverDetails();
			}

			
			
			//End :Custom compontes event handlers
			

			/***
			 * This method will fire when user select hire type
			 * Author:Sanka
			 * 
			 * */
			protected function txtHireType__onReturnFromSearchGridHandler(event:Event):void
			{
				setClientToDriverDetails();
				setDriverRates();
				if(hirestatusmode=="edit" || currentState=="stEdit")
				{
					if(oldHireType!=txtHireType.text)
					{ 
						isEligible();
					}
				} 
				else
				{
				hirestatusmode="edit";
				oldHireType=txtHireType.text;
				}
				var fresHed:Com_dspl_malkey_domain_Freshed= session.getAttribute("reshed");
				fcompanytaxSRVgetTaxComCode(fresHed.companyid,com_dspl_malkey_domain_Freservation.hiretypeid);
			}


			
			
			
			/***
			 * 
			 * This method execute service call for get rate for first vehicle ratetype hiretype combination
			 *   */
 			public function isEligible():void
			{
				if(cmpVehicleDetails.acResVehicle.length>0)
				{
					var vehicleratePK:Com_dspl_malkey_domain_FvehicleratePK=new Com_dspl_malkey_domain_FvehicleratePK();
					vehicleratePK.clienttype=com_dspl_malkey_domain_Fdebtor.clienttype;
					vehicleratePK.hiretypeid=txtHireType.text;
					vehicleratePK.ratetype=txtRateType.text;//session.getAttribute("RateType").getRatetype(com_dspl_malkey_domain_Freservation.chargdays);
					var regno:String=(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).id.regno;
					vehicleratePK.vehimodelid=(genericFunctions.getArrayCollection(cmpVehicleDetails.acVehicleAll,'regno',regno) as Com_dspl_malkey_domain_Fvehicle).vehimodelid;//com_dspl_malkey_domain_Fvehicle.vehimodelid;
					crFvehiclerateEligibleForChange.token = fvehiclerateSRV.findByID(vehicleratePK);
				}
				else
				{
					Message.displayAlert(4,"Hire type has been changed.\n"+oldHireType+" To "+txtHireType.text+"\nDo you want to apply new rates?","Confirmation",confirmAlertHireTypeChange);
				}
				
			} 
			
			/***
			 * 
			 * This method execute service call for get rate for first vehicle ratetype hiretype combination
			 *   */
 			public function isEligibleForChangeRateType():void
			{
				if(cmpVehicleDetails.acResVehicle.length>0)
				{
					var vehicleratePK:Com_dspl_malkey_domain_FvehicleratePK=new Com_dspl_malkey_domain_FvehicleratePK();
					vehicleratePK.clienttype=com_dspl_malkey_domain_Fdebtor.clienttype;
					vehicleratePK.hiretypeid=txtHireType.text;
					vehicleratePK.ratetype=txtRateType.text;//session.getAttribute("RateType").getRatetype(com_dspl_malkey_domain_Freservation.chargdays);
					var regno:String=(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).id.regno;
					vehicleratePK.vehimodelid=(genericFunctions.getArrayCollection(cmpVehicleDetails.acVehicleAll,'regno',regno) as Com_dspl_malkey_domain_Fvehicle).vehimodelid;//com_dspl_malkey_domain_Fvehicle.vehimodelid;
					crFvehiclerateEligibleForChangeRateType.token = fvehiclerateSRV.findByID(vehicleratePK);
				}
				else
				{
					Message.displayAlert(4,"Rate type has been changed.\n"+oldRateType+" To "+txtRateType.text+"\nDo you want to apply new rates?","Warning",confirmAlertRatesTypeChange);
					//Message.displayAlert(4,"Hire type has been changed.\n"+oldHireType+" To "+txtHireType.text+"\nDo you want to apply new rates?","Confirmation",confirmAlertHireTypeChange);
				}
				
			} 
			
			
			protected function crFvehiclerateEligibleForChange_resultHandler(event:ResultEvent):void
			{
				if(event.result !=null)//rates available for change
				{
					Message.displayAlert(4,"Hire type has been changed.\n"+oldHireType+" To "+txtHireType.text+"\nDo you want to apply new rates?","Confirmation",confirmAlertHireTypeChange);
				}
				else//rates not available for change
				{
					Message.displayAlert(1,"Unable to change hire type.No rates found.","Error",confirmAlertHireTypeRollback);
				}
			}
			protected function crFvehiclerateEligibleForChangeRateType_resultHandler(event:ResultEvent):void
			{
				if(event.result !=null)//rates available for change
				{
					Message.displayAlert(4,"Rate type has been changed.\n"+oldRateType+" To "+txtRateType.text+"\nDo you want to apply new rates?","Warning",confirmAlertRatesTypeChange);
				}
				else//rates not available for change
				{
					Message.displayAlert(1,"Unable to change rate type.No rates found.","Error",confirmAlertRateTypeRollback);
				}
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			/***
			 * In here I retrive the rate types from DB and put into session
			 * Components are retrive those RateType Class Object in session from the session
			 * @Problem:occured with creation compleate events.childs are create before parents
			 * @Authir Sanka
			 * */
			protected function titlewindow1_initializeHandler(event:FlexEvent):void
			{
				//listAllFratetypeSRV();
			}
			
			
			/***
			 * Tab nsavigator change event is following
			 * 
			 * 
			 * */
			protected function tabNavigator_changeHandler(event:IndexChangedEvent):void
			{
			//	onTabChange(event);//animation effect
				//commented @2011.09.14 
/* 				if(event.newIndex==5 || event.newIndex==8)
				{
					calculate();
				} */
			}
			

			/***
			 * Following code get from the internet not checked
			 * 
			 * */
			public function onTabChange(event:IndexChangedEvent):void
			{
				var oldTab:DisplayObject = tabNavigator.getChildAt(event.oldIndex);
				var newTab:DisplayObject = tabNavigator.getChildAt(event.newIndex);            
				
				var moveEffect:Move = new Move();
				moveEffect.target = oldTab;
				var moveEffect2:Move = new Move();
				moveEffect2.target = newTab;
				if(event.oldIndex > event.newIndex)
				{
					//Moving old Tab out to the right, new tab in from the left                    
					oldTab.x = 0;
					moveEffect.xTo = oldTab.width + 100;    
					moveEffect.yFrom = oldTab.y;
					moveEffect.yTo = oldTab.y;                                
					newTab.x = -oldTab.width;
					moveEffect2.xTo = 0;        
					moveEffect2.yFrom = oldTab.y;
					moveEffect2.yTo = oldTab.y;                        
				}
				else
				{
					//Moving old Tab out to the left, new tab in from the right    
					oldTab.x = 0;
					moveEffect.xTo = -oldTab.width;            
					moveEffect.yFrom = oldTab.y;
					moveEffect.yTo = oldTab.y;                                                                        
					newTab.x = oldTab.width + 100;
					moveEffect2.xTo = 0;    
					moveEffect2.yFrom = oldTab.y;
					moveEffect2.yTo = oldTab.y;                                                                        
				}
				oldTab.visible = true;
				newTab.visible = true;
				moveEffect2.play();    
				moveEffect.addEventListener(EffectEvent.EFFECT_END,tabOffScreen);
				moveEffect.play();        
			}
			
			private function tabOffScreen(event:EffectEvent):void
			{
				event.target.removeEventListener(EffectEvent.EFFECT_END,tabOffScreen);
				event.target.target.visible = false;    
			}

			//end of copied code from internet
			

			

			/***
			 * reset the form
			 * 
			 * 
			 * */
			
			protected function resetForm():void
			{
				try{
				tabNavigator.selectedIndex=0;
				btnEdit.visible=true;
				com_dspl_malkey_domain_Freservation=new Com_dspl_malkey_domain_Freservation();
				com_dspl_malkey_domain_Fresdriverrate=new Com_dspl_malkey_domain_Fresdriverrate();
				com_dspl_malkey_domain_FresdriverratePK=new Com_dspl_malkey_domain_FresdriverratePK();
			
				
				
				//com_dspl_malkey_domain_Fdebtor=new Com_dspl_malkey_domain_Fdebtor();//point dont reset 
				dtDateOut.errorString="";
				nsNumDays.errorString="";
				dtDateIn.errorString="";
				nsChargeableDays.errorString="";
				txtRateType.errorString="";
				txtHireType.errorString="";
				txtHireStatus.errorString="";
				txtBillingBasis.errorString="";
				com_dspl_malkey_domain_Freservation.dout=null;//new Date();
				com_dspl_malkey_domain_Freservation.din=null;//new Date();
				com_dspl_malkey_domain_Freservation.deposit="0.00";
				com_dspl_malkey_domain_Freservation.advance="0.00";
				com_dspl_malkey_domain_Freservation.depositbal="0.00";
				com_dspl_malkey_domain_Freservation.advancebal="0.00";
				com_dspl_malkey_domain_Freservation.discount_xmile="0.00";
				com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.discountxhourrate="0.00";
				com_dspl_malkey_domain_Fresdriverrate.discount_detention="0.00";
				com_dspl_malkey_domain_Fresdriverrate.discount_nightout="0.00";
				com_dspl_malkey_domain_Freservation.xhoursamt="0.00";
				crVehiclesearchSRVsearchVehicles.lastResult=null;
				/* com_dspl_malkey_domain_Freservation.chargdays */
 				//cmpCustomerDetails.resetCustomerDetailsForm();
				cmpVehicleDetails.resetAll();
				cmpAccessoryService.resetAll();
				cmpOtherService.resetAll();
				cmpDriverDetails.resetAll();
				//cmpRates.resetAdditionalRatesGrid();
				cmpRates.resetForm();
				cmpCheckOut.resetAll();
				cmpCheckIn.resetAll();
				mode="new";
				hirestatusmode="new"
				}
				catch(e:Error)
				{
				}
				
				
			}

			
			

			
			
///new idea write a new curser to retrive all the needed data @ once
			
			/***
			 * when change the reservation this method will fire
			 * 
			 * 
			 * */
			public function onSelectReservation(event:Event):void
			{
				
				//Start :set status according to the button code
				//btncode will set according to click event
/* 				if(btnCode=="stEdit")
				{
					currentState="stEdit";
				}
				if(btnCode=="stView")
				{
					currentState="stView";
				}
				if(	btnCode=="stDelete")
				{
					currentState="stDelete";
				} */
				
				switch (btnCode)
				{
					case "stEdit" : 
						currentState="stEdit";
						break;
					case "stView" : 
						currentState="stView";
						break;
					case "stDelete" : 
						currentState="stDelete";
						break;
				}
				//END :set status according to the button code

				com_dspl_malkey_domain_Freservation =new Com_dspl_malkey_domain_Freservation();
				//create a copy of object
				com_dspl_malkey_domain_Freservation=ObjectUtil.copy(txtRefNo._acDataProvider.getItemAt(txtRefNo._nSelectedIndex)) as Com_dspl_malkey_domain_Freservation;
				
				if(currentState=="stDelete")
				{
					var deleteReason:DeleteReason=new DeleteReason();
					deleteReason.addEventListener("cancel",cancel);
					deleteReason.addEventListener("undo",undo);
					PopUpManager.addPopUp(deleteReason,this,true);
					PopUpManager.centerPopUp(deleteReason);
				}
				else//in here what happening is,doesn't delete 
				{
					//all in one method
					freservationSRVListAllByResno(com_dspl_malkey_domain_Freservation.resno);
					//setTransactionStatus();//set enable the windows
					//calculate();
					
					
					
				}
				
			}
			
			
			
			
			
			/***
			 * when change the reservation this method will fire
			 * 
			 * 
			 * */
			public function onSelectReservationDetail(index:int):void
			{
					com_dspl_malkey_domain_Freservation=ObjectUtil.copy(txtRefNo._acDataProvider.getItemAt(index)) as Com_dspl_malkey_domain_Freservation;
					//loadRelationalData();
					freservationSRVListAllByResno(com_dspl_malkey_domain_Freservation.resno);
					crDriverListByResnoResult.token = femployeeSRV.getDriversByResNo(com_dspl_malkey_domain_Freservation.resno);
					oldHireType=txtHireType.text;
					setHireTypeSelectable();
					titleText=titleText+"\t"+com_dspl_malkey_domain_Freshed.agrno+"\t"+com_dspl_malkey_domain_Freservation.resno;
				
			}
			
			
			/***
			 * Following method get from all detaild tables at once and set
			 * following method set creation policy all when this method fire
			 * */
			public function loadRelationalData():void
			{
				
				setCreationPolicy();
				reservationDetails = com_dspl_malkey_domain_Freservation.details;
				setVehicleDetails(reservationDetails.fresvehicle);
				setResAccessory(reservationDetails.fresaccs);
				setResothsrv(reservationDetails.fresothsrv);
				setResMalkeyDrivers(reservationDetails.fresdriver);
				setResDriverRate(reservationDetails.fresdriverrate);
				setAdditionalCharges(reservationDetails.fresaddcharge);
				setSelectClientDriver(reservationDetails.fresclientdriver);
				commonRateUtil();
			}
			
			
			/***
			 * when change the reservation this method will fire
			 * 
			 * 
			 * */
			public function onSelectReservationDetailReload(index:int):void
			{
				
					com_dspl_malkey_domain_Freservation=ObjectUtil.copy(txtRefNo._acDataProvider.getItemAt(index)) as Com_dspl_malkey_domain_Freservation;
					setCopyModeUtils();
					freservationSRVListAllByResnoCopyMode(com_dspl_malkey_domain_Freservation.resno);
					oldHireType=txtHireType.text;
					setHireTypeSelectable();
					//titleText=titleText+"\t"+com_dspl_malkey_domain_Freshed.agrno+"\t"+com_dspl_malkey_domain_Freservation.resno;
				
			}


			/***
			 * Following method set utility for reservationcopy proceedure
			 * 
			 * 
			 * */
			public function setCopyModeUtils():void
			{
					try
					{
						//DateOperation.dateAdd('d', nsNumDays.value,copyFreservation.din);
						com_dspl_malkey_domain_Freservation.dout=DateOperation.dateAdd('d', 2,copyFreservation.din);//copyFreservation.din;
						dtDateOut.selectedDate=com_dspl_malkey_domain_Freservation.dout;
						com_dspl_malkey_domain_Freservation.timeout=copyFreservation.timeout;
						com_dspl_malkey_domain_Freservation.noofday=DateOperation.getDaysDifference(dtDateIn.selectedDate,dtDateOut.selectedDate)
						com_dspl_malkey_domain_Freservation.chargdays=com_dspl_malkey_domain_Freservation.chargdays - copyFreservation.chargdays;
						com_dspl_malkey_domain_Freservation.cohirestsid="COPY";
						fiHireStatus.enabled=false;
						com_dspl_malkey_domain_Freservation.deposit="0";
						com_dspl_malkey_domain_Freservation.depositbal="0";
						com_dspl_malkey_domain_Freservation.advance="0";
						com_dspl_malkey_domain_Freservation.advancebal="0";
						com_dspl_malkey_domain_Freservation.parentref=copyFreservation.resno;
						com_dspl_malkey_domain_Freservation.copyreason="Longterm hire periodically renew.";
						copyFreservation.copyreason="Reservation move into new agreement.";
						
						tabNavigator.selectedIndex=0;
	
						if(isVehicleChangeMode){
							//Message.displayAlert(3,"Old agreement tempory check-in & saved successfully.\nPlease select a vehicle for new agreement now.","Success",okAlert_VehicleAvailabilityLoad);
							popupCopyReason();
						}
					}
					catch(e:Error)
					{
						Message.displayAlert(1,"Error in copying reservation\n"+e.message+e.getStackTrace(),"ERROR",null);
					}
			}
						
			
			private function popupCopyReason():void
			{
				
				var cReason:CopyReason=new CopyReason();
				cReason.addEventListener("ok",ok);
				PopUpManager.addPopUp(cReason,this,true);
				PopUpManager.centerPopUp(cReason);
				
			}
			

			
			//Delete comment componts event handlers
			/***
			 * COPY REASON OK EVENT
			 * 
			 * */
			protected function ok(event:DataEvent):void
			{
				//Alert.show("Reason Saved Successfully\n","Success",Alert.OK,null,null,genericFunctions.IconInformation,Alert.OK,null);
				com_dspl_malkey_domain_Freservation.copyreason=event.data;
				Message.displayAlert(3,"Old agreement tempory check-in & saved successfully.\nPlease select a vehicle for new agreement now.","Success",okAlert_VehicleAvailabilityLoad);
			}
			
			

			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function okAlert_VehicleAvailabilityLoad(eventObj:CloseEvent):void
			{
				if(eventObj.detail==Alert.OK)
				{
					tabNavigator.selectedIndex=2;
					vehicleAvailabilityPopup_VehicleChange();
				}
			}
			



			

			
			/***
			 * This function perform get rates from fresdriverrates & set rates on rateview object using getRate method in driverdetails custom component.
			 * 
			 * 
			 * */
			protected function setRates_onDriver():void
			{
				if(cmpDriverDetails.acResMalkeyDrivers.length !=0 && crFresdriverrateSRVfindByResno.lastResult !=null)
				{
//					cmpDriverDetails.wakeup();
					cmpRates.wakeup();
					calculate();
				}
			}

			
			
			protected function manualValidation():Boolean
			{
				var flagIsValied:Boolean=true;
				if(cmpVehicleDetails.acResVehicle.length==0)
				{
					flagIsValied=false;
					Message.displayAlert(2,"Please select a vehicle.","Warning",null);
				}
				if(StringUtil.trim(com_dspl_malkey_domain_Freservation.hiretypeid).length == 0)
				{
					flagIsValied=false;
					Message.displayAlert(2,"Please select a hire type.","Warning",null);
				}
				if(cmpDriverDetails.acResMalkeyDrivers.length==0 && com_dspl_malkey_domain_Freservation.hiretypeid!="SD" && com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT")
				{
					flagIsValied=false;
					Message.displayAlert(2,"Please select a driver.","Warning",null);
				}
				if((com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKIN" || com_dspl_malkey_domain_Freservation.cohirestsid=="NOSHOW"|| com_dspl_malkey_domain_Freservation.cohirestsid=="COMPLETED") && cmpCheckIn.getSelectedInventory().length > cmpCheckOut.getSelectedInventory().length)
				{
					flagIsValied=false;
					Message.displayAlert(2,"Checkin inventory contain more than checkout","Warning",null);
				}
				if(txtRateType.text=='LONGTERM' && StringUtil.trim(txtBillingBasis.text).length==0)
				{
					flagIsValied=false;
					Message.displayAlert(2,"Please select a billing basis.","Warning",null);
				}
				if(txtHireStatus.text=="CHECKOUT" && StringUtil.trim(txtCOLocation.text).length==0 )
				{
					flagIsValied=false;
					Message.displayAlert(2,"PPLEASE SELECT A CHECKOUT LOCATION..","Warning",null);
				}
				if((txtHireStatus.text=="CHECKIN" || txtHireStatus.text=="COMPLETED" )&& StringUtil.trim(txtCILocation.text).length==0 )
				{
					flagIsValied=false;
					Message.displayAlert(2,"PLEASE SELECT A CHECKIN LOCATION.","Warning",null);
				}
				//follwoing code was commente ddue to meeting on 04.08.2011 Hirestatus vs Accessability.xlsx document
				/* if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKIN")
				{
					flagIsValied=false;
					Alert.show("Please Select the Hire Status in CheckIn Tab.","Warning",Alert.OK,null,null,genericFunctions.IconWarning,Alert.OK,null);
				} */
				if(!isValidateAll())
				{
					flagIsValied=false;
					//Alert.show("Checkin inventory contain more than Checkout","Warning",Alert.OK,null,null,genericFunctions.IconWarning,Alert.OK,null);
				}
				if(!hasValiedAccANDOtherSrv())
				{
					flagIsValied=false;
					//Alert.show("Checkin inventory contain more than Checkout","Warning",Alert.OK,null,null,genericFunctions.IconWarning,Alert.OK,null);
				}
				
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKIN" || com_dspl_malkey_domain_Freservation.cohirestsid=="NOSHOW"|| com_dspl_malkey_domain_Freservation.cohirestsid=="COMPLETED")
				{					
					if(!hasValiedDriverAllocation())
					{
						flagIsValied=false;
					}
				}
/* 				if(com_dspl_malkey_domain_Freservation.cohirestsid=="CANCELLED" || com_dspl_malkey_domain_Freservation.cohirestsid=="CONFIRMED")
				{
					var flag:Boolean=isCancelable();
					flagIsValied=flag;
				} */
				
				
/* 				if(!hasValiedDriverAllocation())
				{
					flagIsValied=false;
					//Alert.show("Checkin inventory contain more than Checkout","Warning",Alert.OK,null,null,genericFunctions.IconWarning,Alert.OK,null);
				} */
				return flagIsValied;
			}

			
			private function isCancelable():Boolean
			{

				var isCancelable:Boolean= (hasnotPaidAdvance)
					&& (hasnotPaidDeposit);
					if(session.getAttribute("hirestatus")!="CANCELLED")
					{
						if(!isCancelable)
						{
							var msg:String="";
							var depo:Number=new Number(com_dspl_malkey_domain_Freservation.deposit)-new Number(com_dspl_malkey_domain_Freservation.depositbal);
							var adv:Number=new Number(com_dspl_malkey_domain_Freservation.advance)-new Number(com_dspl_malkey_domain_Freservation.advancebal);
							if(!hasnotPaidDeposit){
								msg="Deposit :"+depo+"/=\n";}
							if(!hasnotPaidAdvance){
								msg+="Advance :"+adv+"/=";}
							txtHireStatus.text="BOOKED";
							Message.displayAlert(2,"Sorry,\nclient has made payment.\n"+msg+"\nPlease refund deposit & advance balace\nto continue cancelation or confirmation process.","Warning",null);
							//Alert.show("Sorry,\nClient has made payment.\n"+msg+"\nPlease Refund Deposit & Advance Balace\nto Continue Cancelation Or Confirmation Process.","Warning",Alert.OK,null,null,genericFunctions.IconWarning,Alert.OK,null);
						}
					}
					return isCancelable;
			
			}

			
			
			//Delete comment componts event handlers
			/***
			 * DeleteComment components delete event
			 * 
			 * */
			protected function cancel(event:DeleteCommentEvent):void
			{
				removeByIDFreservationSRV(txtRefNo.text);
			}
			
			
			/***
			 * DeleteComment components undo event
			 * 
			 * */
			protected function undo(event:DeleteCommentEvent):void
			{
				currentState='stUndo';
			}
			
			

			
			

			/***
			 * when the hire staus change this method will fire
			 * 
			 * 
			 * */
			protected function textinput1_keyUpHandler(event:KeyboardEvent):void
			{
				// TODO Auto-generated method stub
				if(event.keyCode.toString()=='119')
				{txtHireStatus.launchSearchGrid();
				//setTransactionStatus();
				cmpVehicleDetails_changeHandler(event);
				}
			}
			
			
			/***
			 * when the hire staus change this method will fire
			 * 
			 * 
			 * */
			private function setTransactionStatus():void
			{
				setTransactionStatus_sub(txtHireStatus.text);
			}

			/***
			 * when the hire staus change this method will fire
			 * 
			 * 
			 * */
			private function setBind_Deposit_Advance():void
			{
				com_dspl_malkey_domain_Freservation.deposit=nFormatter.format(new Number(cmpRates.txtDeposit.text));//new Number(txtDeposit.text).toFixed(2);
				com_dspl_malkey_domain_Freservation.advance=nFormatter.format(new Number(cmpRates.txtAdvance.text));//new Number(txtAdvance.text).toFixed(2);
			}
			
			
			/***
			 * when the hire staus change this method will fire
			 * 
			 * 
			 * */
			private function setTransactionStatus_sub(param:String):void
			{
				switch(param)
				{
					
					
				case "BOOKED":
					if(currentState=="stNew" || currentState=="stEdit" )
					{
						cmpCheckOut_isEnable=false;
						cmpCheckIn_isEnable=false;
					}
					break;
				
				
				case "CANCELLED":
					{
						if(isCancelable()){
						cmpCheckOut_isEnable=false;
						cmpCheckIn_isEnable=false;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=false;
						cmpOtherService_isEnable=false;
						cmpRates_isEnable=false;
						cmpDriverDetails_isEnable=false;}
					}
					trace("Monday");
					break;
				
				
				case "CHECKIN":
					if(currentState=="stEdit")
					{
						cmpCheckOut_isEnable=false;
						cmpCheckIn_isEnable=true;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=true;
						cmpOtherService_isEnable=true;
						cmpRates_isEnable=true;//deposte/advance cannot be change & discount can be change
						cmpDriverDetails_isEnable=true;
						//fmMain.enabled=true;
					}
					break;
				
				
				case "CHECKOUT":
					if(/* currentState=="stNew" || */ currentState=="stEdit" )
					{
						var regno:String = (cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).id.regno;
						var DummyVehiStatus:Number = (genericFunctions.getArrayCollection(cmpVehicleDetails.acVehicleAll,'regno',regno) as Com_dspl_malkey_domain_Fvehicle).dummyvehi;
						
						if (DummyVehiStatus == 1)
						{
							//	Message.displayAlert(4,"Deposit or Advance has not been allocated.Are you sure you want to set hire status as 'CONFIRMED'?","CONFIRAMTION",confirmAlert);
							Alert.show("Cannot CHECKOUT Dummy Vehicles","Warning",Alert.OK,this,confirmAlertDummy,genericFunctions.IconQuestion,Alert.OK);
							cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
							cmpCheckIn_isEnable=false;
							cmpVehicleDetails_isEnable=true;
							cmpAccessoryService_isEnable=true;
							cmpOtherService_isEnable=true;
							cmpRates_isEnable=true;
							cmpDriverDetails_isEnable=true;
							fmMain.enabled=true;
							txtHireStatus.text="";
							com_dspl_malkey_domain_Freservation.cohirestsid="";
						}else
						{
							cmpCheckOut_isEnable=true;
							cmpCheckIn_isEnable=false;
							cmpVehicleDetails_isEnable=false;
						}
					}
					break;
				
				
				case "COMPLETED":
					if(/* currentState=="stNew" || */ currentState=="stEdit" && session.getAttribute("hirestatus") !="COMPLETED" )
					{
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=true;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=true;
						cmpOtherService_isEnable=true;
						cmpRates_isEnable=true;
						cmpDriverDetails_isEnable=true;
						cmpCheckIn.txtHireStatus.selectedIndex=1;
					}
					else if(currentState=="stEdit" && session.getAttribute("hirestatus") =="COMPLETED")
					{
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=false;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=false;
						cmpOtherService_isEnable=false;
						cmpRates_isEnable=false;
						cmpDriverDetails_isEnable=false;
						fmMain.enabled=false;
					}
					break;
				case "INVOICE":
						cmpCheckOut_isEnable=false;
						cmpCheckIn_isEnable=false;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=false;
						cmpOtherService_isEnable=false;
						cmpRates_isEnable=false;
						cmpDriverDetails_isEnable=false;
						fmMain.enabled=false;
					break;
				
				
				case "CONFIRMED":
					
					if(currentState=="stNew")//new record as confirm wihtout advance or deposit
					{
					//	Message.displayAlert(4,"Deposit or Advance has not been allocated.Are you sure you want to set hire status as 'CONFIRMED'?","CONFIRAMTION",confirmAlert);
						Alert.show("Deposit or Advance has not been allocated.Are you sure you want to set hire status as 'CONFIRMED'?","Warning",Alert.OK|Alert.CANCEL,this,confirmAlert,genericFunctions.IconQuestion,Alert.OK);
							cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
							cmpCheckIn_isEnable=false;
							cmpVehicleDetails_isEnable=true;
							cmpAccessoryService_isEnable=true;
							cmpOtherService_isEnable=true;
							cmpRates_isEnable=true;
							cmpDriverDetails_isEnable=true;
							fmMain.enabled=true;
					}
					else if(currentState=="stEdit" && session.getAttribute("hirestatus") != "CONFIRMED")//booked-->confirm
					{
						if(isCancelable()){
						if(!(new Number(com_dspl_malkey_domain_Freservation.advance)==0 && new Number(com_dspl_malkey_domain_Freservation.deposit)==0))	{
							//Message.displayAlert(3,"Deposit and Advance have to be settled in order to set hire status as CONFIRM,\npress OK to set deposit & adavace into zero.","Warning",confirmAlert);
							Alert.show("Deposit and Advance have to be settled in order to set hire status as CONFIRM,\nPress OK to set deposit & adavace into zero.","Warning",Alert.OK|Alert.CANCEL,this,confirmAlert,genericFunctions.IconQuestion,Alert.OK);
						}
						//Alert.show("Are you sure,you want to set hire status in to'CONFIRMED' \nWith-out deposit or adavace from client ?\nPress OK to set deposit & adavace into zero.","Warning",Alert.OK|Alert.CANCEL,this,confirmAlert,genericFunctions.IconQuestion,Alert.OK);
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=false;
						cmpVehicleDetails_isEnable=true;
						cmpAccessoryService_isEnable=true;
						cmpOtherService_isEnable=true;
						cmpRates_isEnable=true;
						cmpDriverDetails_isEnable=true;
						fmMain.enabled=true;}
						
					}
					
					if(currentState=="stEdit" && session.getAttribute("hirestatus") == "CONFIRMED")
					{
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=false;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=true;
						cmpOtherService_isEnable=true;
						cmpRates_isEnable=true;
						cmpDriverDetails_isEnable=true;
						fmMain.enabled=true;
					}

					
					break;
				
				
				case "INQUIRY":
					trace("Saturday");
					break;
				case "UPGRADE":
					if(session.getAttribute("hirestatus")=="CONFIRMED" ||session.getAttribute("hirestatus")== "PREPARED")
					{
					tabNavigator.selectedIndex=2;
					vehicleAvailabilityPopup_VehicleChange();
					cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
					cmpCheckIn_isEnable=false;
					cmpVehicleDetails_isEnable=true;
					cmpAccessoryService_isEnable=false;
					cmpOtherService_isEnable=false;
					cmpRates_isEnable=false;
					cmpDriverDetails_isEnable=false;
					fmMain.enabled=false;
					}
					break;
				case "VC":
					cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
					cmpCheckIn_isEnable=false;
					cmpVehicleDetails_isEnable=false;
					cmpAccessoryService_isEnable=false;
					cmpOtherService_isEnable=false;
					cmpRates_isEnable=false;
					cmpDriverDetails_isEnable=false;
					fmMain.enabled=false;
					break;
				
				case "COPY":
					cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
					cmpCheckIn_isEnable=false;
					cmpVehicleDetails_isEnable=true;
					cmpAccessoryService_isEnable=true;
					cmpOtherService_isEnable=true;
					cmpRates_isEnable=false;
					cmpDriverDetails_isEnable=true;
					fmMain.enabled=true;
					break;
				
				
				case "NOSHOW":
					if(currentState=="stEdit" && session.getAttribute("hirestatus") !="NOSHOW" )
					{
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=true;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=false;
						cmpOtherService_isEnable=false;
						cmpRates_isEnable=false;
						cmpDriverDetails_isEnable=true;
						cmpCheckIn.txtHireStatus.selectedIndex=1;
					}
					else if(currentState=="stEdit" && session.getAttribute("hirestatus") =="NOSHOW")
					{
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=false;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=false;
						cmpOtherService_isEnable=false;
						cmpRates_isEnable=false;
						cmpDriverDetails_isEnable=false;
						fmMain.enabled=false;
					}
					
/* 					if(currentState=="stEdit" )
					{
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=true;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=false;
						cmpOtherService_isEnable=false;
						cmpRates_isEnable=false;
						cmpDriverDetails_isEnable=false;
						cmpCheckIn.txtHireStatus.selectedIndex=2;
					} */
					
					break;
				
				
				case "PREPARED":
					if(currentState=="stEdit" && session.getAttribute("hirestatus") =="PREPARED")
					{
						cmpCheckOut_isEnable=false;//change the original cmpCheckOut_isEnable=true;
						cmpCheckIn_isEnable=false;
						cmpVehicleDetails_isEnable=false;
						cmpAccessoryService_isEnable=true;
						cmpOtherService_isEnable=true;
						cmpRates_isEnable=true;//but advance cannt change
						cmpDriverDetails_isEnable=true;
						fmMain.enabled=true;
					}
					break;
				
				
				case "QUOTE":
					trace("Saturday");
					break;
				
				
				default:
					trace("______________________");
					cmpCheckOut_isEnable=false;
					cmpCheckIn_isEnable=false;
					trace("Out of range");
					break;
				
				}
				

				
			}
			
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlertRates(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.YES)
				{
					txtRateType.text=nsChargeableDays.value !=0 ? (session.getAttribute('RateType').getRatetype(nsChargeableDays.value)) : '';
					cmpVehicleDetails.applyNewRatesVehicle();
				}
				else if(eventObj.detail==Alert.NO)
				{
					txtRateType.text=oldRateType;
				}
				
			}
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlertTaxComCode(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.OK)
				{
					PopUpManager.removePopUp(this);
				}
				
			}
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlertRatesTypeChange(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.YES)
				{
					cmpVehicleDetails.applyNewRatesVehicle();
				}
				else if(eventObj.detail==Alert.NO)
				{
					txtRateType.text=oldRateType;
				}
				
			}
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlertHireTypeChange(eventObj:CloseEvent):void
			{
				if(eventObj.detail==Alert.YES)
				{
					cmpVehicleDetails.applyNewRatesVehicle();
					oldHireType=txtHireType.text;
				}
				else if(eventObj.detail==Alert.NO)
				{
					txtHireType.text=oldHireType;
				}
				
			}
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlertHireTypeRollback(eventObj:CloseEvent):void
			{
				if(eventObj.detail==Alert.OK)
				{
					txtHireType.text=oldHireType;
				}
				
			}
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlertRateTypeRollback(eventObj:CloseEvent):void
			{
				if(eventObj.detail==Alert.OK)
				{
					txtRateType.text=oldRateType;
				}
				
			}
			
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlert(eventObj:CloseEvent):void
				
			{
				
				//if
				
				if(eventObj.detail==Alert.OK)
					
				{
					//code for updating whatever needs to be update
					com_dspl_malkey_domain_Freservation.deposit="0";
					com_dspl_malkey_domain_Freservation.advance="0";
					com_dspl_malkey_domain_Freservation.depositbal="0";
					com_dspl_malkey_domain_Freservation.advancebal="0";

					
				}
					
				else if(eventObj.detail==Alert.CANCEL)
					
				{
					txtHireStatus.text="";
					com_dspl_malkey_domain_Freservation.cohirestsid="";
					//no code required here unless you want to notify the user that they have cancelled the operation
					
				}
				
			}
			
			public function confirmAlertDummy(evenObj:CloseEvent):void
			{
				if(evenObj.detail==Alert.OK)
				{
					txtHireStatus.text="";
					com_dspl_malkey_domain_Freservation.cohirestsid = "";
				}
			}
			
			/***
			 * this method fire when user select confirm state for hire status in new state.then system will ask user 
			 * "do you  want to set confirm state with out deposite or adavace from client ..something like that.
			 * 
			 * */
			public function confirmAlert2(eventObj:CloseEvent):void
				
			{
				
				//if
				
				if(eventObj.detail==Alert.YES)
					
				{
					//code for updating whatever needs to be update
					com_dspl_malkey_domain_Freservation.deposit="0";
					com_dspl_malkey_domain_Freservation.advance="0";
					com_dspl_malkey_domain_Freservation.depositbal="0";
					com_dspl_malkey_domain_Freservation.advancebal="0";

					
				}
					
				else if(eventObj.detail==Alert.NO)
					
				{
					txtHireStatus.text="";
					com_dspl_malkey_domain_Freservation.cohirestsid="";
					//no code required here unless you want to notify the user that they have cancelled the operation
					
				}
				
			}

			
			
			

			
			
			
			
			
			
			
			
			//--------------------------------------------------------------------------------------------------------------------------------------------			
			/***
			 * this method fire on change the vehicle
			 * BOOKED 		:(If not checked out & If not checked in)	:then current state should display 
			 * CHECKOUT		:If not checked in 							:then current checked out state should display 
			 * CHECKIN		:If checked in 								:then current checked in state will display
			 * 
			 * */
			protected function cmpVehicleDetails_changeHandler(event:Event):void
			{
				if(currentState=="stNew" || ( currentState=="stEdit")|| ( currentState=="stView"))
				{
					if(cmpVehicleDetails.acResVehicle.length>0)
					{
						
						var tempFresvehicle:Com_dspl_malkey_domain_Fresvehicle=(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle);
						
						if(com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED" || (com_dspl_malkey_domain_Freservation.cohirestsid== "CONFIRMED") || (com_dspl_malkey_domain_Freservation.cohirestsid== "PREPARED")  || (com_dspl_malkey_domain_Freservation.cohirestsid=="COPY"))//not CHECKOUT & not CHECKIN
						{
							com_dspl_malkey_domain_Freservation.cofuellevel=genericFunctions.getArrayCollection(acVehicle,'regno',tempFresvehicle.id.regno).fuellevel;//com_dspl_malkey_domain_Fvehicle.fuellevel;
							com_dspl_malkey_domain_Freservation.comileage=genericFunctions.getArrayCollection(acVehicle,'regno',tempFresvehicle.id.regno).curmileage;//com_dspl_malkey_domain_Fvehicle.curmileage;
							com_dspl_malkey_domain_Freservation.cimileage=com_dspl_malkey_domain_Freservation.comileage;
							com_dspl_malkey_domain_Freservation.cifuellevel=com_dspl_malkey_domain_Freservation.cofuellevel;
							if(tempFresvehicle.id.regno.length >0)
							{
								//LOAD CURRENT STATUS OF VEHICLE FOR EASY FOR USER
								listByRegNoFvehicleinventrySRV(tempFresvehicle.id.regno);//retrive inventory items of vehicle not in reservation
								listByRegNoFvehicledamageSRV(tempFresvehicle.id.regno);//retrive damages of vehicle not in reservation
							}
						}
						
						else if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT")// not CHECKIN
						{
							com_dspl_malkey_domain_Freservation.cimileage=com_dspl_malkey_domain_Freservation.comileage;
							com_dspl_malkey_domain_Freservation.cifuellevel=com_dspl_malkey_domain_Freservation.cofuellevel;
						}
						
						cmpCheckOut.setVehicleStatus();//LOAD CURRENT STATUS OF VEHICLE FOR EASY FOR USER
						cmpCheckIn.setVehicleStatus();//test sanka-------------

						
					}//end vehicle details
					else
					{
						cmpCheckOut.resetAll();
						cmpCheckIn.resetAll();
					}//end else
				}//end first if
				
				//finally calculate
				calculate();
			}
			//--------------------------------------------------------------------------------------------------------------------------------------------
			
			
			
			
			
			
			
			
			
			

			private function isNotCheckIn():Boolean
			{
				return (com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT" || com_dspl_malkey_domain_Freservation.cohirestsid=="CONFIRMED" || com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED" || com_dspl_malkey_domain_Freservation.cohirestsid=="PREPARED")
			}

			/***
			 * Following method set enable disable for separate tabs in tabnavigator
			 * 
			 * */
			private function setStatus(value:Boolean):void
			{
				cmpRates_isEnable=value;
				cmpCheckOut_isEnable=value;
				cmpCheckIn_isEnable=value;
				cmpVehicleDetails_isEnable=value;
				cmpCustomerDetails_isEnable=value;
				cmpDriverDetails_isEnable=value;
				cmpAccessoryService_isEnable=value;
				cmpOtherService_isEnable=value;
			}
			
			/***
			 * when the state change this method will fire
			 * 
			 * 
			 * */
			protected function currentStateChangeHandler(event:StateChangeEvent):void
			{
				if(event.newState=='stDelete')
				{
					tabNavigator.enabled=true;
					setStatus(false);
				}
				if(event.newState=='stNew')
				{
					resetForm();
					tabNavigator.enabled=true;
					setStatus(true);
					cmpCheckOut_isEnable=false;
					cmpCheckIn_isEnable=false;
					this.visible=false;
					popupDatePicker();
				}
				if(event.newState=='stUndo')
				{
					listAll();
					resetForm();	
					tabNavigator.enabled=false;
				}
				if(event.newState=='stView')
				{
					setStatus(false);
					tabNavigator.enabled=true;
					nvb.recordIndex=0;
					
				}
				if(event.newState=='stEdit')
				{
					tabNavigator.enabled=true;
					setStatus(true);
				}
			}
			

			

			//private var datePicker:DatePicker;	
			
			protected function popupDatePicker():DatePicker
			{
				var dp:DatePicker=new DatePicker();
				dp.addEventListener("select",selectDate);
				dp.addEventListener("undo",undoDate);
				dp.din=com_dspl_malkey_domain_Freservation.din;
				dp.dout=com_dspl_malkey_domain_Freservation.dout;
				dp.timein=com_dspl_malkey_domain_Freservation.timein;
				dp.timeout=com_dspl_malkey_domain_Freservation.timeout;
				//dp.com_dspl_malkey_domain_Freservation=com_dspl_malkey_domain_Freservation;
				dp.acTime=acTime;
				PopUpManager.addPopUp(dp,this,true);
				PopUpManager.centerPopUp(dp);
				return dp;
			}
			
			protected function selectDate(event:DateSelectionEvent):void
			{
				//this.visible=true;
				setCreationPolicy();
				com_dspl_malkey_domain_Freservation.din=event.endDate;//datePicker.dtDateIn.selectedDate;
				com_dspl_malkey_domain_Freservation.dout=event.startDate;//datePicker.dtDateOut.selectedDate;
				com_dspl_malkey_domain_Freservation.gdout=event.startDate;//datePicker.dtDateOut.selectedDate;
				
				nsNumDays.value=event.numOfDay;//datePicker.nsNumDays.value;
				cmbTimeOut.selectedIndex=acTime.getItemIndex(event.startTime);//datePicker.cmbTimeOut.selectedIndex;
				cmbGOTime.selectedIndex=acTime.getItemIndex(event.startTime);//datePicker.cmbTimeOut.selectedIndex;
				cmbTimeIn.selectedIndex=acTime.getItemIndex(event.endTime);//datePicker.cmbTimeIn.selectedIndex;
				
				com_dspl_malkey_domain_Freservation.timeout=cmbTimeOut.selectedItem.toString();
				com_dspl_malkey_domain_Freservation.timein=cmbTimeIn.selectedItem.toString();
				com_dspl_malkey_domain_Freservation.gotime=cmbGOTime.selectedItem.toString();
				com_dspl_malkey_domain_Freservation.noofday=event.numOfDay;
				com_dspl_malkey_domain_Freservation.chargdays=event.numOfDay;
				var tempRateType:String=nsChargeableDays.value !=0 ? (session.getAttribute('RateType').getRatetype(nsChargeableDays.value)) : '';
				//var tempRateType:String=txtRateType.text;//nsChargeableDays.value !=0 ? (session.getAttribute('RateType').getRatetype(nsChargeableDays.value)) : '';

				if(mode=="edit"&& event.hasChange)
				{
					if(oldRateType!=tempRateType)
					{
						Message.displayAlert(4,"Rate type has been changed.\n"+oldRateType+" To "+tempRateType+"\nDo you want to apply new rates?","Warning",confirmAlertRates);
					}
				}
				btnNext_clickHandler();
				//Folowing code set the value to driverdetails tab
				cmpDriverDetails.setDateFromReservation(com_dspl_malkey_domain_Freservation.din,com_dspl_malkey_domain_Freservation.dout,cmbTimeOut.selectedIndex,cmbTimeIn.selectedIndex,nsNumDays.value);
				//retrive data from vehicle 
				//retrive data from driver
				if(isCheckInDateChanged)
				{
					isCheckInDateChanged=false;
					cmpCheckIn.setExcesMileage();
					//FOLLOWING CODE LINE WAS COMMENT FOR TESTING 2011.09.30 EVEING SUPPORT FOR VEHICLE CHANGE WITH DATE CHANGE...
					trace("TRRESERVATION.SELECTDATE.FUNCTION");
					autoSetOff();
					trace("TRRESERVATION.SELECTDATE.FUNCTION");
					//hasValiedDriverAllocation();
				}
				this.visible=true;
			}
			protected function undoDate(event:Event):void
			{
				nvb_undoHandler(event);
			}
			

			


			
			
			
			
			/***
			 * Following are the navigation bar event handler methods
			 * 
			 * 
			 * */
			
			
			protected function nvb_undoHandler(event:Event):void
			{
				btnCode="stUndo";
				currentState="stUndo";
				btnCode="stUndo";
			}
			
			
			protected function nvb_listHandler(event:Event):void
			{
				currentState="stView";
				btnCode="stView";				
			}

			
			protected function nvb_commonHandler(event:Event):void
			{
				resetForm();
				txtRefNo._nSelectedIndex=nvb.recordIndex;
				onSelectReservation(event);
			}
	
			
			
			protected function nvb_closeHandler():void
			{
				//titlewindow1_closeHandler(new CloseEvent(CloseEvent.CLOSE));
				trace("came here 0");trace("came here 1");trace("came here2 ");trace("came here 3");trace("after came here 4");}

			
			protected function nvb_findHandler(event:Event):void
			{
				btnCode="stView";
				//currentState="stView";
				txtRefNo.launchSearchGrid();
			}
		
			
			protected function nvb_editHandler(event:Event):void
			{
				btnCode="stEdit";
				txtRefNo.launchSearchGrid();
			}
			
			protected function nvb_edit_view_Handler(event:Event):void
			{
				btnCode="stView";
				txtRefNo.launchSearchGrid();
				currentState="stEdit";
			}
		
			
			protected function nvb_printHandler(event:Event):void
			{
				var request:URLRequest = new URLRequest(resourceManager.getString("resource","reportingURL",null,null).toString() + "/rentagreement.jsp");
				request.data =new URLVariables();
				request.data.resno=txtRefNo.text;
				request.data.hiretypeid=txtHireType.text;
				request.method = URLRequestMethod.POST;
				navigateToURL(request);
				
			}
			
			
			protected function nvb_newHandler(event:Event):void
			{
				btnCode="stNew";
				currentState="stNew";
			}
			
			
			protected function nvb_deleteHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				//currentState="stDelete";
				btnCode="stDelete";
				txtRefNo.launchSearchGrid();
				
			}
			
			
			protected function nvb_viewHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				btnCode="stView";
				currentState="stView";
				
			}
			
			public function isCopyNewAgreement():Boolean
			{
				return cmpCheckIn.isCopyNewAgreement();
			}
			public function dispatchCopyNewAgreement():void
			{
				return cmpCheckIn.dispatchCopyNewAgreement();
			}
			
				
			protected function nvb_updateHandler(event:Event):void
			{
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="UPGRADE"){
						changeVehicle(
							com_dspl_malkey_domain_Freservation.resno,
							cmpVehicleDetails.acResVehicle, 
							cmpVehicleDetails.acResVehicle.getItemAt(0).fresvehiclerate
						);
				}
				else
				{
					
					if(isCopyNewAgreement())//if user wants to change vehicle
					{
						dispatchCopyNewAgreement();
					}
					else//if user dont want to change vehicle
					{
						if(isCopy)//if vehicle changed aggreement 
						{
							save_ChangeCheckOutVehicle();
						}
						else//if not vehicle changed aggrement
						{
							update();
						}
					}
				}
				
			
			}
			
			
			public function getVehicleChangeConfirmation():void
			{
				cmpCheckIn.getVehicleChangeConfirmation();
			}
			
			protected function save_ChangeCheckOutVehicle():void
			{
				if(calculate()>=0)
				{
				com_dspl_malkey_domain_Freservation.debcode =cmpCustomerDetails.txtClient.text;
				com_dspl_malkey_domain_Freservation.paytypeid=cmpRates.txtPaymentType.text;
				com_dspl_malkey_domain_Freservation.deposit=cmpRates.txtDeposit.text;
				com_dspl_malkey_domain_Freservation.advance=cmpRates.txtAdvance.text;
				com_dspl_malkey_domain_Freservation.cohirestsid=txtHireStatus.text;
				com_dspl_malkey_domain_Freservation.itinerary=txtItinerary.text;
				com_dspl_malkey_domain_Freservation.returnaddress=txtReturnAddress.text;
				com_dspl_malkey_domain_Freservation.hiretypeid=txtHireType.text;
				com_dspl_malkey_domain_Freservation.gotime=cmbGOTime.selectedItem;
				com_dspl_malkey_domain_Freservation.gdout=dtGODate.selectedDate;
				
				/*Newly added for reporting purpose on 2011.12.12  */
				com_dspl_malkey_domain_Freservation.total_accessories=cmpRates.txtTotalAccesories.text;
				com_dspl_malkey_domain_Freservation.total_addcharges=cmpRates.txtTotalAddCharge.text;
				com_dspl_malkey_domain_Freservation.total_othersrv=cmpRates.txtTotalOther.text;
				com_dspl_malkey_domain_Freservation.total_discount=(new Number(cmpRates.txtTotalDiscountAccesories.text)+
					new Number(cmpRates.txtTotalDiscountOther.text)+
					new Number(txtDetentionDiscount.text)+
					new Number(txtNightOutDiscout.text)+
					new Number(txtExtraMileageDiscout.text)+
					new Number(txtExtraHoursDiscout1.text)+
					new Number(cmpRates.txtVehicleDiscountAmt.text)).toFixed(NO_OF_DECIMAL_POINT);
				/*End   on 2011.12.12 */	
				
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED" || com_dspl_malkey_domain_Freservation.cohirestsid=="COPY")
				{
					//com_dspl_malkey_domain_Freservation.ciother="0";
					com_dspl_malkey_domain_Freservation.cidetenhrsrs="0"; 
					com_dspl_malkey_domain_Freservation.cifueldiff="0.00";
					com_dspl_malkey_domain_Freservation.cinightoutrs="0.0";
					com_dspl_malkey_domain_Freservation.cixsmileage=0;
					com_dspl_malkey_domain_Freservation.cixsmileagers="0";
					com_dspl_malkey_domain_Freservation.cidetenhrs=0;
					com_dspl_malkey_domain_Freservation.cofuellevel=0;
					com_dspl_malkey_domain_Freservation.cidamage=" ";
					com_dspl_malkey_domain_Freservation.cidamagers="0.00";
					com_dspl_malkey_domain_Freservation.coinspectby=" ";
					com_dspl_malkey_domain_Freservation.cifuellevel=0;
					com_dspl_malkey_domain_Freservation.cimileage=0;
					com_dspl_malkey_domain_Freservation.xhoursamt="0.00";
					if(hasnotPaidDeposit){
						com_dspl_malkey_domain_Freservation.depositbal=cmpRates.txtDeposit.text;
					}//}
					if(hasnotPaidAdvance){
						com_dspl_malkey_domain_Freservation.advancebal=cmpRates.txtAdvance.text; 
					}
					
				}
				
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKIN" || com_dspl_malkey_domain_Freservation.cohirestsid=="NOSHOW"|| com_dspl_malkey_domain_Freservation.cohirestsid=="COMPLETED")
				{
					com_dspl_malkey_domain_Freservation.cifuellevel=cmpCheckIn.getCurrentFuelMeterLevel();
					cmpCheckIn.getBind();
					try
					{
						var data:BitmapData = new BitmapData(cmpCheckIn.imgCI.width,cmpCheckIn.imgCI.height);
						data.draw(cmpCheckIn.imgCI);
						var enc:JPEGEncoder = new JPEGEncoder(100);
						var ba:ByteArray=enc.encode(data);
						com_dspl_malkey_domain_Freservation.checkindata=ba;
					}
					catch(error:Error)
					{
						Message.displayAlert(1,error.message,"ERROR",null);
						//Alert.show(error.message);
					}
						
				}
				 if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT")
				{
					//com_dspl_malkey_domain_Freservation.ciother="0";
					com_dspl_malkey_domain_Freservation.cidetenhrsrs="0"; 
					com_dspl_malkey_domain_Freservation.cifueldiff="0.00";
					com_dspl_malkey_domain_Freservation.cinightoutrs="0.0";
					com_dspl_malkey_domain_Freservation.cixsmileage=0;
					com_dspl_malkey_domain_Freservation.cixsmileagers="0";
					com_dspl_malkey_domain_Freservation.cidetenhrs=0;
					com_dspl_malkey_domain_Freservation.cofuellevel=cmpCheckOut.getCurrentFuelMeterLevel();
					com_dspl_malkey_domain_Freservation.cifuellevel=0;
					com_dspl_malkey_domain_Freservation.cimileage=0;
					com_dspl_malkey_domain_Freservation.xhoursamt="0.00";
					var user:Com_dspl_malkey_domain_Fpass=(Com_dspl_malkey_domain_Fpass)(session.getAttribute("user"));
					com_dspl_malkey_domain_Freservation.coinspectby=user.username;
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFresvehinv=cmpCheckOut.getSelectedInventory();
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFvehicledamage=cmpCheckOut.getVehicleDamage;//this is check out damages

					try
					{
						var data:BitmapData = new BitmapData(cmpCheckOut.imgCI.width,cmpCheckOut.imgCI.height);
						data.draw(cmpCheckOut.imgCI);
						var enc:JPEGEncoder = new JPEGEncoder(100);
						var ba:ByteArray=enc.encode(data);
						//Alert.show("length:"+ba.length);
						com_dspl_malkey_domain_Freservation.checkoutdata=ba;
					}
					catch(error:Error)
					{
						Message.displayAlert(1,error.message,"ERROR",null);
						//Alert.show(error.message);
					}
					
				}

				com_dspl_malkey_domain_Freservation.quoteno="";
				com_dspl_malkey_domain_Freservation.addmach="";
				com_dspl_malkey_domain_Freservation.adduser="";
				com_dspl_malkey_domain_Freservation.timeout=cmbTimeOut.selectedItem;
				com_dspl_malkey_domain_Freservation.timein=cmbTimeIn.selectedItem;
				com_dspl_malkey_domain_Freservation.cohirestsid="CONFIRMED";
				if(manualValidation())
				{
					
					
					changeCheckOutVehicle(
						//Following are the New reservation 
						com_dspl_malkey_domain_Freservation,
						com_dspl_malkey_domain_Freshed/* Com_dspl_malkey_domain_Freshed(session.getAttribute("reshed")) */,
						cmpVehicleDetails.acResVehicle, 
						cmpAccessoryService.acResAccessory, 
						cmpDriverDetails.acResMalkeyDrivers,
						cmpOtherService.acResothsrv,
						cmpVehicleDetails.acResVehicle.getItemAt(0).fresvehiclerate, 
						cmpAccessoryService.getResAccessoryRate(),
						com_dspl_malkey_domain_Fresdriverrate/* com_dspl_malkey_domain_Freservation.hiretypeid!='SD' ? cmpDriverDetails.getResDriverRate() : null */,
						cmpOtherService.getResOtherServiceRate(),
						cmpRates.getAdditionalRates(),
						cmpDriverDetails.getSelectedClientDrivers(),
						cmpCheckIn.getVehicleDamage,/*checkin damages*/
						cmpCheckIn.getSelectedInventory(),/*checkin inventory*/
						//Following are the old reservation 
						copyFreservation,
						com_dspl_malkey_domain_Freshed/* Com_dspl_malkey_domain_Freshed(session.getAttribute("reshed")) */,
						copyacResVehicle,
						copyacResAccessory,
						copyacResMalkeyDrivers,
						copyacResothsrv,
						copyFresvehiclerate,
						copyacResAccessoryRate,
						copyFresdriverrate,
						copyacResOtherServiceRate,
						copyacAdditionalRates,
						copyacResclientdriver,
						copyacVehicleDamage,
						copyacSelectedInventory
					);
				}
				}
				else
				{
				trace("error");
				}
				
			
			}
			
			
			
			protected function update():void
			{
				if(calculate()>=0)
				{
				com_dspl_malkey_domain_Freservation.debcode =cmpCustomerDetails.txtClient.text;
				com_dspl_malkey_domain_Freservation.paytypeid=cmpRates.txtPaymentType.text;
				com_dspl_malkey_domain_Freservation.deposit=cmpRates.txtDeposit.text;
				com_dspl_malkey_domain_Freservation.advance=cmpRates.txtAdvance.text;
				/*Following code segment added because user edit booked agreement depost --> zero and confirm state*/
 				/* if(com_dspl_malkey_domain_Freservation.cohirestsid=="CONFIRM")
				{
					if(new Number(com_dspl_malkey_domain_Freservation.deposit)==0){
	 				com_dspl_malkey_domain_Freservation.depositbal="0";
					}
					if(new Number(com_dspl_malkey_domain_Freservation.advance)==0){
					com_dspl_malkey_domain_Freservation.advancebal="0"; 
					}
				}  */
/* 				if(com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED")
				{
					if(new Number(com_dspl_malkey_domain_Freservation.depositbal)==0){
	 				com_dspl_malkey_domain_Freservation.depositbal=cmpRates.txtDeposit.text;
					}
					if(new Number(com_dspl_malkey_domain_Freservation.advancebal)==0){
					com_dspl_malkey_domain_Freservation.advancebal=cmpRates.txtAdvance.text; 
					}
				} */
				com_dspl_malkey_domain_Freservation.cohirestsid=txtHireStatus.text;
				com_dspl_malkey_domain_Freservation.itinerary=txtItinerary.text;
				com_dspl_malkey_domain_Freservation.returnaddress=txtReturnAddress.text;
				com_dspl_malkey_domain_Freservation.hiretypeid=txtHireType.text;
				com_dspl_malkey_domain_Freservation.gotime=cmbGOTime.selectedItem;
				com_dspl_malkey_domain_Freservation.gdout=dtGODate.selectedDate;
				
				
				/*Newly added for reporting purpose on 2011.12.12  */
				com_dspl_malkey_domain_Freservation.total_accessories=cmpRates.txtTotalAccesories.text;
				com_dspl_malkey_domain_Freservation.total_addcharges=cmpRates.txtTotalAddCharge.text;
				com_dspl_malkey_domain_Freservation.total_othersrv=cmpRates.txtTotalOther.text;
				com_dspl_malkey_domain_Freservation.total_discount=(new Number(cmpRates.txtTotalDiscountAccesories.text)+
					new Number(cmpRates.txtTotalDiscountOther.text)+
					new Number(txtDetentionDiscount.text)+
					new Number(txtNightOutDiscout.text)+
					new Number(txtExtraMileageDiscout.text)+
					new Number(txtExtraHoursDiscout1.text)+
					new Number(cmpRates.txtVehicleDiscountAmt.text)).toFixed(NO_OF_DECIMAL_POINT);
				/*End   on 2011.12.12 */	
				
				com_dspl_malkey_domain_Freservation.checkoutdata=getImage();
				com_dspl_malkey_domain_Freservation.checkindata=com_dspl_malkey_domain_Freservation.checkoutdata;
				
				//	com_dspl_malkey_domain_Freservation.comileage=0;
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED")//should write code for PREPAIRED/CONFIRM
				{
					//com_dspl_malkey_domain_Freservation.ciother="0";
					com_dspl_malkey_domain_Freservation.cidetenhrsrs="0"; 
					com_dspl_malkey_domain_Freservation.cifueldiff="0.00";
					com_dspl_malkey_domain_Freservation.cinightoutrs="0.0";
					com_dspl_malkey_domain_Freservation.cixsmileage=0;
					com_dspl_malkey_domain_Freservation.cixsmileagers="0";
					com_dspl_malkey_domain_Freservation.cidetenhrs=0;
					com_dspl_malkey_domain_Freservation.cofuellevel=0;
					com_dspl_malkey_domain_Freservation.cidamage=" ";
					com_dspl_malkey_domain_Freservation.cidamagers="0.00";
					com_dspl_malkey_domain_Freservation.coinspectby=" ";
					com_dspl_malkey_domain_Freservation.cifuellevel=0;
					com_dspl_malkey_domain_Freservation.cimileage=0;
					com_dspl_malkey_domain_Freservation.xhoursamt="0.00";

					if(hasnotPaidDeposit){
					//if(new Number(com_dspl_malkey_domain_Freservation.depositbal)==0){
						com_dspl_malkey_domain_Freservation.depositbal=cmpRates.txtDeposit.text;
					}//}
					if(hasnotPaidAdvance){
					//if(new Number(com_dspl_malkey_domain_Freservation.advancebal)==0){
						com_dspl_malkey_domain_Freservation.advancebal=cmpRates.txtAdvance.text; 
					}
					
					//com_dspl_malkey_domain_Freservation.deposit==com_dspl_malkey_domain_Freservation.depositbal
				}
				
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKIN" || com_dspl_malkey_domain_Freservation.cohirestsid=="NOSHOW"|| com_dspl_malkey_domain_Freservation.cohirestsid=="COMPLETED")
				{
					com_dspl_malkey_domain_Freservation.cifuellevel=cmpCheckIn.getCurrentFuelMeterLevel();
					cmpCheckIn.getBind();
					try
					{
						var data:BitmapData = new BitmapData(cmpCheckIn.imgCI.width,cmpCheckIn.imgCI.height);
						data.draw(cmpCheckIn.imgCI);
						var enc:JPEGEncoder = new JPEGEncoder(100);
						var ba:ByteArray=enc.encode(data);
						com_dspl_malkey_domain_Freservation.checkindata=ba;
					}
					catch(error:Error)
					{
						Message.displayAlert(1,error.message,"ERROR",null);
						//Alert.show(error.message);
					}
						
				}
				 if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT")
				{
					//com_dspl_malkey_domain_Freservation.ciother="0";
					com_dspl_malkey_domain_Freservation.cidetenhrsrs="0"; 
					com_dspl_malkey_domain_Freservation.cifueldiff="0.00";
					com_dspl_malkey_domain_Freservation.cinightoutrs="0.0";
					com_dspl_malkey_domain_Freservation.cixsmileage=0;
					com_dspl_malkey_domain_Freservation.cixsmileagers="0";
					com_dspl_malkey_domain_Freservation.cidetenhrs=0;
					com_dspl_malkey_domain_Freservation.cofuellevel=cmpCheckOut.getCurrentFuelMeterLevel();
					com_dspl_malkey_domain_Freservation.cifuellevel=0;
					com_dspl_malkey_domain_Freservation.cimileage=0;
					com_dspl_malkey_domain_Freservation.cidamagers="0.00";
					com_dspl_malkey_domain_Freservation.cidamage=" ";
					com_dspl_malkey_domain_Freservation.xhoursamt="0.00";
					var user:Com_dspl_malkey_domain_Fpass=(Com_dspl_malkey_domain_Fpass)(session.getAttribute("user"));
					com_dspl_malkey_domain_Freservation.coinspectby=user.username;
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFresvehinv=cmpCheckOut.getSelectedInventory();
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFvehicledamage=cmpCheckOut.getVehicleDamage;//this is check out damages

					try
					{
						/* var data:BitmapData = new BitmapData(cmpCheckOut.imgCI.width,cmpCheckOut.imgCI.height);
						data.draw(cmpCheckOut.imgCI);
						var enc:JPEGEncoder = new JPEGEncoder(100);
						var ba:ByteArray=enc.encode(data); */
						//Alert.show("length:"+ba.length);
						com_dspl_malkey_domain_Freservation.checkoutdata=getImage();//ba;
					}
					catch(error:Error)
					{
						Message.displayAlert(1,error.message,"ERROR",null);
						//Alert.show(error.message);
					}
					
				}

/* 				 if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT")
				{
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFresvehinv=cmpCheckOut.getSelectedInventory();
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFvehicledamage=cmpCheckOut.getVehicleDamage;//this is check out damages
				} */
				com_dspl_malkey_domain_Freservation.quoteno="";
				com_dspl_malkey_domain_Freservation.addmach="";
				com_dspl_malkey_domain_Freservation.adduser="";
				com_dspl_malkey_domain_Freservation.timeout=cmbTimeOut.selectedItem;
				com_dspl_malkey_domain_Freservation.timein=cmbTimeIn.selectedItem;
				

				//hasValiedDriverAllocation()
				if(manualValidation())
				{
					
					changeStatus(
						com_dspl_malkey_domain_Freservation,
						com_dspl_malkey_domain_Freshed/* Com_dspl_malkey_domain_Freshed(session.getAttribute("reshed")) */,
						cmpVehicleDetails.acResVehicle, 
						cmpAccessoryService.acResAccessory, 
						cmpDriverDetails.acResMalkeyDrivers,
						cmpOtherService.acResothsrv,
						cmpVehicleDetails.acResVehicle.getItemAt(0).fresvehiclerate, 
						cmpAccessoryService.getResAccessoryRate(),
						com_dspl_malkey_domain_Fresdriverrate/* com_dspl_malkey_domain_Freservation.hiretypeid!='SD' ? cmpDriverDetails.getResDriverRate() : null */,
						cmpOtherService.getResOtherServiceRate(),
						cmpRates.getAdditionalRates(),
						cmpDriverDetails.getSelectedClientDrivers(),
						cmpCheckIn.getVehicleDamage,/*checkin damages*/
						cmpCheckIn.getSelectedInventory()/*checkin inventory*/); 
				}
				}
				else
				{
				trace("error");
				}
				
			
			}
			
			public function getImage():ByteArray{
				var data:BitmapData = new BitmapData(cmpCheckOut.imgCI.width,cmpCheckOut.imgCI.height);
				data.draw(cmpCheckOut.imgCI);
				var enc:JPEGEncoder = new JPEGEncoder(100);
				var ba:ByteArray=enc.encode(data);
				return ba;
			}
			
			
			protected function nvb_saveHandler(event:Event):void
			{
				com_dspl_malkey_domain_Freservation.debcode =cmpCustomerDetails.txtClient.text;
				com_dspl_malkey_domain_Freservation.paytypeid=cmpRates.txtPaymentType.text;
				com_dspl_malkey_domain_Freservation.deposit=cmpRates.txtDeposit.text;
				com_dspl_malkey_domain_Freservation.advance=cmpRates.txtAdvance.text;
				com_dspl_malkey_domain_Freservation.depositbal=cmpRates.txtDeposit.text;
				com_dspl_malkey_domain_Freservation.advancebal=cmpRates.txtAdvance.text;
				com_dspl_malkey_domain_Freservation.cohirestsid=txtHireStatus.text;
				com_dspl_malkey_domain_Freservation.itinerary=txtItinerary.text;
				com_dspl_malkey_domain_Freservation.returnaddress=txtReturnAddress.text;
				com_dspl_malkey_domain_Freservation.hiretypeid=txtHireType.text;
				com_dspl_malkey_domain_Freservation.gdout=dtGODate.selectedDate;
				
				/*Newly added for reporting purpose on 2011.12.12  */
				com_dspl_malkey_domain_Freservation.total_accessories=cmpRates.txtTotalAccesories.text;
				com_dspl_malkey_domain_Freservation.total_addcharges=cmpRates.txtTotalAddCharge.text;
				com_dspl_malkey_domain_Freservation.total_othersrv=cmpRates.txtTotalOther.text;
				com_dspl_malkey_domain_Freservation.total_discount=(new Number(cmpRates.txtTotalDiscountAccesories.text)+
					new Number(cmpRates.txtTotalDiscountOther.text)+
					new Number(txtDetentionDiscount.text)+
					new Number(txtNightOutDiscout.text)+
					new Number(txtExtraMileageDiscout.text)+
					new Number(txtExtraHoursDiscout1.text)+
					new Number(cmpRates.txtVehicleDiscountAmt.text)).toFixed(NO_OF_DECIMAL_POINT);
				
				com_dspl_malkey_domain_Freservation.checkoutdata=getImage();
				com_dspl_malkey_domain_Freservation.checkindata=com_dspl_malkey_domain_Freservation.checkoutdata;

				/*End   on 2011.12.12 */	
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED")
				{
					com_dspl_malkey_domain_Freservation.coinspectby="";
					com_dspl_malkey_domain_Freservation.cofuellevel=0;
					com_dspl_malkey_domain_Freservation.comileage=0;
				}
				
				if((com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT") || (com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED") || (com_dspl_malkey_domain_Freservation.cohirestsid=="CONFIRMED"))
				{
					com_dspl_malkey_domain_Freservation.cifuellevel=0;
					com_dspl_malkey_domain_Freservation.cimileage=0;
					com_dspl_malkey_domain_Freservation.cidetenhrsrs="0"; 
					com_dspl_malkey_domain_Freservation.cifueldiff="0.00";
					com_dspl_malkey_domain_Freservation.cinightoutrs="0.0";
					com_dspl_malkey_domain_Freservation.cixsmileage=0;
					com_dspl_malkey_domain_Freservation.cixsmileagers="0";
					com_dspl_malkey_domain_Freservation.cidetenhrs=0;
					com_dspl_malkey_domain_Freservation.cidamage=" ";
					//com_dspl_malkey_domain_Freservation.ciother="0";
					com_dspl_malkey_domain_Freservation.cidamagers="0.00";
					com_dspl_malkey_domain_Freservation.xhoursamt="0.00";
				}
				
				com_dspl_malkey_domain_Freservation.quoteno="";
				com_dspl_malkey_domain_Freservation.addmach="";
				com_dspl_malkey_domain_Freservation.adduser="";
				com_dspl_malkey_domain_Freservation.timeout=cmbTimeOut.selectedItem;
				com_dspl_malkey_domain_Freservation.timein=cmbTimeIn.selectedItem;
				com_dspl_malkey_domain_Freservation.gotime=cmbGOTime.selectedItem;
				//com_dspl_malkey_domain_Freservation.comileage
				if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT")
				{
					//set the values from checkout 
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFresvehinv=cmpCheckOut.getSelectedInventory();
					(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFvehicledamage=cmpCheckOut.getVehicleDamage;
					//Alert.show("length:"+(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFvehicledamage.length);
					com_dspl_malkey_domain_Freservation.cofuellevel=cmpCheckOut.getCurrentFuelMeterLevel();
					
					try
					{
						var data:BitmapData = new BitmapData(cmpCheckOut.imgCI.width,cmpCheckOut.imgCI.height);
						data.draw(cmpCheckOut.imgCI);
						var enc:JPEGEncoder = new JPEGEncoder(100);
						var ba:ByteArray=enc.encode(data);
						com_dspl_malkey_domain_Freservation.checkoutdata=ba;
					}
					catch(error:Error)
					{
						Message.displayAlert(1,error.message,"ERROR",null);
						//Alert.show(error.message);
					}
					
				}
				if(manualValidation())
				{
					createFreservationSRV
					(
						com_dspl_malkey_domain_Freservation,
						com_dspl_malkey_domain_Freshed /* Com_dspl_malkey_domain_Freshed(session.getAttribute("reshed")) */,
						cmpVehicleDetails.acResVehicle, 
						cmpAccessoryService.acResAccessory, 
						cmpDriverDetails.acResMalkeyDrivers, 
						cmpOtherService.acResothsrv, 
						cmpVehicleDetails.acResVehicle.getItemAt(0).fresvehiclerate, 
						cmpAccessoryService.getResAccessoryRate(),
						com_dspl_malkey_domain_Fresdriverrate/*com_dspl_malkey_domain_Freservation.hiretypeid!='SD' ? cmpDriverDetails.getResDriverRate() :null*/, 
						cmpOtherService.getResOtherServiceRate(),
						cmpRates.getAdditionalRates(),
						cmpDriverDetails.getSelectedClientDrivers(),
						false
					); 
				}				
				
			}
			
			
			protected function nvb_clickHandler(event:Event):void
			{
				if(tabNavigator.creationPolicy!=ContainerCreationPolicy.ALL)
				{
					tabNavigator.creationPolicy=ContainerCreationPolicy.ALL;
				}
			}
			public function setCreationPolicy():void
			{
				if(tabNavigator.creationPolicy!=ContainerCreationPolicy.ALL)
				{
					Mouse.hide();
					tabNavigator.creationPolicy=ContainerCreationPolicy.ALL;
					Mouse.show();
				}
			}
			
			//End of navigationbar Events


			/***
			 * Above are the navigation bar event handler methods
			 * 
			 * End
			 * */
			
			
			
			


			
			

			protected function dtDateOut_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				cmpVehicleDetails.resetAll();
			}

			

			


			
			/***
			 * Date fixing buttons
			 * 
			 * */
			protected function btnNext_clickHandler():void
			{
				if(dtDateOut.selectedDate!=null && dtDateIn.selectedDate!=null)
				{
					var df:DateFormatter=new DateFormatter();
					df.formatString="YYYY.MM.DD";
					searchVehicles(df.format(dtDateOut.selectedDate), df.format(dtDateIn.selectedDate), new ArrayCollection(), true);
					driverListAvailable(dtDateOut.selectedDate, dtDateIn.selectedDate);
				}
			}
			

			protected function btnEdit_clickHandler():void
			{
				mode="edit";
				oldRateType=txtRateType.text;
				//btnEdit.visible=false;
				var instance_datePicker:DatePicker =popupDatePicker();
				instance_datePicker.dtDateOut.selectedDate=dtDateOut.selectedDate;
				instance_datePicker.dtDateIn.selectedDate=dtDateIn.selectedDate;
				instance_datePicker.cmbTimeIn.selectedIndex=cmbTimeIn.selectedIndex;
				instance_datePicker.cmbTimeOut.selectedIndex=cmbTimeOut.selectedIndex;
				instance_datePicker.nsNumDays.value=nsNumDays.value;
				instance_datePicker.btnUndo.visible=false;
			}

			
			

			protected function genarate_Invoice(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var request:URLRequest =null;
				
				if(com_dspl_malkey_domain_Freservation.hiretypeid=="SD")
				{
				request= new URLRequest(resourceManager.getString("resource","reportingURL",null,null).toString() + "/Invoice (Self-Drive).pdf");
				}
				else
				{
					request= new URLRequest(resourceManager.getString("resource","reportingURL",null,null).toString() + "/Invoice (With Driver).pdf");
				}
				request.data =new URLVariables();
				request.data.resno=txtRefNo.text;
				request.method = URLRequestMethod.POST;
				navigateToURL(request);
			}
			
			
			
			
			
			

			/***
			 * Set Rates for drivers
			 * 
			 *
			 * */
			private function setDriverRates():Com_dspl_malkey_domain_Fresdriverrate
			{
				if(com_dspl_malkey_domain_Fdebtor==null)
				{
					com_dspl_malkey_domain_Fdebtor=genericFunctions.getArrayCollection(session.getAttribute('acClient'),'debcode',(Com_dspl_malkey_domain_Freshed(session.getAttribute('reshed'))).debcode) as Com_dspl_malkey_domain_Fdebtor;
				}
				
				if(com_dspl_malkey_domain_Fdebtor.clienttype!=null ){
				if(com_dspl_malkey_domain_Fdebtor.clienttype.length>0 ){
				var temp_com_dspl_malkey_domain_Fdriverrate:Com_dspl_malkey_domain_Fdriverrate= getSelecetedItem(acDriverrate, com_dspl_malkey_domain_Fdebtor.clienttype,txtRateType.text) as Com_dspl_malkey_domain_Fdriverrate;
				com_dspl_malkey_domain_FresdriverratePK.clienttype=com_dspl_malkey_domain_Fdebtor.clienttype;
				com_dspl_malkey_domain_FresdriverratePK.ratetype=txtRateType.text;//session.getAttribute("RateType").getRatetype(com_dspl_malkey_domain_Freservation.chargdays);
				com_dspl_malkey_domain_Fresdriverrate.id=com_dspl_malkey_domain_FresdriverratePK;
				com_dspl_malkey_domain_Fresdriverrate.nightoutrate=temp_com_dspl_malkey_domain_Fdriverrate.nightoutrate;
				com_dspl_malkey_domain_Fresdriverrate.otrate=temp_com_dspl_malkey_domain_Fdriverrate.otrate;
				com_dspl_malkey_domain_Fresdriverrate.rate=temp_com_dspl_malkey_domain_Fdriverrate.rate;
				com_dspl_malkey_domain_Fresdriverrate.addcharges="0";
				com_dspl_malkey_domain_Fresdriverrate.addmach="";
				com_dspl_malkey_domain_Fresdriverrate.adduser="";
				com_dspl_malkey_domain_Fresdriverrate.adddate=new Date();
				
				if(com_dspl_malkey_domain_Fresdriverrate.discount_nightout!=null)
				{
					if(com_dspl_malkey_domain_Fresdriverrate.discount_nightout.length<=0)
					{
						com_dspl_malkey_domain_Fresdriverrate.discount_nightout="0.00";
					}
				}
				else
				{
					com_dspl_malkey_domain_Fresdriverrate.discount_nightout="0.00";
				}
				if(com_dspl_malkey_domain_Fresdriverrate.discount_detention!=null)
				{
					if(com_dspl_malkey_domain_Fresdriverrate.discount_detention.length<=0)
					{
						com_dspl_malkey_domain_Fresdriverrate.discount_detention="0.00";
					}
				}
				else
				{
					com_dspl_malkey_domain_Fresdriverrate.discount_detention="0.00";
				}
				/* com_dspl_malkey_domain_Fresdriverrate.discount="0.00"; */}}
				return com_dspl_malkey_domain_Fresdriverrate;
			}
			
			/***
			 * fetch Rates for drivers and return rates for given client-type & rate- type
			 * 
			 *
			 * */
			public function getSelecetedItem(acSourceArrayCollection:ArrayCollection, sSearchCodeClienttype:*, sSearchCodeRatetype:*):*
			{
				var oArrayElement:*;
				if (acSourceArrayCollection!=null && sSearchCodeClienttype!=null && sSearchCodeRatetype!=null)
				{
					for(var i:int = 0; i < acSourceArrayCollection.length; i++)
					{
						oArrayElement = acSourceArrayCollection.getItemAt(i);
						if(oArrayElement["id"]["clienttype"]== sSearchCodeClienttype && oArrayElement["id"]["ratetype"]== sSearchCodeRatetype)
						{
							return oArrayElement;
						}
					}
				}
				return oArrayElement;	
			}
			
			
			
			
			
			
			

			
/* 			protected function findByResno(arg0:String):void
			{
				crFresdriverrateSRVFindByResno.token = fresdriverrateSRV.findByResno(arg0);
			} */
			

			protected function cmpDriverDetails_dateChangeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				if(cmpDriverDetails.dtDateOut.selectedDate!=null && cmpDriverDetails.dtDateIn.selectedDate!=null){
				driverListAvailable(cmpDriverDetails.dtDateOut.selectedDate, cmpDriverDetails.dtDateIn.selectedDate);
				}
			}

			
			protected function freservationSRVListAllByResno(arg0:String):void
			{
				crFreservationSRVlistAllByResno.token = freservationSRV.listAllByResno(arg0);
			}
			protected function freservationSRVListAllByResnoCopyMode(arg0:String):void
			{
				crFreservationSRVlistAllByResnoCopyMode.token = freservationSRV.listAllByResno(arg0);
			}
			
			
			/***
			 * Following method get from all detaild tables at once and set
			 * following method set creation policy all when this method fire
			 * */
			protected function crFreservationSRVlistAllByResno_resultHandler(event:ResultEvent):void
			{
				commonresultHandler(event);
				commonRateUtil();
				this.visible=true;
			}
			
			
			
			/***
			 * Following method get from all detaild tables at once and set
			 * following method set creation policy all when this method fire
			 * */
			protected function crFreservationSRVlistAllByResnoCopyMode_resultHandler(event:ResultEvent):void
			{
				commonresultHandler(event);
				autoSetOff();
				commonRateUtil();
			}
			
			
			private function commonresultHandler(event:ResultEvent):void
			{
				setCreationPolicy();
				reservationDetails = event.result as Com_dspl_malkey_report_Reservation;
				setVehicleDetails(reservationDetails.fresvehicle);
				setResAccessory(reservationDetails.fresaccs);
				setResothsrv(reservationDetails.fresothsrv);
				setResMalkeyDrivers(reservationDetails.fresdriver);
				setResDriverRate(reservationDetails.fresdriverrate);
				setAdditionalCharges(reservationDetails.fresaddcharge);
				setSelectClientDriver(reservationDetails.fresclientdriver);
			}

			private function commonRateUtil():void
			{
				//finally calculate all
				hasnotPaidAdvance=cmpRates.setEditableAdvance();
				hasnotPaidDeposit=cmpRates.setEditableDeposit();
				cmpRates.wakeup();
				calculate();
				setTransactionStatus();//set enable the windows
			}
			
			
			


			




			protected function cmpCheckOut_loadHandler(event:Event):void
			{
				//Alert.show("fire ="+reservationDetails.fresvehicledamage.length);
				if(( currentState=="stEdit")|| ( currentState=="stView"))
				{
					if(com_dspl_malkey_domain_Freservation.cohirestsid== "CHECKOUT" || com_dspl_malkey_domain_Freservation.cohirestsid== "CHECKIN" || com_dspl_malkey_domain_Freservation.cohirestsid== "COMPLETED" || com_dspl_malkey_domain_Freservation.cohirestsid== "NOSHOW" || com_dspl_malkey_domain_Freservation.cohirestsid== "CONFIRMED")
					{
						//this is the option view state -->stView that mean retrive resVehicleInventory.
						setVehicleDamage(reservationDetails.fresvehicledamage);
						setVehicleInventory(reservationDetails.fresvehinv);
					}
				}
			}


			
			
			


			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				this.isPopUp = false;
				myValidators = [nvNumDays,nvChargeableDays,svHireType,svHireStatus,dvOut,dvIn];
				var resourceManager:IResourceManager = ResourceManager.getInstance();
				nFormatter.useThousandsSeparator=false;
				nFormatter.precision=resourceManager.getInt("resource","noofdecimals.reservation");
				nFormatter.rounding=NumberBaseRoundType.NEAREST; 
				dispatchEvent(new Event("createCompleate"));
				
			}
			
			
			public function newState():void
			{
				btnCode="stNew";
				currentState="stNew";
			}
			
			public function editState():void
			{
				btnCode="stEdit";
				currentState="stEdit";
			}
			public function viewState():void
			{
				btnCode="stView";
				currentState="stView";
			}
			





			/***
			 * Fire when user change checkin date
			 * @Author :Sanka
			 * */
			protected function cmpCheckIn_dateChangeHandler(event:Event):void
			{
				tabNavigator.selectedIndex=0;
				btnEdit_clickHandler();
				isCheckInDateChanged=true;
				
			}
			
			/***
			 * Fire when user change checkin component text fields
			 * @Author :Sanka
			 * */
			protected function cmpCheckIn_checkInChangeHandler(event:Event):void
			{
				calculate();
			}
			
			
			//---------------------------------------------------------------------------------------
			
			
			/***
			 * Following method validate the entier form of freservation file.
			 * validated & required fields are company & client codes.
			 * 
			 * 
			 * */
			private function isValidateAll():Boolean {
				//if long time then ask for rate type
				if(txtRateType.text=='LONGTERM'){
					myValidators.push(svBillingBasis);
				}
				var errors:Array = Validator.validateAll(myValidators);
				if (errors.length == 0) {
					return true;
				}
				else
				{
					Message.displayAlert(2,"Invalid data.\nMissing some required information to make reservation.\nPlease re-check the form and submit again.","Warning",null);
					return false;
				}
			}
			
			//---------------------------------------------------------------------------------------
			
			
			//---------------------------------------------------------------------------------------
			
			/***
			 * Validation function
			 * fire when user change date when the checkin is happening
			 * 
			 * */
			private function hasValiedDriverAllocation():Boolean
			{
				if(com_dspl_malkey_domain_Freservation.hiretypeid=="SD")
				{
					if(cmpOtherService.acResothsrv.length>0)
					{
						//var isValiedMinus:Boolean=cmpDriverDetails.validateDriverAllocation_minusAllocation(dtDateOut.selectedDate,cmbTimeOut.selectedIndex,cmbTimeIn.selectedIndex);
						var isValiedOver_Accessory:Boolean=cmpAccessoryService.validateAccesory_overAllocation(dtDateIn.selectedDate,dtDateOut.selectedDate);
						var isValiedOver_OtherService:Boolean=cmpOtherService.validateOtherService_overAllocation(dtDateIn.selectedDate,dtDateOut.selectedDate,com_dspl_malkey_domain_Freservation.timein,com_dspl_malkey_domain_Freservation.timeout);
						var isValiedOver:Boolean=cmpDriverDetails.validateDriverAllocation_overAllocation_forservice();
						var isValiedMinus_OtherService:Boolean=cmpDriverDetails.validateDriverAllocation_minusAllocation_otherService(cmpOtherService.acResothsrv);
						if(!isValiedOver||!isValiedMinus_OtherService)
						{
							tabNavigator.selectedIndex=4;
						}
						else if(!isValiedOver_Accessory ||!isValiedOver_OtherService )
						{
							tabNavigator.selectedIndex=3;
						}
						return (isValiedOver_Accessory && isValiedOver_OtherService && isValiedOver && isValiedMinus_OtherService);
					}
					else
					{
						return true;
					}
				
				}
				else
				{
				var isValiedOver:Boolean=cmpDriverDetails.validateDriverAllocation_overAllocation(dtDateIn.selectedDate,cmbTimeOut.selectedIndex,cmbTimeIn.selectedIndex);
				var isValiedOverBefore:Boolean=cmpDriverDetails.validateDriverAllocation_overAllocation_isbefore_out(dtDateOut.selectedDate,cmbTimeOut.selectedIndex);
				var isValiedMinus:Boolean=cmpDriverDetails.validateDriverAllocation_minusAllocation(dtDateOut.selectedDate,cmbTimeOut.selectedIndex,cmbTimeIn.selectedIndex);
				var isValiedMinus_Accessory:Boolean=cmpAccessoryService.validateAccesory_overAllocation(dtDateIn.selectedDate,dtDateOut.selectedDate);
				var isValiedOver_OtherService:Boolean=cmpOtherService.validateOtherService_overAllocation(dtDateIn.selectedDate,dtDateOut.selectedDate,com_dspl_malkey_domain_Freservation.timein,com_dspl_malkey_domain_Freservation.timeout);
				var isValiedMinus_OtherService:Boolean=cmpDriverDetails.validateDriverAllocation_minusAllocation_otherService(cmpOtherService.acResothsrv);

				if(!isValiedOver || !isValiedMinus || !isValiedOverBefore || !isValiedOver_OtherService)
				{
					tabNavigator.selectedIndex=4;
				}
				else if(!isValiedMinus_Accessory ||!isValiedMinus_OtherService)
				{
					tabNavigator.selectedIndex=4;
				}
				return (isValiedOver && isValiedMinus && isValiedOverBefore && isValiedMinus_OtherService && isValiedMinus_Accessory && isValiedOver_OtherService);
				}
			}
			
			//---------------------------------------------------------------------------------------
			
			
			/***
			 * Following method validate other service and accessories allocation with time
			 * Required:allocation time should be within reservation checkout and checkin date-time
			 * 
			 * 
			 * */
			private function hasValiedAccANDOtherSrv():Boolean
			{
				var isValiedMinus_Accessory:Boolean=cmpAccessoryService.validateAccesory_overAllocation(dtDateIn.selectedDate,dtDateOut.selectedDate);
				var isValiedMinus_OtherService:Boolean=cmpOtherService.validateOtherService_overAllocation(dtDateIn.selectedDate,dtDateOut.selectedDate,com_dspl_malkey_domain_Freservation.timein,com_dspl_malkey_domain_Freservation.timeout);
				if(!isValiedMinus_Accessory ||!isValiedMinus_OtherService)
				{
					tabNavigator.selectedIndex=3;
				}
				return (isValiedMinus_OtherService && isValiedMinus_Accessory);
			}
			



			protected function txtRateType__onReturnFromSearchGridHandler(event:Event):void
			{

				if(mode=="edit")
				{
					if(oldRateType!=txtRateType.text)
					{ 
						isEligibleForChangeRateType();
						/* Message.displayAlert(4,"Rate type has been changed.\n"+oldRateType+" To "+txtRateType.text+"\nDo you want to apply new rates?","Warning",confirmAlertRatesTypeChange); */
				 	}
				} 
			}


			protected function txtRateType_doubleClickHandler(event:MouseEvent):void
			{
				if(StringUtil.trim(txtRateType.text).length>0){
				mode="edit";
				oldRateType=txtRateType.text;
				}
			}


			protected function txtHireType_doubleClickHandler(event:MouseEvent):void
			{
			}


			protected function cmpOtherService_deleteHandler(event:Event):void
			{
				cmpDriverDetails.validateDriverAllocation_overAllocation_forservice_delete();
			}


			
			protected function fcompanytaxSRVgetTaxComCode(companyid:String, hiretype:String):void
			{
				//Alert.show("companyid, hiretype companyid:"+companyid+" hiretype:"+hiretype);
				crFcompanytaxSRVgetTaxComCodeResult.token = fcompanytaxSRV.getTaxComCode(companyid, hiretype);
			}
			

			/***
			 * result handler of get tax for given hiretype and company combination
			 * 
			 * */
			protected function crFcompanytaxSRVgetTaxComCodeResult_resultHandler(event:ResultEvent):void
			{
				var taxcomcodeTmp:String=crFcompanytaxSRVgetTaxComCodeResult.lastResult as String;
				var acClientListAll:ArrayCollection=session.getAttribute('acClient');
				com_dspl_malkey_domain_Fdebtor=genericFunctions.getArrayCollection(acClientListAll,'debcode',com_dspl_malkey_domain_Freshed) as Com_dspl_malkey_domain_Fdebtor;
					
				if(StringUtil.trim(taxcomcodeTmp).length>0)
				{
					//this code line added to handle non tax custommers
					if(com_dspl_malkey_domain_Fdebtor.vattyp == "X")
					{
						com_dspl_malkey_domain_Freservation.taxcomcode = "NON";
					}
					else
					{
						com_dspl_malkey_domain_Freservation.taxcomcode=taxcomcodeTmp;
					}
					calculate();
				}
				else
				{
					var fresHed:Com_dspl_malkey_domain_Freshed= session.getAttribute("reshed");
					var msg:String="Sorry,\nunable to find tax combination code for given \nHire-Type"+com_dspl_malkey_domain_Freservation.hiretypeid+",\nCompany :"+fresHed.companyid+"\nPlease add the tax code & retry.";
					Message.displayAlert(1,msg,"Error",confirmAlertTaxComCode);
					//Alert.show(msg,"Error",Alert.OK,this,confirmAlertTaxComCode,genericFunctions.IconError,Alert.OK);
				}
			}

			
			
			
	/*Calculate Total Tax */
	//--------------------------------------------------------------------------------------------------------------------------------
			protected function calculateTax(event:Event):void
			{
				var nf:NumberFormatter=new NumberFormatter();
				nf.useThousandsSeparator=false;
				nf.precision=resourceManager.getInt("resource","noofdecimals.reservation");//2;
				nf.rounding=NumberBaseRoundType.NEAREST;
				
				/*NumberFormatter use by:Rounding procedures of each calculation in this method*/
				var nfv:NumberFormatter=new NumberFormatter();
				nfv.useThousandsSeparator=false;
				nfv.precision=resourceManager.getInt("resource","noofdecimals.reservation.vehicle");
				nfv.rounding=NumberBaseRoundType.NEAREST; 
				
				detentionRsTotal=new Number(nf.format(com_dspl_malkey_domain_Freservation.cidetenhrsrs));
				excessMileageRateTotal=new Number(nf.format(com_dspl_malkey_domain_Freservation.cixsmileagers));
				outofColomboRsTotal=new Number(nf.format(com_dspl_malkey_domain_Freservation.cinightoutrs));
				excessHourRateTotal=new Number(nf.format(com_dspl_malkey_domain_Freservation.xhoursamt));
				var totalTaxableAmt:Number=new Number(txtTotalPayable.text)-new Number(com_dspl_malkey_domain_Freservation.ciother)-new Number(com_dspl_malkey_domain_Freservation.cidamagers)-new Number(com_dspl_malkey_domain_Freservation.cifueldiff);
				if((StringUtil.trim(com_dspl_malkey_domain_Freservation.taxcomcode)).length>0 && totalTaxableAmt>0)
				{
					try{
						com_dspl_malkey_domain_Freservation.taxamt=calculateTaxExtended(event).toFixed(resourceManager.getInt("resource","noofdecimals.reservation"));
						com_dspl_malkey_domain_Freservation.totaltaxable=totalTaxableAmt.toFixed(resourceManager.getInt("resource","noofdecimals.reservation"));
						com_dspl_malkey_domain_Freservation.total=txtTotalPayable.text;
						com_dspl_malkey_domain_Freservation.nettotal=(new Number(com_dspl_malkey_domain_Freservation.total)+new Number(com_dspl_malkey_domain_Freservation.taxamt)).toFixed(resourceManager.getInt("resource","noofdecimals.reservation"));
					}
					catch(e:Error)
					{
						//Alert.show("Error in tax calculation");
						trace(""+e.getStackTrace());
						trace(""+e.message);
					}
				}
			}
	//--------------------------------------------------------------------------------------------------------------------------------
	
			
	/*Calculate Total Tax */
	//--------------------------------------------------------------------------------------------------------------------------------
			protected function calculateTaxExtended(event:Event):Number
			{
				var msg:String="";
				var totalTax:Number=0;
				var nf:NumberFormatter=new NumberFormatter();
				nf.useThousandsSeparator=false;
				nf.precision=resourceManager.getInt("resource","noofdecimals.reservation");//2;
				nf.rounding=NumberBaseRoundType.NEAREST;
				
				/*NumberFormatter use by:Rounding procedures of each calculation in this method*/
				var nfv:NumberFormatter=new NumberFormatter();
				nfv.useThousandsSeparator=false;
				nfv.precision=resourceManager.getInt("resource","noofdecimals.reservation.vehicle");
				nfv.rounding=NumberBaseRoundType.NEAREST; 
				
				/*NumberFormatter use by:Rounding procedures of each calculation in this method*/
				var nf5:NumberFormatter=new NumberFormatter();
				nf5.useThousandsSeparator=false;
				nf5.precision=resourceManager.getInt("resource","noofdecimals.reservation.unit");
				nf5.rounding=NumberBaseRoundType.NEAREST; 
				
				
				try{
					/***
					 * Per day rate: 8 decimal point.thats why use nfv
					 * Discount Amt:2 decimail point
					 * Aditional Chrges:2 decimal point
					 * Tax per day:2 decimal point
					 * */
					//vehicle
					if(com_dspl_malkey_domain_Fresvehicle!=null)
					{
						var v_perDayRate:Number=new Number(nfv.format(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.rate));
						var v_numberOfChargabledays:Number=com_dspl_malkey_domain_Freservation.chargdays;
						var v_discountVehicle:Number=new Number((new Number(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.discount)));
						var v_perDayDiscountAmt:Number=new Number(/* nf.format */((v_perDayRate*v_discountVehicle)/100));
						var v_perDayRateMinusDiscount:Number=v_perDayRate-v_perDayDiscountAmt;
						var v_perDayRateMinusDiscountPlusAdditionalCharges:Number=new Number(/* nf.format */(v_perDayRateMinusDiscount+calculateAdditionalCharges(v_perDayRateMinusDiscount)));
						var v_perDayRateMinusDiscountTax:Number= new Number(/* nf.format */(tax.Sline_Tax_Cal(com_dspl_malkey_domain_Freservation.taxcomcode,v_perDayRateMinusDiscountPlusAdditionalCharges,"","",1)));
						//msg+="\n\nv_perDayRateMinusDiscountTax :"+v_perDayRateMinusDiscountTax;
						//msg+="\n\nv_perDayRateMinusDiscountPlusAdditionalCharges :"+v_perDayRateMinusDiscountPlusAdditionalCharges;
						var v_taxDet:ArrayCollection=tax.TaxTable;
						for(var i:int=0 ;i<v_taxDet.length;i++)
						{
							var obj:Object= (v_taxDet.getItemAt(i)) as Object;
/* 							msg+="\n taxcomcode"+obj["taxcomcode"];
							msg+="\n taxcode"+obj["taxcode"];
							msg+="\n taxper"+obj["taxper"];
							msg+="\n taxrate"+obj["taxrate"];
							msg+="\n taxseq"+obj["taxseq"];
							msg+="\n taxdetamt"+obj["taxdetamt"];
							msg+="\n btaxdetamt"+obj["btaxdetamt"];	 */
							
						}
/* 						msg+="\n v_perDayRateMinusDiscountTax ="+v_perDayRateMinusDiscountTax;
						msg+="\n v_numberOfChargabledays ="+v_numberOfChargabledays;
						msg+="\n (v_perDayRateMinusDiscountTax * v_numberOfChargabledays) ="+(v_perDayRateMinusDiscountTax * v_numberOfChargabledays); */
						var v_totalTax:Number=new Number( /* nf.format */(v_perDayRateMinusDiscountTax * v_numberOfChargabledays));
						//new Number(nf5.format(v_perDayRateMinusDiscountPlusAdditionalCharges));
/* 						msg+=("PER_DAY_VEHICLE_RATE-DISCOUNT + ADITIONAL_CHARGES + TAX="+(new Number(nf5.format(v_perDayRateMinusDiscountPlusAdditionalCharges))+v_perDayRateMinusDiscountTax));
						msg+=("VEHICLETOTAL="+(new Number(nf5.format(v_perDayRateMinusDiscountPlusAdditionalCharges))+v_perDayRateMinusDiscountTax)* v_numberOfChargabledays);
						msg+=("vehicle_totalTax"+v_totalTax);
						msg+=("v_perDayRate"+v_perDayRate);
						msg+=("v_perDayDiscountAmt"+v_perDayDiscountAmt);
						msg+=("v_perDayRateMinusDiscount"+v_perDayRateMinusDiscount); */
						
						totalTax+=v_totalTax;
						msg+="\n v_totalTax"+v_totalTax;
						//var msg:String="v_perDayRate"+v_perDayRate+"\nv_numberOfChargabledays"+v_numberOfChargabledays+"\nv_discountVehicle"+v_discountVehicle+"\nv_perDayDiscountAmt"+v_perDayDiscountAmt+"\nv_perDayRateMinusDiscount"+v_perDayRateMinusDiscount;
						//trace(msg);
						/*for each(var obj:Object in v_taxDet)
						{
						//trace("taxcode:"+obj["taxcode"]+"\ndetamt:"+obj["taxdetamt"]);
						} */
					}
					
					//accesories
					var a_perDayRateMinusDiscountTaxTotal:Number=0;
					for each(var com_dspl_malkey_domain_Fresaccs:Com_dspl_malkey_domain_Fresaccs in cmpAccessoryService.acResAccessory){
					var a_quantity:Number=com_dspl_malkey_domain_Fresaccs.qty;
					var a_perDayRate:Number=new Number(nfv.format(com_dspl_malkey_domain_Fresaccs.fresaccrate.rate));
					var a_numberOfChargabledays:Number=DateOperation.getDaysDifference(com_dspl_malkey_domain_Fresaccs.id.dto,com_dspl_malkey_domain_Fresaccs.id.dfrom);
					var a_discountAccesories:Number=new Number((new Number(com_dspl_malkey_domain_Fresaccs.fresaccrate.discount)));
					var a_perDayDiscountAmt:Number=new Number(nf.format((a_perDayRate*a_discountAccesories)/100));
					var a_perDayRateMinusDiscount:Number=a_perDayRate-a_perDayDiscountAmt;
					var a_perDayRateMinusDiscountTax:Number= new Number(nf.format(tax.Sline_Tax_Cal(com_dspl_malkey_domain_Freservation.taxcomcode,a_perDayRateMinusDiscount,"","",1)));
					//a_perDayRateMinusDiscountTaxTotal +=a_perDayRateMinusDiscountTax;
					var a_taxDet:ArrayCollection=tax.TaxTable;
					var a_totalTax:Number=new Number( nf.format(a_perDayRateMinusDiscountTax * a_numberOfChargabledays* a_quantity));
					trace("Accessory Per day One:"+new Number(nf5.format(a_perDayRateMinusDiscount))+a_perDayRateMinusDiscountTax);
					trace("Accessory Total:"+(a_perDayRateMinusDiscount+a_perDayRateMinusDiscountTax)* a_numberOfChargabledays* a_quantity);
/* 					trace("accesories_totalTax"+a_totalTax);
					trace("a_perDayRate"+a_perDayRate);
					trace("a_perDayDiscountAmt"+a_perDayDiscountAmt);
					trace("a_perDayDiscountAmt"+a_perDayDiscountAmt);
					trace("a_perDayRateMinusDiscount"+a_perDayRateMinusDiscount); */
					totalTax+=a_totalTax;
					//trace("a_perDayRateMinusDiscount:"+a_perDayRateMinusDiscount);
					/*for each(var obj:Object in v_taxDet)
					{
						//trace("accesories taxcode:"+obj["taxcode"]+"\ndetamt:"+obj["taxdetamt"]);
					} */
					}
					
					//other service
					var o_perDayRateMinusDiscountTaxTotal:Number=0;
					for each(var com_dspl_malkey_domain_Fresothsrv:Com_dspl_malkey_domain_Fresothsrv in cmpOtherService.acResothsrv){
					var o_perDayRate:Number=new Number(nfv.format(com_dspl_malkey_domain_Fresothsrv.fresothersrvrate.rate));
					var o_numberOfChargabledays:Number=com_dspl_malkey_domain_Fresothsrv.noofdays;
					var o_discountOtherService:Number=new Number((new Number(com_dspl_malkey_domain_Fresothsrv.fresothersrvrate.discount)));
					var o_perDayDiscountAmt:Number=new Number(nf.format((o_perDayRate*o_discountOtherService)/100));
					var o_perDayRateMinusDiscount:Number=o_perDayRate-o_perDayDiscountAmt;
					var o_perDayRateMinusDiscountTax:Number= new Number(nf.format(tax.Sline_Tax_Cal(com_dspl_malkey_domain_Freservation.taxcomcode,o_perDayRateMinusDiscount,"","",1)));
					o_perDayRateMinusDiscountTaxTotal +=o_perDayRateMinusDiscountTax;
					var o_taxDet:ArrayCollection=tax.TaxTable;
					var o_totalTax:Number=new Number( nf.format(o_perDayRateMinusDiscountTax * o_numberOfChargabledays));
					trace("Per Day:"+new Number(nf5.format(o_perDayRateMinusDiscount))+o_perDayRateMinusDiscountTax);
					trace("Total:"+(new Number(nf5.format(o_perDayRateMinusDiscount))+o_perDayRateMinusDiscountTax)* o_numberOfChargabledays);
					/* trace("other_totalTax"+o_totalTax);
					trace("o_perDayRate"+o_perDayRate);
					trace("o_perDayDiscountAmt"+o_perDayDiscountAmt);
					trace("o_perDayRateMinusDiscount"+o_perDayRateMinusDiscount); */
					totalTax+=o_totalTax;
					//trace("o_perDayRateMinusDiscount:"+o_perDayRateMinusDiscount);
					/*for each(var obj:Object in v_taxDet)
					{
						//trace("other service taxcode:"+obj["taxcode"]+"\ndetamt:"+obj["taxdetamt"]);
					} */
					}
					
					//excess-mileage
					
					var e_excesmileage:int=com_dspl_malkey_domain_Freservation.cixsmileage;
					var e_perMilexsmilerate:Number=new Number(nf.format(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate));
					var e_discountXsmilerate:Number=new Number((new Number(com_dspl_malkey_domain_Freservation.discount_xmile)));
					var e_perMileDiscountAmt:Number=new Number(nf.format((1 * e_perMilexsmilerate * e_discountXsmilerate)/100));//numberofmile*rate per mile*discount
					var e_perMileRateMinusDiscountAmt:Number=e_perMilexsmilerate-e_perMileDiscountAmt;
					var e_perMileRateMinusDiscountAmtPlusAdditionalCharges:Number=new Number(nf.format(e_perMileRateMinusDiscountAmt+calculateAdditionalCharges(e_perMileRateMinusDiscountAmt)));
					var e_perMileRateMinusDiscountTax:Number= new Number(nf.format(tax.Sline_Tax_Cal(com_dspl_malkey_domain_Freservation.taxcomcode,e_perMileRateMinusDiscountAmtPlusAdditionalCharges,"","",1)));
					var e_taxDet:ArrayCollection=tax.TaxTable;
					var e_totalTax:Number=new Number( nf.format(e_perMileRateMinusDiscountTax * e_excesmileage));
					excessMileageRateTotal=new Number( nf.format(e_perMileRateMinusDiscountAmtPlusAdditionalCharges*e_excesmileage));
					extraMileageDiscout=new Number( nf.format(e_perMileDiscountAmt*e_excesmileage));
					//trace("excess_totalTax"+e_totalTax);
					//trace("excess_totalTax"+e_totalTax);
					totalTax+=e_totalTax;
					//trace("e_perMileRateMinusDiscountAmt"+e_perMileRateMinusDiscountAmt);
				/*	for each(var obj:Object in e_taxDet)
					{
					//	trace("excess-mileage taxcode:"+obj["taxcode"]+"\ndetamt:"+obj["taxdetamt"]);
					} */
					
					
					//excess-hours
					if(com_dspl_malkey_domain_Freservation.hiretypeid==resourceManager.getString('resource','reservation.hiretype.wedding') /*"WEDDING"*/)
					{
						var e_exceshours:int=com_dspl_malkey_domain_Freservation.xhours;
						var e_perHourxhourrate:Number=new Number(nf.format(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xhourrate));
						var e_discountXhourrate:Number=new Number((new Number(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.discountxhourrate)));
						var e_perHourDiscountAmt:Number=new Number(nf.format((1 * e_perHourxhourrate * e_discountXhourrate)/100));//numberofmile*rate per mile*discount
						var e_perHourRateMinusDiscountAmt:Number=e_perHourxhourrate-e_perHourDiscountAmt;
						var e_perHourRateMinusDiscountAmtPlusAdditionalCharges:Number=new Number(nf.format(e_perHourRateMinusDiscountAmt+calculateAdditionalCharges(e_perHourRateMinusDiscountAmt)));
						var e_perHourRateMinusDiscountTax:Number= new Number(nf.format(tax.Sline_Tax_Cal(com_dspl_malkey_domain_Freservation.taxcomcode,e_perHourRateMinusDiscountAmtPlusAdditionalCharges,"","",1)));
						var e_htaxDet:ArrayCollection=tax.TaxTable;
						var e_htotalTax:Number=new Number( nf.format(e_perHourRateMinusDiscountTax * e_exceshours));
						excessHourRateTotal=new Number( nf.format(e_perHourRateMinusDiscountAmtPlusAdditionalCharges*e_exceshours));
						extraHourDiscout=new Number( nf.format(e_perHourDiscountAmt*e_exceshours));
						com_dspl_malkey_domain_Freservation.discount_xhoursamt=nf.format(new Number(extraHourDiscout));
						com_dspl_malkey_domain_Freservation.xhoursamt=nf.format(new Number(excessHourRateTotal));
						trace("excessHours_totalTax"+e_htotalTax);
						//trace("excess_totalTax"+e_totalTax);
						totalTax+=e_htotalTax;
						//trace("e_perMileRateMinusDiscountAmt"+e_perMileRateMinusDiscountAmt);
						/*for each(var obj:Object in e_htaxDet)
						{
						} */
					}
					
					//detention
					var d_detention:Number=com_dspl_malkey_domain_Freservation.cidetenhrs;
					var d_perDayOTrate:Number=new Number(nf.format(com_dspl_malkey_domain_Fresdriverrate.otrate));
					var d_discountOTrate:Number=new Number((new Number(com_dspl_malkey_domain_Fresdriverrate.discount_detention)));
					var d_perOTDiscountAmt:Number=new Number(nf.format((d_perDayOTrate * d_discountOTrate)/100));//numberofmile*rate per mile*discount
					var d_perOTRateMinusDiscountAmt:Number=d_perDayOTrate-d_perOTDiscountAmt;
					var d_perOTRateMinusDiscountTax:Number= new Number(nf.format(tax.Sline_Tax_Cal(com_dspl_malkey_domain_Freservation.taxcomcode,d_perOTRateMinusDiscountAmt,"","",1)));
					var d_taxDet:ArrayCollection=tax.TaxTable;
					var d_totalTax:Number=new Number( nf.format(d_perOTRateMinusDiscountTax * d_detention));
					detentionDiscount=new Number( nf.format(d_perOTDiscountAmt*d_detention));
					detentionRsTotal=new Number( nf.format(d_perOTRateMinusDiscountAmt*d_detention));
					//trace("detention_totalTax"+d_totalTax);
					totalTax+=d_totalTax;
					//trace("d_perOTRateMinusDiscountAmt:"+d_perOTRateMinusDiscountAmt);
					/*for each(var obj:Object in d_taxDet)
					{
					//	trace("detention taxcode:"+obj["taxcode"]+"\ndetamt:"+obj["taxdetamt"]);
					} */
					
					
					//out-of-colombo
					var n_nightout:int=com_dspl_malkey_domain_Freservation.cinightout;
					var n_perDayNOrate:Number=new Number(nf.format(com_dspl_malkey_domain_Fresdriverrate.nightoutrate));
					var n_discountNOrate:Number=new Number((new Number(com_dspl_malkey_domain_Fresdriverrate.discount_nightout)));
					var n_perNODiscountAmt:Number=new Number(nf.format((1 * n_perDayNOrate * n_discountNOrate)/100));//numberofmile*rate per mile*discount
					var n_perNORateMinusDiscountAmt:Number=n_perDayNOrate-n_perNODiscountAmt;
					var n_perNORateMinusDiscountTax:Number= new Number(nf.format(tax.Sline_Tax_Cal(com_dspl_malkey_domain_Freservation.taxcomcode,n_perNORateMinusDiscountAmt,"","",1)));
					var n_taxDet:ArrayCollection=tax.TaxTable;
					var n_totalTax:Number=new Number( nf.format(n_perNORateMinusDiscountTax * n_nightout));
					outofColomboRsTotal=new Number(nf.format(n_perNORateMinusDiscountAmt*n_nightout));
					outofColomboDiscout=new Number(nf.format(n_perNORateMinusDiscountAmt*n_nightout));
					//trace("nightout_totalTax"+n_totalTax);
					totalTax+=n_totalTax;
					//trace("netTax Total:"+totalTax+"\n-----------------------------------------------");
					//trace("n_perNORateMinusDiscountAmt:"+n_perNORateMinusDiscountAmt);
				/*	for each(var obj:Object in n_taxDet)
					{
						//trace("nightout taxcode:"+obj["taxcode"]+"\ndetamt:"+obj["taxdetamt"]);
					} */
						
					com_dspl_malkey_domain_Freservation.taxamt=totalTax.toFixed(resourceManager.getInt("resource","noofdecimals.reservation"));
				}
				catch(e:Error)
				{
					//Alert.show("Error in tax calculation");
					trace(""+e.getStackTrace());
					trace(""+e.message);
				}
/* 				msg+="\n totalTax"+totalTax;
				Alert.show("msg "+msg); */
				return totalTax;
			}
	//--------------------------------------------------------------------------------------------------------------------------------


			protected function linkbutton1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//mode='edit';oldRateType=txtRateType.text;txtRateType.launchSearchGrid()
				if(StringUtil.trim(txtRateType.text).length>0){
					mode="edit";
					oldRateType=txtRateType.text;
				}
				txtRateType.launchSearchGrid();
			}


			protected function crFcompanytaxSRVgetTaxComCodeResult_faultHandler(event:FaultEvent):void
			{
				var errorMessage:ErrorMessage = event.message as ErrorMessage;
				Message.displayAlert(1,errorMessage.rootCause.message,"Error",confirmAlertTaxComCode);
			}


			protected function cmpAccessoryService_addHandler(event:Event):void
			{
				calculate();
			}


			protected function cmpOtherService_addHandler(event:Event):void
			{
				calculate();
			}
			
			/***
			 * this method calculate rates
			 * 
			 * 
			 * */
			public function calculate():Number
			{
				return cmpRates.doCalculate();
			}
			/***
			 * this method calculate rates
			 * 
			 * 
			 * */
			public function calculateAdditionalCharges(totalAmt:Number):Number
			{
				return cmpRates.calculateAdditionalCharges(totalAmt);
			}
			/***
			 * this method popup vehicle availability 
			 * 
			 * 
			 * */
			public function vehicleAvailabilityPopup_VehicleChange():void
			{
				return cmpVehicleDetails.vehicleAvailabilityPopup_VehicleChange(this);
			}
			
			
			/***
			 * this method return priority one reserverd vehicle
			 * 
			 * 
			 * */
			public function getReservedVehicle():Com_dspl_malkey_domain_Fresvehicle
			{
				var temp:Com_dspl_malkey_domain_Fresvehicle=null;
				if(cmpVehicleDetails.acResVehicle.length>0)
				{
					temp=cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle;
				}
				return temp;
			}





			protected function txtHireStatus__onReturnFromSearchGridHandler(event:Event):void
			{
				setTransactionStatus();
			}

			
			protected function changeVehicle(arg0:String, arg1:ArrayCollection, arg2:Com_dspl_malkey_domain_Fresvehiclerate):void
			{
				Mouse.hide();
				setDisableButtonBar();
				crChangeVehicle.token = freservationSRV.changeVehicle(arg0, arg1, arg2);
			}
			

			protected function crChangeVehicle_resultHandler(event:ResultEvent):void
			{
				var msg:String="";
				var additionalCharges:Boolean=cmpRates.hasAdditionalCharges();
				if(additionalCharges)
					msg="\nPlease Inform Client :\nSeasonal Charges Will Be Applied To Excess Mileage.";
				
				Mouse.show();
				setEnableButtonBar();
				Message.displayAlert(3,"Saved successfully\nref-No:"+(event.result as String)+msg,"Success",null);
				currentState="stUndo";
				PopUpManager.removePopUp(this);
				dispatchEvent(new Event("saveAgr"));
				
			}


			protected function crChangeVehicle_faultHandler(event:FaultEvent):void
			{
				Mouse.show();
				setEnableButtonBar();
				Message.displayAlert(1,"save failed.\nRef No:"+event.fault,"Error",null);
			}


			protected function cmpVehicleDetails_setRateTypeHandler(event:DataEvent):void
			{
				txtRateType.text=event.data;
			}


			
			protected function cmpCheckIn_vehicleChangeHandler(event:Event):void
			{
				var msg:String="Do you want to auto-delete other service,accesorry and driver allocation which are not within reservation date/time period?";
			//	var msg:String="According to current check-in date,you cannot keep records out bound of reservation check-out/check-in date.\nThen you have to remove unwanted allocation for given time period.Do you want to apply auto delete for other service,accesorry and driver allocation";
			//	var alert:Alert =Alert.show(msg,"Warning",Alert.YES|Alert.NO,this,confirmAlert_change_vehicle_autodelete,genericFunctions.IconQuestion,Alert.OK);
				Message.displayAlert(4,msg,"CONFIRMATION",confirmAlert_change_vehicle_autodelete);

			}
			
			
			/***
			 * THIS METHOD FIRE WHEN USER SELECT 
			 * APPLY OLD RATES TO CURRENT VEHICLE
			 * 
			 * */
			public function confirmAlert_change_vehicle_autodelete(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.YES)
				{
					newAgreementUtil(true);
				}
				else if(eventObj.detail==Alert.NO)
				{
					trace("no apply old rates");
				}
				
			}
			
			
			
			/***
			 * fire copy new aggreement
			 * 
			 * 
			 * */
			protected function cmpCheckIn_agreementChangeHandler(event:DataEvent):void
			{
				newAgreementUtil(event.text as Boolean);
			}
			
			
			
			
			/***
			 * 
			 * 
			 * 
			 * */
			public function newAgreementUtil(isVCMode:Boolean):void
			{
				
				autoSetOff();
				if(manualValidation())
				{
					cloneReservationData();
					trace("isVehicleChangeMode="+isVehicleChangeMode);
					isVehicleChangeMode=isVCMode;
					isCopy=true;
					cmpCheckIn.cbUpgrade.selected=false;
					cmpCheckIn.cbLTUpgrade.selected=false;
					dispatchEvent(new Event("reloadCopy"));
				}

				
			}
			

			
			
			
			//START:FOLLOWING VARIABLE KEEP BACK UP OF ORIGINAL RESERVATION DATA IN UPGRADE PROCESS
			private var copyFreservation:Com_dspl_malkey_domain_Freservation=null;
			private var copyacResVehicle:ArrayCollection=null;
			private var copyacResAccessory:ArrayCollection= null;
			private var copyacResMalkeyDrivers:ArrayCollection= null;
			private var copyacResothsrv:ArrayCollection= null;
			private var copyFresvehiclerate:Com_dspl_malkey_domain_Fresvehiclerate=null;
			private var copyacResAccessoryRate:ArrayCollection= null;
			private var copyFresdriverrate:Com_dspl_malkey_domain_Fresdriverrate= null;
			private var copyacResOtherServiceRate:ArrayCollection= null;
			private var copyacAdditionalRates:ArrayCollection= null;
			private var copyacVehicleDamage:ArrayCollection= null;
			private var copyacSelectedInventory:ArrayCollection= null;
			private var copyacResclientdriver:ArrayCollection= null;
			//END:ABOVE VARIABLE KEEP BACK UP OF ORIGINAL RESERVATION DATA IN UPGRADE PROCESS
			
			/***
			 * FOLLOWING METHOD KEEP ORIGINAL COPY OF ALL RESERVATION DATA BEFORE USER UPGRADE AND DIRTY EXISTING RESERVATION
			 * 
			 * 
			 * */
			protected function cloneReservationData():void
			{
				if(calculate()>=0)
				{
					com_dspl_malkey_domain_Freservation.debcode =cmpCustomerDetails.txtClient.text;
					com_dspl_malkey_domain_Freservation.paytypeid=cmpRates.txtPaymentType.text;
					com_dspl_malkey_domain_Freservation.deposit=cmpRates.txtDeposit.text;
					com_dspl_malkey_domain_Freservation.advance=cmpRates.txtAdvance.text;
					com_dspl_malkey_domain_Freservation.cohirestsid=txtHireStatus.text;
					com_dspl_malkey_domain_Freservation.itinerary=txtItinerary.text;
					com_dspl_malkey_domain_Freservation.returnaddress=txtReturnAddress.text;
					com_dspl_malkey_domain_Freservation.hiretypeid=txtHireType.text;
					com_dspl_malkey_domain_Freservation.gotime=cmbGOTime.selectedItem;
					com_dspl_malkey_domain_Freservation.gdout=dtGODate.selectedDate;
					
					if(com_dspl_malkey_domain_Freservation.cohirestsid=="BOOKED")
					{
						//com_dspl_malkey_domain_Freservation.ciother="0";
						com_dspl_malkey_domain_Freservation.cidetenhrsrs="0"; 
						com_dspl_malkey_domain_Freservation.cifueldiff="0.00";
						com_dspl_malkey_domain_Freservation.cinightoutrs="0.0";
						com_dspl_malkey_domain_Freservation.cixsmileage=0;
						com_dspl_malkey_domain_Freservation.cixsmileagers="0";
						com_dspl_malkey_domain_Freservation.cidetenhrs=0;
						com_dspl_malkey_domain_Freservation.cofuellevel=0;
						com_dspl_malkey_domain_Freservation.cidamage=" ";//edited by sanka 2012.09.13
						com_dspl_malkey_domain_Freservation.coinspectby=" ";
						com_dspl_malkey_domain_Freservation.cifuellevel=0;
						com_dspl_malkey_domain_Freservation.cimileage=0;
						if(hasnotPaidDeposit){
							com_dspl_malkey_domain_Freservation.depositbal=cmpRates.txtDeposit.text;
						}//}
						if(hasnotPaidAdvance){
							com_dspl_malkey_domain_Freservation.advancebal=cmpRates.txtAdvance.text; 
						}
						
					}
					
					if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKIN" || com_dspl_malkey_domain_Freservation.cohirestsid=="NOSHOW"|| com_dspl_malkey_domain_Freservation.cohirestsid=="COMPLETED")
					{
						com_dspl_malkey_domain_Freservation.cifuellevel=cmpCheckIn.getCurrentFuelMeterLevel();
						cmpCheckIn.getBind();
						try
						{
							var data:BitmapData = new BitmapData(cmpCheckIn.imgCI.width,cmpCheckIn.imgCI.height);
							data.draw(cmpCheckIn.imgCI);
							var enc:JPEGEncoder = new JPEGEncoder(100);
							var ba:ByteArray=enc.encode(data);
							com_dspl_malkey_domain_Freservation.checkindata=ba;
						}
						catch(error:Error)
						{
							Message.displayAlert(1,error.message,"ERROR",null);
							////Alert.show(error.message);
						}
						
					}
					if(com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT")
					{
						//com_dspl_malkey_domain_Freservation.ciother="0";
						com_dspl_malkey_domain_Freservation.cidetenhrsrs="0"; 
						com_dspl_malkey_domain_Freservation.cifueldiff="0.00";
						com_dspl_malkey_domain_Freservation.cinightoutrs="0.0";
						com_dspl_malkey_domain_Freservation.cixsmileage=0;
						com_dspl_malkey_domain_Freservation.cixsmileagers="0";
						com_dspl_malkey_domain_Freservation.cidetenhrs=0;
						com_dspl_malkey_domain_Freservation.cofuellevel=cmpCheckOut.getCurrentFuelMeterLevel();
						com_dspl_malkey_domain_Freservation.cifuellevel=0;
						com_dspl_malkey_domain_Freservation.cimileage=0;
						var user:Com_dspl_malkey_domain_Fpass=(Com_dspl_malkey_domain_Fpass)(session.getAttribute("user"));
						com_dspl_malkey_domain_Freservation.coinspectby=user.username;
						(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFresvehinv=cmpCheckOut.getSelectedInventory();
						(cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle).lstFvehicledamage=cmpCheckOut.getVehicleDamage;//this is check out damages
						
						try
						{
							var data:BitmapData = new BitmapData(cmpCheckOut.imgCI.width,cmpCheckOut.imgCI.height);
							data.draw(cmpCheckOut.imgCI);
							var enc:JPEGEncoder = new JPEGEncoder(100);
							var ba:ByteArray=enc.encode(data);
							com_dspl_malkey_domain_Freservation.checkoutdata=ba;
						}
						catch(error:Error)
						{
							Message.displayAlert(1,error.message,"ERROR",null);
							//Alert.show(error.message);
						}
						
					}
					
					com_dspl_malkey_domain_Freservation.quoteno="";
					com_dspl_malkey_domain_Freservation.addmach="";
					com_dspl_malkey_domain_Freservation.adduser="";
					com_dspl_malkey_domain_Freservation.timeout=cmbTimeOut.selectedItem;
					com_dspl_malkey_domain_Freservation.timein=cmbTimeIn.selectedItem;
					
					
					if(manualValidation())
					{
						
						copyFreservation= ObjectUtil.copy(com_dspl_malkey_domain_Freservation) as (Com_dspl_malkey_domain_Freservation);
						copyacResVehicle= ObjectUtil.copy(cmpVehicleDetails.acResVehicle) as (ArrayCollection);
						copyacResAccessory= ObjectUtil.copy(cmpAccessoryService.acResAccessory) as (ArrayCollection);
						copyacResMalkeyDrivers= ObjectUtil.copy(cmpDriverDetails.acResMalkeyDrivers) as (ArrayCollection);
						copyacResothsrv= ObjectUtil.copy(cmpOtherService.acResothsrv) as (ArrayCollection);
						copyFresvehiclerate=ObjectUtil.copy(cmpVehicleDetails.acResVehicle.getItemAt(0).fresvehiclerate) as (Com_dspl_malkey_domain_Fresvehiclerate);
						copyacResAccessoryRate= ObjectUtil.copy(cmpAccessoryService.getResAccessoryRate()) as (ArrayCollection);
						copyFresdriverrate= ObjectUtil.copy(com_dspl_malkey_domain_Fresdriverrate) as (Com_dspl_malkey_domain_Fresdriverrate);
						copyacResOtherServiceRate= ObjectUtil.copy(cmpOtherService.getResOtherServiceRate()) as (ArrayCollection);
						copyacAdditionalRates= ObjectUtil.copy(cmpRates.getAdditionalRates()) as (ArrayCollection);
						copyacVehicleDamage= ObjectUtil.copy(cmpCheckIn.getVehicleDamage) as (ArrayCollection);
						copyacSelectedInventory= ObjectUtil.copy(cmpCheckIn.getSelectedInventory()) as (ArrayCollection);
						copyacResclientdriver= ObjectUtil.copy(cmpDriverDetails.getSelectedClientDrivers()) as (ArrayCollection);
						

					}
					else
					{
						trace("error");
					}
				
				
			}
			}
			
			
			
			
			
			/***
			 * FOLLOWING METHOD FIRE WHEN USER CLICK ON APPLY OLD RATE BUTTON IN VEHICLEDETAILDS TAB
			 * 
			 * */
			protected function cmpVehicleDetails_applyOldRateHandler(event:Event):void
			{

					var msg:String="";
						msg+="<u><b>Old Rate Details</b></u>"
						msg+="\n\nVehicle Model:"+com_dspl_malkey_domain_Fresvehiclerate.vehimodelid;
						msg+="\nClient Type:"+com_dspl_malkey_domain_Fresvehiclerate.clienttype;
						msg+="\nHire Type:"+com_dspl_malkey_domain_Fresvehiclerate.hiretypeid;
						msg+="\nRate Type:"+com_dspl_malkey_domain_Fresvehiclerate.ratetype;
						msg+="\nRate:"+com_dspl_malkey_domain_Fresvehiclerate.rate;
						msg+="\nExtra Millage Rate:"+com_dspl_malkey_domain_Fresvehiclerate.xsmilerate;
						msg+="\nDiscount:"+com_dspl_malkey_domain_Fresvehiclerate.discount;
						msg+="\nAlloted KMS:"+com_dspl_malkey_domain_Fresvehiclerate.allotedkms;
						msg+="\n\n\nAre you sure,You want to apply old rates to vehicle?";
						var alert:Alert =Alert.show(msg,"Warning",Alert.YES|Alert.NO,this,confirmAlert_Apply_Old_Vehicle_Rates,genericFunctions.IconQuestion,Alert.OK);
						//Message.displayAlert(3,"Delete Successfully","Success",null);
						use namespace mx.core.mx_internal;
						IUITextField(alert.alertForm.textField).htmlText = msg;

			}
			
			
			
			
			/***
			 * THIS METHOD FIRE WHEN USER SELECT 
			 * APPLY OLD RATES TO CURRENT VEHICLE
			 * 
			 * */
			public function confirmAlert_Apply_Old_Vehicle_Rates(eventObj:CloseEvent):void
			{
				
				if(eventObj.detail==Alert.YES)
				{
					try
					{
					cmpVehicleDetails.acResVehicle.getItemAt(0).fresvehiclerate=com_dspl_malkey_domain_Fresvehiclerate;
					calculate();
					trace("Apply Old Rates Succesfuly.");
					}
					catch(e:Error)
					{
						trace("fail to apply old rates");
					}
				}
					
				else if(eventObj.detail==Alert.NO)
				{
					trace("no apply old rates");
				}
				
			}
			

			
			protected function changeCheckOutVehicle(arg0:Com_dspl_malkey_domain_Freservation, arg1:Com_dspl_malkey_domain_Freshed, arg2:ArrayCollection, arg3:ArrayCollection, arg4:ArrayCollection, arg5:ArrayCollection, arg6:Com_dspl_malkey_domain_Fresvehiclerate, arg7:ArrayCollection, arg8:Com_dspl_malkey_domain_Fresdriverrate, arg9:ArrayCollection, arg10:ArrayCollection, arg11:ArrayCollection,arg27:ArrayCollection, arg12:ArrayCollection, arg13:Com_dspl_malkey_domain_Freservation, arg14:Com_dspl_malkey_domain_Freshed, arg15:ArrayCollection, arg16:ArrayCollection, arg17:ArrayCollection, arg18:ArrayCollection, arg19:Com_dspl_malkey_domain_Fresvehiclerate, arg20:ArrayCollection, arg21:Com_dspl_malkey_domain_Fresdriverrate, arg22:ArrayCollection, arg23:ArrayCollection,arg26:ArrayCollection, arg24:ArrayCollection, arg25:ArrayCollection):void
			{
				setDisableButtonBar();
				crChangeCheckOutVehicle.token = freservationSRV.changeCheckOutVehicle(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11,arg27, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23,arg26, arg24, arg25);
			}
			

			protected function crChangeCheckOutVehicle_resultHandler(event:ResultEvent):void
			{
				setEnableButtonBar();
				var refnolist:String=event.result as String;
				var headRefNo:String=refnolist.substr(14,28);
				var detRefNo:String=refnolist.substr(0,13);
				this.setCurrentState("stUndo",true);
				Message.displayAlert(3,"Reserved Successfully\nRef-No:"+detRefNo,"Success",null);
				PopUpManager.removePopUp(this);
				dispatchEvent(new Event("saveAgr"));
				
			}


			protected function crChangeCheckOutVehicle_faultHandler(event:FaultEvent):void
			{
				setEnableButtonBar();
				Message.displayAlert(1,event.fault as String,"ERROR",null);
			}

			
			
			
			
			
			//---------------------------------------------------------------------------------------
			/***
			 *set Date Item to datagrid
			 *
			 * Author:sanka
			 * */
			public function setDateAccesorry(dateTo:Date,dateFrom:Date):Boolean
			{	
				 return cmpAccessoryService.setDateAccesorry(dateTo,dateFrom);
			}
			
			
			
			
			/***
			 * set Date Item to datagrid
			 *
			 * Author:sanka
			 * */
			public function setDateOtherService(dateTo:Date,dateFrom:Date,timeout:String,timein:String):Boolean
			{
				return cmpOtherService.setDateOtherService(dateTo,dateFrom,timeout,timein);
			}
			
			
			
			
			
			
			/***
			 * set Date Item to datagrid
			 *
			 * Author:sanka
			 * */
			public function setDateDriverAllocation(dateTo:Date,dateFrom:Date,timeout:String,timein:String):Boolean
			{
				return cmpDriverDetails.setDateDriverAllocation(dateTo,dateFrom,timeout,timein);
			}
			
			
			
			
			
			/***
			 * FOLLOWING METHOD REMOVE ALL THE OUT OF DATE RECORDS IN OTHERSERVICE ,DRIVER ALLOCATION,AND ACCESSORY ALLOCATION FOR A GIVEN DATE
			 *
			 * Author:sanka
			 * */
			public function autoSetOff():Boolean
			{
				var flag1:Boolean=setDateAccesorry(com_dspl_malkey_domain_Freservation.din,com_dspl_malkey_domain_Freservation.dout);
				var flag2:Boolean=setDateOtherService(com_dspl_malkey_domain_Freservation.din,com_dspl_malkey_domain_Freservation.dout,com_dspl_malkey_domain_Freservation.timeout,com_dspl_malkey_domain_Freservation.timein);
				var flag3:Boolean=setDateDriverAllocation(com_dspl_malkey_domain_Freservation.din,com_dspl_malkey_domain_Freservation.dout,com_dspl_malkey_domain_Freservation.timeout,com_dspl_malkey_domain_Freservation.timein);
				return flag1 && flag2 && flag3;
			}
			
			
			





			protected function pickFromDebtorReportAddress(event:MouseEvent):void
			{
				txtItinerary.text=com_dspl_malkey_domain_Fdebtor.debadd;
			}
			protected function pickFromDebtorReturnAddress(event:MouseEvent):void
			{
				//com_dspl_malkey_domain_Fdebtor.debadd
				txtItinerary.text=com_dspl_malkey_domain_Fdebtor.officeadd;
			}
			protected function pickFromDebtorReportAddress_txtReturnAddress(event:MouseEvent):void
			{
				txtReturnAddress.text=com_dspl_malkey_domain_Fdebtor.debadd;
			}
			protected function pickFromDebtorReturnAddress_txtReturnAddress(event:MouseEvent):void
			{
				//com_dspl_malkey_domain_Fdebtor.debadd
				txtReturnAddress.text=com_dspl_malkey_domain_Fdebtor.officeadd;
			}

			
			
			private function setEnableButtonBar():void
			{
				nvb.enabled=true;
			}
			
			private function setDisableButtonBar():void
			{
				nvb.enabled=false;
			}
			
			

			protected function crDriverListByResnoResult_resultHandler(event:ResultEvent):void
			{
				acDriver=crDriverListByResnoResult.lastResult;
				trace("acDriver.length:"+acDriver.length);
			}


			protected function adminPWD_enterHandler(event:FlexEvent):void
			{

			}


			protected function supervisor_authondication_clickHandler(event:MouseEvent):void
			{

				
				commonPopupMethod("Shehan","supervisor authondication required","User","Password",listener_txtOther);
			}

			/***
			 * Common popup TextBox method
			 * 
			 */
			protected function commonPopupMethod(text:String,titleLabel:String,label1:String,label2:String,myListener:Function):void
			{
				var a:Authondication=new Authondication();
				a.text=text;
				a.label1=label1;
				a.label2=label2;
				a.titleLabel=titleLabel;
				a.addEventListener("enter",myListener);
				PopUpManager.addPopUp(a,this,true);
				PopUpManager.centerPopUp(a);
				
			}
			protected function listener_txtOther(event:TextBoxEvent):void
			{
				
				var pwdEntered:String=event.text;
				var pwdOriginal:String=resourceManager.getString("resource","supervisor.password");
				
				if(pwdEntered==pwdOriginal && (com_dspl_malkey_domain_Freservation.cohirestsid=="CHECKOUT" || com_dspl_malkey_domain_Freservation.cohirestsid=="CONFIRMED"))
					cmpVehicleDetails_isEnable=true;
				
			}			
			
			protected function listAlLLocation():void
			{
				crLocationListAll.token = flocationSRV.ListAll();
			}
			protected function listAlLLocationCI():void
			{
				crLocationListAllCI.token = flocationSRV.ListAll();
			}
			

			protected function crLocationListAll_resultHandler(event:ResultEvent):void
			{
				txtCOLocation.launchSearchGrid();
			}


			protected function crLocationListAllCI_resultHandler(event:ResultEvent):void
			{
				txtCILocation.launchSearchGrid();
			}


			protected function searchSubCustomer_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//txtRemarksCustomer.launchSearchGrid();
				
			}


			protected function addSubCustomer_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}


			protected function txtRemarksCustomer__onReturnFromSearchGridHandler(event:Event):void
			{
				// TODO Auto-generated method stub
			}


			protected function search_clickHandler(event:MouseEvent):void
			{
				crListAllResult.token = srvSubCustomerSRV.ListAll();
			}


			protected function crListAllResult_resultHandler(event:ResultEvent):void
			{
				acSubCustomer=event.result as ArrayCollection;
				txtRemarksCustomer1.launchSearchGrid();
			}


			protected function crListAllResult_faultHandler(event:FaultEvent):void
			{
				Alert.show("errror in loading sub customers");
			}

		]]>
	</fx:Script>
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!--<s:Panel id="panel" x="19" y="21" width="910" height="507" title="Reservation/Check-Out/Check-In">-->
	<mx:HBox>
		<!--edit.stView="nvb_edit_view_Handler(event)"-->
	<local:NavigationBar
		id="nvb"
		recordIndex="{txtRefNo._nSelectedIndex}"
		maxRecord="{txtRefNo._acDataProvider.length-1}"
		new="nvb_newHandler(event)"
		edit="nvb_editHandler(event)"
		delete="nvb_deleteHandler(event)"
		view="nvb_viewHandler(event)"
		save="nvb_saveHandler(event)"
		save.stEdit="nvb_updateHandler(event)"
		undo="nvb_undoHandler(event)"
		list="nvb_listHandler(event)"
		next="nvb_commonHandler(event)"
		back="nvb_commonHandler(event)"
		previous="nvb_commonHandler(event)"
		top="nvb_commonHandler(event)"
		bottom="nvb_commonHandler(event)"
		find="nvb_findHandler(event)"
		print="nvb_printHandler(event)"
		refresh="listAll();"
		close="nvb_closeHandler()"
		click="nvb_clickHandler(event)"
		menuMode="3"
		stCurrent="{this.currentState}"
		horizontalAlign="center"
		/>
		<mx:TextInput id="adminPWD" enter="adminPWD_enterHandler(event)"/>
	</mx:HBox>

	<mx:HRule x="0" y="50" width="100%" height="3"/>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		<mx:TabNavigator 
			id="tabNavigator" 
			x="11" y="59" 
			width="100%" height="500" 
			change="tabNavigator_changeHandler(event)"
			disabledOverlayAlpha="0"
			creationPolicy="auto"
			>
			
			
			
			
			
			
			
			
			
			<!--Hire types and quatation details-->	
			<s:NavigatorContent label="Hire Details" width="100%" height="100%">	
									
					<mx:Form height="100%" x="5" y="0"
							 borderAlpha="0.10"
							 paddingTop="5"
							 paddingLeft="20"
							 paddingRight="5"
							 paddingBottom="2"
							 borderColor="black"
							 borderStyle="solid"
							 borderVisible="true" 
							 width="95%"
							 label="Rental Details" 
							 enabled.stView="false"
							 enabled="true"
							 disabledOverlayAlpha="0"
							 id="fmMain"
							 >
<!--						<s:Label text="comileage{com_dspl_malkey_domain_Freservation.comileage}" fontWeight="bold"/>
						<s:Label text="cofuellevel {com_dspl_malkey_domain_Freservation.cofuellevel}" fontWeight="bold"/>-->
						<s:Label text="Rental Details" fontWeight="bold"/>
								<mx:FormItem label="Ref No #" direction="horizontal"  styleName="formItemL" labelStyleName="formItemLabel"  enabled.stNew="false"  enabled.stEdit="false">
									<controls:_tiMasterFile id="txtRefNo"											
															_acDataProvider="{acReservation}"
															text="@{com_dspl_malkey_domain_Freservation.resno}"
															_strKeyColumn="resno"
															_strKeyColCaption="Ref No" 
															_strDetailColumn="dout"
															otherColumns="din,hiretypeid,cohirestsid"
															otherColumnHeaderText="Date In,Hire Type,Status"
															_strDetailColCaption="Date-out"
															_strWindowTitle="Select Reservation"
															width="171"
															editable="false" 
															_onReturnFromSearchGrid="onSelectReservation(event)"
															tabIndex="0"
															/>
									<mx:LinkButton label="Search" width="60" color="#0A33BB" textDecoration="underline" click="{txtRefNo.launchSearchGrid();}"/>
									<mx:Label color="RED" text="TAX {(com_dspl_malkey_domain_Freservation.taxcomcode == 'NON') ? 'EXCEMPTED' : 'INCLUDED'} INVOICE WILL BE GENERATED BY SYSTEM.[{com_dspl_malkey_domain_Freservation.taxcomcode}]"
											  visible="{com_dspl_malkey_domain_Freservation.taxcomcode!=null}"/>
								</mx:FormItem>
<!--								<mx:FormItem label="Quotation #" direction="horizontal"  styleName="formItemL" labelStyleName="formItemLabel">
									<s:TextInput width="171"></s:TextInput>
									<mx:LinkButton label="Search" width="60" color="#0A33BB" textDecoration="underline"/>
								</mx:FormItem>-->
								
							<!--</mx:VBox>
							<mx:VBox>-->
								<mx:Spacer/>

<!--								<mx:HRule width="700" includeIn="State1,stDelete,stEdit,stNew,stView"/>
						
						<s:VGroup >-->
							
								
										<mx:FormItem label="Date Out" direction="horizontal" width="100%"  styleName="formItemL" labelStyleName="formItemLabel"  required="true" disabledOverlayAlpha="0.9">
											<mx:DateField width="100" id="dtDateOut" 
														  selectedDate="@{com_dspl_malkey_domain_Freservation.dout}"
														  selectableRange="{{rangeStart : new Date()}}"
														  change="dtDateOut_changeHandler(event)"
														  tabIndex="1"
														  enabled="false"
														  formatString="@Resource(key='dateFormat',bundle='resource')"
														  />
											
											
											<mx:Label  text="  Time :"/>
											<s:ComboBox 
												id="cmbTimeOut" 
												dataProvider="{acTime}" 
												selectedIndex="{acTime.getItemIndex(com_dspl_malkey_domain_Freservation.timeout)}" 
												width="75" 
												enabled="false"
												tabIndex="2"
												/>
											<mx:Label   text="in 24 Hours Clock" color="#069413" fontSize="9"/>
											
											
		
										</mx:FormItem>
								
								<mx:FormItem label="Num. Days" styleName="formItemL" labelStyleName="formItemLabel"  required="true" direction="horizontal">
									<s:NumericStepper 
										id="nsNumDays" 
										maximum="366" 
										minimum="0" 
										width="100"
										value="{DateOperation.getDaysDifference(dtDateIn.selectedDate,dtDateOut.selectedDate)}"
										tabIndex="3"
										enabled="false"
										/>
									<mx:FormItem label="Chargeable Days" styleName="formItemL" labelStyleName="formItemLabel"  required="true">
										<s:NumericStepper 
											id="nsChargeableDays" 
											maximum="{com_dspl_malkey_domain_Freservation.noofday}" 
											minimum="0" 
											width="75"
											value="{com_dspl_malkey_domain_Freservation.chargdays}"
											tabIndex="8"
											toolTip="chrg days:{com_dspl_malkey_domain_Freservation.chargdays}\n"
											/>
									</mx:FormItem>
								</mx:FormItem>
								
										<mx:FormItem label="Date In" direction="horizontal"  styleName="formItemL" labelStyleName="formItemLabel"  required="true"  disabledOverlayAlpha="0.9">
											<mx:DateField width="100" id="dtDateIn" 
														  selectedDate="{DateOperation.dateAdd('d', nsNumDays.value,dtDateOut.selectedDate)}"
														  selectableRange="{{rangeStart : dtDateOut.selectedDate}}"
														  tabIndex="4"
														  enabled="false"
														  formatString="@Resource(key='dateFormat',bundle='resource')"
														  />
											<mx:Label  text="  Time :"/>
											<s:ComboBox 
												id="cmbTimeIn" 
												dataProvider="{acTime}" 
												selectedIndex="{acTime.getItemIndex(com_dspl_malkey_domain_Freservation.timein)}"  
												width="75" 
												enabled="false"
												tabIndex="5"
												/>
											<mx:Label   text="in 24 Hours Clock" color="#069413" fontSize="9"/>
											<!--<mx:LinkButton 
												id="btnNext" 
												label="Fix Date" 	
												color="#0A33BB" 
												textDecoration="underline" 
												click="btnNext_clickHandler()" 
												visible="{!btnEdit.visible}"
												tabIndex="6"
												/>-->
											<mx:LinkButton 
												id="btnEdit" 
												label="Change Date" 
												color="#0A33BB" 
												textDecoration="underline" 
												click="btnEdit_clickHandler()" 
												tabIndex="7"
												/>
										</mx:FormItem>
						
						
						<!--value.stNew="{DateOperation.getDaysDifference(dtDateIn.selectedDate,dtDateOut.selectedDate)}"
						{nsNumDays.value}
						-->

						
						<mx:FormItem label="RateType" styleName="formItemL" labelStyleName="formItemLabel" required="true" visible="true" 
									 direction="horizontal"
									 >
							<controls:_tiMasterFile id="txtRateType"											
													_acDataProvider="{acRateType}"
													text.stNew="{nsChargeableDays.value !=0 ? (session.getAttribute('RateType').getRatetype(nsChargeableDays.value)) : ''}"
													text="{com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype}"
													_strKeyColumn="ratetype"
													_strKeyColCaption="Rate Type" 
													_strDetailColumn="description" 
													_strDetailColCaption="Description"
													_strWindowTitle="Select Rate Type"
													width="100"
													editable="false" 
													tabIndex="9"
													_onReturnFromSearchGrid="txtRateType__onReturnFromSearchGridHandler(event)"
													doubleClick="txtRateType_doubleClickHandler(event)"
													enabled="{txtRateType.text!='LONGTERM'}"
													/>
							
							
							<s:TextInput 
								text="{genericFunctions.getArrayCollection(acRateType,'ratetype',txtRateType.text/* com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype */).description}"
								doubleClickEnabled="true"
								doubleClick="txtRateType.launchSearchGrid();"
								width="250"
								id="txtRateTypeDescription"
								tabIndex="13"
								editable="false"
								enabled="{txtRateType.text!='LONGTERM'}"
								/>
							<!--enabled="{txtRateType.text!='LONGTERM'}"-->
							<mx:LinkButton label="Search" width="60" color="#0A33BB" textDecoration="underline" click="linkbutton1_clickHandler(event)" enabled="{txtRateType.text!='LONGTERM'}" tabIndex="14"/>
							
							<mx:FormItem label="Billing Basis"  styleName="formItemL" labelStyleName="formItemLabel" direction="horizontal" required="true" visible="{txtRateType.text=='LONGTERM'}">
								<controls:_tiMasterFile id="txtBillingBasis"
														text="@{com_dspl_malkey_domain_Freservation.billbasis}"
														_acDataProvider="{acBillingBasis}"
														_strKeyColumn="label"
														_strKeyColCaption="Billing Basis" 
														_strDetailColumn="des" 
														_strDetailColCaption="description"
														_strWindowTitle="Select Billing Basis"
														width="100"
														editable="false" 
														tabIndex="10"
														/>
								<!--								<s:TextInput text="{genericFunctions.getArrayCollection(txtBillingBasis._acDataProvider,'label',txtBillingBasis.text).description}" 
								width="300"
								/>-->
								
								<mx:LinkButton label="Search" width="60" color="#0A33BB" textDecoration="underline" click="{txtBillingBasis.launchSearchGrid();}"
											   tabIndex="11"/>
							</mx:FormItem>
							
						</mx:FormItem>
						
						
						
<!--						<mx:FormItem label="Old Rate" styleName="formItemL" labelStyleName="formItemLabel" required="true" visible="true" direction="horizontal">
							<controls:_tiMasterFile id="txtRateTypeOld"											
													_acDataProvider="{acRateType}"
													text.stNew="{nsChargeableDays.value !=0 ? (session.getAttribute('RateType').getRatetype(nsChargeableDays.value)) : ''}"
													text="{com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype}"
													_strKeyColumn="ratetype"
													_strKeyColCaption="Rate Type" 
													_strDetailColumn="description" 
													_strDetailColCaption="Description"
													_strWindowTitle="Select Rate Type"
													width="100"
													editable="false" 
													tabIndex="9"
													/>
							
							
							<s:TextInput 
								text="{genericFunctions.getArrayCollection(acRateType,'ratetype',txtRateType.text/* com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.ratetype */).description}"
								doubleClickEnabled="true"
								doubleClick="txtRateType.launchSearchGrid();"
								width="250"
								id="txtRateTypeDescriptionOld"
								tabIndex="13"
								/>
							
							
						</mx:FormItem>-->
						
						
						
<!--						<mx:FormItem label="Hire Status" styleName="formItemL" labelStyleName="formItemLabel">
							<s:TextInput id="txtHireStatus" width="171"  contentBackgroundColor="#8FFE8C" text="{com_dspl_malkey_domain_Freservation.hirestsid}"/>
						</mx:FormItem>-->
						<!--Blue 	contentBackgroundColor="#C6CCFA"-->
						<!--RED 	contentBackgroundColor="#FE8C8C"-->
						<!--GREEN 	contentBackgroundColor="#8FFE8C"-->		
						
						
						<mx:FormItem label="Hire Type"  styleName="formItemL" labelStyleName="formItemLabel" direction="horizontal" required="true" enabled="{isHireTypeEditable}">
							<controls:_tiMasterFile id="txtHireType"											
													_acDataProvider="{acHireType}"
													text="@{com_dspl_malkey_domain_Freservation.hiretypeid}"
													_strKeyColumn="hiretypeid"
													_strKeyColCaption="Ref Code" 
													_strDetailColumn="description" 
													_strDetailColCaption="description"
													_strWindowTitle="Select Hire Type"
													width="100"
													editable="false" 
													_onReturnFromSearchGrid="txtHireType__onReturnFromSearchGridHandler(event)"
													tabIndex="12"
													/>
							
							<s:TextInput 
								text="{genericFunctions.getArrayCollection(txtHireType._acDataProvider,'hiretypeid',com_dspl_malkey_domain_Freservation.hiretypeid).description}"
								doubleClickEnabled="true"
								doubleClick="txtHireType.launchSearchGrid();"
								width="250"
								id="txtHiretype"
								tabIndex="13"
								editable="false"
								/>
							
							<!--keyUp="{if(event.keyCode.toString()=='119'){txtHireType.launchSearchGrid();}}"-->
							<mx:LinkButton label="Search" width="60" color="#0A33BB" textDecoration="underline" click="{txtHireType.launchSearchGrid()}" tabIndex="14"/>
						
							<mx:Label visible="{com_dspl_malkey_domain_Freservation.cohirestsid=='INVOICE'}"  text="{(com_dspl_malkey_domain_Freservation.invoicedApplication=='FO' &amp;&amp; com_dspl_malkey_domain_Freservation.cohirestsid=='INVOICE') ? 'INVOICE GENERATED BY FRONT OFFICE' : 'INVOICE GENERATED BY BACK OFFICE'}" color="#069413" fontSize="12"/>
							
						</mx:FormItem>

						
						<mx:FormItem label="Hire Status" id="fiHireStatus"  styleName="formItemL" labelStyleName="formItemLabel" direction="horizontal" required="true" verticalGap="0"   horizontalGap="0">
							<controls:_tiMasterFile id="txtHireStatus"											
													_acDataProvider="{session.getAttribute('acHireStatus')}"
													text="@{com_dspl_malkey_domain_Freservation.cohirestsid}"
													_strKeyColumn="hirestsid"
													_strKeyColCaption="Hire Status" 
													_strDetailColumn="description" 
													_strDetailColCaption="description"
													_strWindowTitle="Select Hire Status"
													width="100"
													editable="false" 
													_onReturnFromSearchGrid="txtHireStatus__onReturnFromSearchGridHandler(event)"
													tabIndex="15"
													/>
							<s:TextInput text="{genericFunctions.getArrayCollection(session.getAttribute('acHireStatusAll'),'hirestsid',com_dspl_malkey_domain_Freservation.cohirestsid).description}" 
										 keyUp="textinput1_keyUpHandler(event)"
										 width="250"
										 tabIndex="16"
										 editable="false"
										 />
							
							<mx:LinkButton 
								label="Search" 
								width="60" 
								color="#0A33BB" 
								textDecoration="underline" 
								click="{txtHireStatus.launchSearchGrid();setTransactionStatus();}"
								/>
							
							<mx:FormItem label="CO Location"   styleName="formItem" labelStyleName="formItemLabel" required="{txtHireStatus.text=='CHECKOUT'}" horizontalGap="0" direction="horizontal">

								<controls:_tiMasterFile id="txtCOLocation"											
														_acDataProvider="{crLocationListAll.lastResult}"
														text="@{com_dspl_malkey_domain_Freservation.coLocation}"
														_strKeyColumn="locationid"
														_strKeyColCaption="Location" 
														_strDetailColumn="description" 
														_strDetailColCaption="description"
														_strWindowTitle="Select Location"
														width="90"
														editable="false" 
														doubleClickEnabled="true"
														doubleClick="listAlLLocation();"
														/>
								<mx:LinkButton 
									label="?" 
									width="30" 
									color="#0A33BB" 
									textDecoration="underline" 
									click="listAlLLocation();"
									/>
								
						
							<mx:FormItem label="CI Location"   styleName="formItem" labelStyleName="formItemLabel"  required="{txtHireStatus.text=='CHECKIN'}"  horizontalGap="0" direction="horizontal">

								<controls:_tiMasterFile id="txtCILocation"											
														_acDataProvider="{crLocationListAllCI.lastResult}"
														text="@{com_dspl_malkey_domain_Freservation.ciLocation}"
														_strKeyColumn="locationid"
														_strKeyColCaption="Location" 
														_strDetailColumn="description" 
														_strDetailColCaption="description"
														_strWindowTitle="Select Location"
														width="90"
														editable="false" 
														doubleClickEnabled="true"
														doubleClick="listAlLLocationCI();"
														/>
								<mx:LinkButton 
									label="?" 
									width="30" 
									color="#0A33BB" 
									textDecoration="underline" 
									click="listAlLLocationCI();/*  txtCILocation.launchSearchGrid(); */"
									/>

							</mx:FormItem>
							</mx:FormItem>
						</mx:FormItem>
						<mx:FormItem label="Remarks"   styleName="formItemL" labelStyleName="formItemLabel" >
							<s:TextArea 
								restrict="a-z A-z 0-9 /\- _ @ . () % $ ,-+"
								width="914" height="50" id="txtRemarks" text="@{com_dspl_malkey_domain_Freservation.remarks}" tabIndex="18"/>
						</mx:FormItem>
						<mx:FormItem label="Report Address"   styleName="formItemL" labelStyleName="formItemLabel"  direction="horizontal">
							<s:TextArea 
								width="414" 
								height="50" 
								id="txtItinerary" 
								text="{com_dspl_malkey_domain_Freservation.itinerary}" 
								tabIndex="19"
								restrict="a-z A-z 0-9 /\- _ @ . () % $ ,-+"/>
							<mx:VBox>
								
							
							<mx:LinkButton 
								label="#" 
								width="30" 
								color="#0A33BB" 
								textDecoration="underline" 
								click="pickFromDebtorReportAddress(event)"
								toolTip="Click here to pick debtor address"
								tabIndex="19"
								/>
							<mx:LinkButton 
								label="#" 
								width="30" 
								color="#0A33BB" 
								textDecoration="underline" 
								click="pickFromDebtorReturnAddress(event)"
								toolTip="Click here to pick office address"
								tabIndex="20"
								/>
							</mx:VBox>
						<mx:FormItem label="Return Address"   styleName="formItemL" labelStyleName="formItemLabel" direction="horizontal">
							<s:TextArea width="414" height="50" id="txtReturnAddress" text="{com_dspl_malkey_domain_Freservation.returnaddress}" 
										restrict="a-z A-z 0-9 /\- _ @ . () % $ ,-+"
										tabIndex="20"/>
							<mx:VBox>
							<mx:LinkButton 
								label="#" 
								width="30" 
								color="#0A33BB" 
								textDecoration="underline" 
								click="pickFromDebtorReportAddress_txtReturnAddress(event)"
								toolTip="Debtor Address"
								tabIndex="19"
								/>
							<mx:LinkButton 
								label="#" 
								width="30" 
								color="#0A33BB" 
								textDecoration="underline" 
								click="pickFromDebtorReturnAddress_txtReturnAddress(event)"
								toolTip="Office Address"
								tabIndex="20"
								/>
								</mx:VBox>
						</mx:FormItem>
				</mx:FormItem>
						<mx:FormItem label="Garage Out Time" direction="horizontal"  styleName="formItemL" labelStyleName="formItemLabel">
							
							<mx:DateField width="100" id="dtGODate" 
										  selectedDate="@{com_dspl_malkey_domain_Freservation.gdout}"
										  selectableRange="{{rangeStart : new Date()/* ,rangeEnd :com_dspl_malkey_domain_Freservation.dout */}}"
										  tabIndex="20"
										  formatString="@Resource(key='dateFormat',bundle='resource')"
										  />
							
							<s:ComboBox 
								id="cmbGOTime" 
								dataProvider="{acTime}" 
								selectedIndex="{acTime.getItemIndex(com_dspl_malkey_domain_Freservation.gotime)}"  
								width="75" 
								restrict="0-9:"
								tabIndex="21"
								/>
							<mx:Label   text="in 24 Hours Clock" color="#069413" fontSize="9"/>
						</mx:FormItem>
<!--							</mx:VBox>
						</mx:HBox>-->
						
						
						<mx:FormItem label="Customer Notes"   styleName="formItemL" labelStyleName="formItemLabel" direction="horizontal">
							<s:TextArea 
								width="850" height="20" id="txtRemarkCustomer" text="@{com_dspl_malkey_domain_Freservation.remarks_customer}" tabIndex="22" contentBackgroundColor="#C5F9AE"/>
							<mx:LinkButton 
								label="Search" 
								width="60" 
								color="#0A33BB" 
								textDecoration="underline" 
								click="search_clickHandler(event)"
								/>
							
							<controls:_tiMasterFile id="txtRemarksCustomer1"											
													_acDataProvider="{acSubCustomer}"
													text="@{com_dspl_malkey_domain_Freservation.remarks_customer}"
													_strKeyColumn="name"
													_strKeyColCaption="name" 
													_strDetailColumn="id" 
													_strDetailColCaption="Code"
													_strWindowTitle="Select Who Ordered"
													width="0"
													editable="false"
													_onReturnFromSearchGrid="txtRemarksCustomer__onReturnFromSearchGridHandler(event)"
													/>						
						</mx:FormItem>
						
					</mx:Form>
		</s:NavigatorContent>
			<!--Hire types and quatation details-->			

			
			
			
			
			
			
			
			
			
			
			
			<!--Tab1	Customer-->
			<s:NavigatorContent label="Customer" width="100%" height="100%">
				<local:CustomerDetails 
					id="cmpCustomerDetails"
					acClientListAll="{acClient}"
					acClientTypeListAll="{acClienttype}"
					acGuarantorListAll="{acGuarantor}"
					debcode="{com_dspl_malkey_domain_Freshed.debcode/* (Com_dspl_malkey_domain_Freshed(session.getAttribute('reshed'))).debcode */}"
					isEnable="{cmpCustomerDetails_isEnable}"
					/>
			</s:NavigatorContent>
			<!--change="customer_changeHandler(event)"-->
			
			
			
			
			
			
			
			
			
			<!--Tab2	Vehicle-->
			<s:NavigatorContent label="Vehicle" width="100%" height="100%">



						
						<local:VehicleDetails 
							id="cmpVehicleDetails"
							acVehicleAll="{acVehicle}"
							acVehicleClassAll="{acVehicleclass}"
							acVehicleTransAll="{acVehicletrans}"
							acVehicleTypeAll="{acVehicletype}"
							acVehicleMake="{acVehiclemake}"
							acVehicleModelAll="{acVehiclemodel}"
							acVehicleAvailableAll="{crVehiclesearchSRVsearchVehicles.lastResult}"
							com_dspl_malkey_domain_Freservation="{com_dspl_malkey_domain_Freservation}"
							clientType="{com_dspl_malkey_domain_Fdebtor.clienttype}"
							rateType="{txtRateType.text}"
							stCurrent="{currentState}"
							width="100%"
							height="100%"
							verticalCenter="0"
							horizontalCenter="0"
							setRateType="cmpVehicleDetails_setRateTypeHandler(event)"
							isEnable="{cmpVehicleDetails_isEnable}"
							change="cmpVehicleDetails_changeHandler(event)"
							applyOldRate="cmpVehicleDetails_applyOldRateHandler(event)"
							oldrate="{com_dspl_malkey_domain_Fresvehiclerate}"
							/>
						<s:Button x="944" y="157" label="Change" click="supervisor_authondication_clickHandler(event)"/>
				
			</s:NavigatorContent>
			
			
			
			
			
			
			
			
			
			
			
			<!--Tab3	Rental-->
			<s:NavigatorContent label="Accessories/Other-Services" width="100%" height="100%">
				
				
				<local:AccessoryService 
					id="cmpAccessoryService"
					acAccessoryListAll="{acAccessory}"
					clientType="{com_dspl_malkey_domain_Fdebtor.clienttype}"
					toDate="{com_dspl_malkey_domain_Freservation.din}"
					fromDate="{com_dspl_malkey_domain_Freservation.dout}"
					acRateType="{acRateType}"
					x="4" y="0" width="590" height="100%"
					isEnable="{cmpAccessoryService_isEnable}"
					stCurrent="{currentState}"
					addAcc="cmpAccessoryService_addHandler(event)"
					/>
				
				<local:OtherService
					id="cmpOtherService"
					acOtherService="{acOtherSRV}"
					clientType="{com_dspl_malkey_domain_Fdebtor.clienttype}"
					acTime="{acTime}"
					toDate="{com_dspl_malkey_domain_Freservation.din}"
					fromDate="{com_dspl_malkey_domain_Freservation.dout}"
					toTimeIndex="{cmbTimeIn.selectedIndex}"
					fromTimeIndex="{cmbTimeOut.selectedIndex}"
					acRateType="{acRateType}"
					x="600" y="0" width="100%" height="100%"
					isEnable="{cmpOtherService_isEnable}"
					stCurrent="{currentState}"
					delete="cmpOtherService_deleteHandler(event)"
					addOS="cmpOtherService_addHandler(event)"
					/>
				
			</s:NavigatorContent>

			
			
			
			
			
			
			
			
			
			
			<!--Tab4	Driver-->
			<s:NavigatorContent label="Driver" width="100%" height="100%">
				
				<!--
				acCustomerDrivers="{acClientdriver}"
				acMalkeyDrivers="{acDriver}"
				-->
				<local:DriverDetails
					id="cmpDriverDetails"
					acAllDrivers="{acDriver}"
					
					
					acClientListAll="{acClient}"
					acOtherService="{acOtherSRV}"
					acResothsrv="{cmpOtherService.acResothsrv}"
					com_dspl_malkey_domain_Freservation="{com_dspl_malkey_domain_Freservation}"
					creationComplete="cmpDriverDetails_creationCompleteHandler(event)"
					stCurrent="{currentState}"
					acTime="{acTime}"
					width="100%"
					height="100%"
					dateChange="cmpDriverDetails_dateChangeHandler(event)"
					startDate="{com_dspl_malkey_domain_Freservation.dout}"
					endDate="{com_dspl_malkey_domain_Freservation.din}"
					startTime="{com_dspl_malkey_domain_Freservation.timeout}"
					endTime="{com_dspl_malkey_domain_Freservation.timein}"
					isEnable="{cmpDriverDetails_isEnable}"
					/>

			</s:NavigatorContent>
			
	
			
			
			
			
			
			
			
			
			
			
			<!--Tab5	Rates-->
			<s:NavigatorContent label="Rates" width="100%" height="100%">

				<local:Rates 
					id="cmpRates"
					acAddchgs="{acAddcharge}" 
					acPaymentType="{acPaytype}"
					acRatesAccessory="{cmpAccessoryService.acResAccessory}"
					acRatesOthersrv="{cmpOtherService.acResothsrv}"
					acAccessoryListAll="{acAccessory}"
					acOtherServiceListAll="{acOtherSRV}"
					com_dspl_malkey_domain_Fresvehicle="{cmpVehicleDetails.acResVehicle.length!=0 ? (cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle) : null }"
					com_dspl_malkey_domain_Fresdriver="{cmpDriverDetails.acResMalkeyDrivers.length!=0 ? (cmpDriverDetails.acResMalkeyDrivers.getItemAt(0) as Com_dspl_malkey_domain_Fresdriver) : null }"
					isMalkeyDriver="{com_dspl_malkey_domain_Freservation.hiretypeid == 'SD' ? false : true}"
					clientType="{com_dspl_malkey_domain_Fdebtor.clienttype}"
					acVehicleAll="{acVehicle}"
					com_dspl_malkey_domain_Freservation="{com_dspl_malkey_domain_Freservation}"
					fresdriverrate="{com_dspl_malkey_domain_Fresdriverrate}"
					width="100%"
					isEnable="{cmpRates_isEnable}"
					calculate="calculateTax(event)"
					stCurrent="{currentState}"
					/>
				<!--driver="{cmpDriverDetails.rbgMDrivers.selectedValue as Com_dspl_malkey_domain_Femployee}"-->
			</s:NavigatorContent>
		
			
			
			
			
			
			
			
			
			
			
			<!--Tab6	Check-Out-->
			<s:NavigatorContent id="ncCO" label="Check-Out" width="100%" height="100%">
				<local:CheckOut 
					id="cmpCheckOut"
					x="0" y="0"
					stCurrent="{currentState}"
					acVehicleTypeAll="{acVehicletype/* crFvehicletypeSRVListAll.lastResult */}"
					acVehicleAll="{acVehicle}"
					acVehicleMake="{acVehiclemake}"
					acFvinventrylist="{acInventry}"
					com_dspl_malkey_domain_Freservation="@{com_dspl_malkey_domain_Freservation}"
					freshed="{com_dspl_malkey_domain_Freshed}"
					com_dspl_malkey_domain_Fresvehicle="{cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle}"
					load="cmpCheckOut_loadHandler(event)"
					isEnable="{cmpCheckOut_isEnable}"
					/>
			</s:NavigatorContent>
		
			
			
			
			
			
			
			
			
			
			<!--Tab7	Check-In-->
			<s:NavigatorContent id="ncCI" label="Check-In" width="100%" height="100%" >
				<!--excludeFrom="stNew"-->
				<local:CheckIn
					id="cmpCheckIn"
					x="0" y="0"
					stCurrent="{currentState}"
					acVehicleTypeAll="{acVehicletype/* crFvehicletypeSRVListAll.lastResult */}"
					acVehicleAll="{acVehicle}"
					acVehicleMake="{acVehiclemake}"
					acFvinventrylist="{ObjectUtil.copy(acInventry) as ArrayCollection}"
					acFhirestatus="{crFhirestatusSRVListAll.lastResult}"
					acTime="{acTime}"
					com_dspl_malkey_domain_Freservation="@{com_dspl_malkey_domain_Freservation}"
					com_dspl_malkey_domain_Fresvehicle="{cmpVehicleDetails.acResVehicle.getItemAt(0) as Com_dspl_malkey_domain_Fresvehicle}"
					com_dspl_malkey_domain_Fresdriver="{cmpDriverDetails.acResMalkeyDrivers.length!=0 ? (cmpDriverDetails.acResMalkeyDrivers.getItemAt(0) as Com_dspl_malkey_domain_Fresdriver) : null }"
					com_dspl_malkey_domain_Fresdriverrate="{com_dspl_malkey_domain_Fresdriverrate}"
					isEnable="{cmpCheckIn_isEnable}"
					dateChange="cmpCheckIn_dateChangeHandler(event)"
					checkInChange="cmpCheckIn_checkInChangeHandler(event)"
					vehicleChange="cmpCheckIn_vehicleChangeHandler(event)"
					agreementChange="cmpCheckIn_agreementChangeHandler(event)"
					/>

				
			</s:NavigatorContent>
		
			
			
			
			
			
			
			
			
			<!--Tab8	Summary-->
			<s:NavigatorContent label="Summary" width="100%" height="100%">
				<mx:Form  x="5" y="0"
						 borderAlpha="0.10"
						 paddingTop="5"
						 paddingLeft="5"
						 paddingRight="5"
						 paddingBottom="2"
						 borderColor="black"
						 borderStyle="solid"
						 borderVisible="true" 
						 height="458" width="554">
					<mx:FormItem label="Hire Type" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput width="150" id="txtSummaryHireType" 
									 text="{genericFunctions.getArrayCollection(txtHireType._acDataProvider,'hiretypeid',com_dspl_malkey_domain_Freservation.hiretypeid).description}"
									 editable="false"
									 />
					</mx:FormItem>
					<mx:FormItem label="Agreement From" direction="horizontal" styleName="formItemL"  labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							id="txtSummaryFromAgr" 
							text="{dateFormatter.format( com_dspl_malkey_domain_Freservation.agrdout.toDateString())}"
							editable="false"
							/>
							<mx:Label text="To"/>
							<s:TextInput 
								width="100"  
								id="txtSummaryToAgr"  
								text="{dateFormatter.format( com_dspl_malkey_domain_Freservation.agrdin.toDateString())}"
								editable="false"
								/>
					</mx:FormItem>
					<mx:FormItem label="From" direction="horizontal" styleName="formItemL"  labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							id="txtSummaryFrom" 
							text="{dateFormatter.format( com_dspl_malkey_domain_Freservation.dout.toDateString())}"
							editable="false"
							/>
							<mx:Label text="To"/>
							<s:TextInput 
								width="100"  
								id="txtSummaryTo"  
								text="{dateFormatter.format( DateOperation.dateAdd('d', nsNumDays.value,dtDateOut.selectedDate).toDateString())}"
								editable="false"
								/>
					</mx:FormItem>
					<mx:FormItem label="Rental" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="305"   
							id="txtSummaryRental"
							editable="false"
							/>
					</mx:FormItem>
<!--					<mx:FormItem label="Tax" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="305"    
							id="txtSummaryTax"
							editable="false"
							/>
					</mx:FormItem>-->
					<mx:FormItem label="Ref Deposit" styleName="formItemL" labelStyleName="formItemLabel" direction="horizontal">
						<s:TextInput 
							width="100"    
							id="txtSummaryRefDeposit"  
							text="{com_dspl_malkey_domain_Freservation.deposit}"
							toolTip="To Be Paid:{com_dspl_malkey_domain_Freservation.depositbal}/="
							editable="false"
							/>
						<!--<mx:FormItem label="Advance" styleName="formItemL" labelStyleName="formItemLabel">-->
						<mx:Label text="Advance"/>
							<s:TextInput 
								width="100"    
								id="txtSummaryAdvance"  
								text="{com_dspl_malkey_domain_Freservation.advance}"
								toolTip="To Be Paid:{com_dspl_malkey_domain_Freservation.advancebal}/="
								editable="false"
								/>
						<mx:Label text="Tax"/>
						<s:TextInput 
							width="100"    
							id="txtSummaryTax"
							editable="false"
							/>
						<!--</mx:FormItem>-->
					</mx:FormItem>

					<mx:FormItem label="Allocated Mileage" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput  
							width="50"    
							id="txtSummaryAllocatedMileage" 
							text="{cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.allotedkms}" 
							toolTip="Allocated Killo Meeters Per Day"
							editable="false"
							/>
						<s:Label text="x" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="50"    
							id="txtSummaryAllocatedMileageDays" 
							text="{cmpRates.com_dspl_malkey_domain_Freservation.chargdays}" 
							toolTip="Number of Days"
							editable="false"
							/>
						<s:Label text="=" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="100"    
							id="txtSummaryAllocatedMileageTotal"  
							toolTip="(Total Allocated Killo Metters) = (Allocated Killo Meeters Per Day) x (Number of Days)"
							text="{cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.allotedkms * cmpRates.com_dspl_malkey_domain_Freservation.chargdays}"
							editable="false"
							/>
					</mx:FormItem>
					<mx:FormItem label="Completed Mileage" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="50"    
							id="txtSummaryUsedMileageCheckIn"  
							toolTip="CheckIn Meeter Reading" 
							text="{com_dspl_malkey_domain_Freservation.cimileage}"
							editable="false"
							/>
						<s:Label text="-" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="50"    
							id="txtSummaryUsedMileageCheckOut" 
							text="{com_dspl_malkey_domain_Freservation.comileage}"   
							toolTip="CheckOut Meeter Reading"
							editable="false"
							/>
						<s:Label text="=" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="100"    
							id="txtSummaryUsedMileageTotal"
							toolTip="(Total Used Mileage) = (CheckIn Meeter Reading) - (CheckIn Meeter Reading)"
							text="{com_dspl_malkey_domain_Freservation.cimileage - com_dspl_malkey_domain_Freservation.comileage}"
							editable="false"
							/>
						
						
						<s:Label text="Additional Chrgs. ={ calculateAdditionalCharges(com_dspl_malkey_domain_Freservation.cixsmileage * new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate)).toFixed(2)}" toolTip="Seasonal Rates"  height="18" width="150"  verticalAlign="bottom"  color="#09AB3F"/>
						
					</mx:FormItem>
					

					<mx:FormItem label="Excess Mileage" direction="horizontal" width="100%" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="50" 
							id="txtSummaryExcessMileage" 
							text="{com_dspl_malkey_domain_Freservation.cixsmileage}"
							toolTip="(Used Mileage - Allocated Mileage) = {txtSummaryUsedMileageTotal.text} - {txtSummaryAllocatedMileageTotal.text}"
							editable="false"
							/>
						<s:Label text="@ Rs" height="18" verticalAlign="bottom" width="44"/>
						<s:TextInput 
							width="50"     
							id="txtSummaryExcessMileageRate" 
							text="{cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate}"
							editable="false"
							/>

						<s:Label text="per KM"  height="18" width="50"  verticalAlign="bottom"/>
						<s:Label text="-" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							id="txtExtraMileageDiscout1"
							width="50"  
							text="{extraMileageDiscout}"
							editable="false"
							textAlign="right"
							toolTip="Discount {com_dspl_malkey_domain_Freservation.discount_xmile}%"
							/>
						
						<s:Label text="=" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="80"     
							id="txtSummaryExcessMileageRateTotal" 
							text="{excessMileageRateTotal}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							toolTip="Amount =Amount+Additional Charges -Discount= {((new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate) * com_dspl_malkey_domain_Freservation.cixsmileage))}-{((new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate) * com_dspl_malkey_domain_Freservation.cixsmileage * new Number(com_dspl_malkey_domain_Freservation.discount_xmile)/100)).toFixed(NO_OF_DECIMAL_POINT)}={txtSummaryExcessMileageRateTotal.text}"
							/>
<!--						<s:TextInput 
							width="80"     
							id="txtSummaryExcessMileageRateTotal" 
							text="{((new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate) * com_dspl_malkey_domain_Freservation.cixsmileage)-(new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate) * com_dspl_malkey_domain_Freservation.cixsmileage * new Number(com_dspl_malkey_domain_Freservation.discount_xmile)/100)).toFixed(2)}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							toolTip="Amount =Amount -Discount= {((new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate) * com_dspl_malkey_domain_Freservation.cixsmileage))}-{((new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xsmilerate) * com_dspl_malkey_domain_Freservation.cixsmileage * new Number(com_dspl_malkey_domain_Freservation.discount_xmile)/100)).toFixed(2)}={txtSummaryExcessMileageRateTotal.text}"
							/>-->
						
					</mx:FormItem>
					
					
					
					<mx:FormItem label="Excess Hours" direction="horizontal" width="100%" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="50" 
							id="txtSummaryExcessHours" 
							text="{com_dspl_malkey_domain_Freservation.xhours}"
							toolTip="(Used Hours - Allocated Hours) = {com_dspl_malkey_domain_Freservation.xhours} - {com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.allotedhours}"
							editable="false"
							/>
						<s:Label text="@ Rs" height="18" verticalAlign="bottom" width="44"/>
						<s:TextInput 
							width="50"     
							id="txtSummaryExcessHoursRate" 
							text="{cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xhourrate}"
							editable="false"
							/>
						<s:Label text="per Hour"  height="18" width="50"  verticalAlign="bottom"/>
						<s:Label text="-" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							id="txtExtraHoursDiscout1"
							width="50"  
							text="{extraHourDiscout}"
							editable="false"
							textAlign="right"
							toolTip="Discount {cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.discountxhourrate}%"
							/>
						
						<s:Label text="=" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="80"     
							id="txtSummaryExcessHoursRateTotal" 
							text="{excessHourRateTotal}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							toolTip="Amount =Amount -Discount= {((new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xhourrate) * com_dspl_malkey_domain_Freservation.xhours))}-{((new Number(cmpRates.com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.xhourrate) * com_dspl_malkey_domain_Freservation.xhours * new Number(com_dspl_malkey_domain_Fresvehicle.fresvehiclerate.discountxhourrate)/100)).toFixed(NO_OF_DECIMAL_POINT)}={txtSummaryExcessHoursRateTotal.text}"
							/>
					</mx:FormItem>
					
					
<!--					<mx:FormItem label="Excess Mileage(Amt)" direction="horizontal" width="420">
						<s:TextInput width="100"     id="txtSummaryExcessMileageAmt" text="{com_dspl_malkey_domain_Freservation.cixsmileagers}"/>
					</mx:FormItem>-->
					<mx:FormItem label="Detention" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="50" 
							id="txtSummaryDetention" 
							text="{com_dspl_malkey_domain_Freservation.cidetenhrs}"
							editable="false"
							/>
						<s:Label text="@ Rs" height="18" verticalAlign="bottom" width="44"/>
						<s:TextInput 
							width="50"  
							id="txtSummaryDetentionRs" 
							text="{cmpRates.fresdriverrate.otrate}"
							editable="false"
							/>
						<s:Label text="per Hour" height="18" width="50" verticalAlign="bottom"/>
						<s:Label text="-" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							id="txtDetentionDiscount1"
							width="50"  
							text="{detentionDiscount/*(new Number(cmpRates.fresdriverrate.otrate) * com_dspl_malkey_domain_Freservation.cidetenhrs * new Number(com_dspl_malkey_domain_Fresdriverrate.discount_detention)/100).toFixed(2)*/}"
							editable="false"
							textAlign="right"
							toolTip="Discount {com_dspl_malkey_domain_Fresdriverrate.discount_detention}%"
							/>
						
						<s:Label text="=" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="80"  
							id="txtSummaryDetentionRsTotal" 
							text="{detentionRsTotal}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							toolTip="Amount =Amount -Discount={((new Number(cmpRates.fresdriverrate.otrate) * com_dspl_malkey_domain_Freservation.cidetenhrs))} - {((new Number(cmpRates.fresdriverrate.otrate) * com_dspl_malkey_domain_Freservation.cidetenhrs * new Number(com_dspl_malkey_domain_Fresdriverrate.discount_detention)/100)).toFixed(NO_OF_DECIMAL_POINT)}={txtSummaryDetentionRsTotal.text}"
							/>
						
					</mx:FormItem>
					<!--com_dspl_malkey_domain_Fresvehicle.fresvehiclerate-->
<!--					<mx:FormItem label="Night Out" direction="horizontal">
						<s:TextInput width="91"  id="txtSummaryNightOut"/>
						<s:Label text="@ Rs" height="18" verticalAlign="bottom" width="44"/>
						<s:TextInput width="87"/>
						<s:Label text="per Day" height="18" verticalAlign="bottom"/>
					</mx:FormItem>-->
					<mx:FormItem label="Out of Colombo" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="50"   
							id="txtSummaryOutofColombo" 
							text="{com_dspl_malkey_domain_Freservation.cinightout}"
							editable="false"
							/>
						<s:Label text="@ Rs" height="18" verticalAlign="bottom" width="44"/>
						<s:TextInput 
							width="50" 
							id="txtSummaryOutofColomboRs" 
							text="{cmpRates.fresdriverrate.nightoutrate}"
							editable="false"
							/>
						<s:Label text="per Day" height="18" width="50" verticalAlign="bottom"/>
						<s:Label text="-" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							id="txtNightOutDiscout1"
							width="50"  
							text="{outofColomboDiscout/*((new Number(cmpRates.fresdriverrate.nightoutrate) * com_dspl_malkey_domain_Freservation.cinightout) * new Number(com_dspl_malkey_domain_Fresdriverrate.discount_nightout)/100).toFixed(2)*/}"
							editable="false"
							textAlign="right"
							toolTip="Discount {com_dspl_malkey_domain_Fresdriverrate.discount_nightout}%"
							/>
						<s:Label text="=" height="18" verticalAlign="bottom"/>
						<s:TextInput 
							width="80" 
							id="txtSummaryOutofColomboRsTotal" 
							text="{outofColomboRsTotal/*((new Number(cmpRates.fresdriverrate.nightoutrate) * com_dspl_malkey_domain_Freservation.cinightout) - ((new Number(cmpRates.fresdriverrate.nightoutrate) * com_dspl_malkey_domain_Freservation.cinightout) * new Number(com_dspl_malkey_domain_Fresdriverrate.discount_nightout)/100)).toFixed(2)*/}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							toolTip="Amount =Amount -Discount={((new Number(cmpRates.fresdriverrate.nightoutrate) * com_dspl_malkey_domain_Freservation.cinightout))} - {(((new Number(cmpRates.fresdriverrate.nightoutrate) * com_dspl_malkey_domain_Freservation.cinightout) * new Number(com_dspl_malkey_domain_Fresdriverrate.discount_nightout)/100)).toFixed(NO_OF_DECIMAL_POINT)}={txtSummaryOutofColomboRsTotal.text}"
							/>
						
					</mx:FormItem>
					<mx:FormItem label="Other (Rs)" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="91"  
							id="txtSummaryOther" 
							text="{com_dspl_malkey_domain_Freservation.ciother}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Damage (Rs)" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="91"   
							id="txtSummaryDamage" 
							text="{com_dspl_malkey_domain_Freservation.cidamagers}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Fuel Difference (Rs)" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="91"   
							id="txtSummaryFuelDiff" 
							text="{com_dspl_malkey_domain_Freservation.cifueldiff}"
							contentBackgroundColor="#E9FCE9"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					
					<mx:FormItem label="Sub Total" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							id="txtSubTotalClaimAmt"  
							contentBackgroundColor="#C6CCFA"
							editable="false"
							text="{(new Number(txtSummaryExcessMileageRateTotal.text)+
							new Number(txtSummaryDetentionRsTotal.text)+
							new Number(txtSummaryExcessHoursRateTotal.text)+
							new Number(txtSummaryOutofColomboRsTotal.text)+
							new Number(txtSummaryDamage.text)+
							new Number(txtSummaryFuelDiff.text)+
							new Number(txtSummaryOther.text)).toFixed(NO_OF_DECIMAL_POINT)}"
							textAlign="right"
							width="91"   
							/>
					</mx:FormItem>
					
				</mx:Form>
				<mx:Form height="450" x="882" y="6"
						 borderAlpha="0.10"
						 paddingTop="5"
						 paddingLeft="5"
						 paddingRight="5"
						 paddingBottom="2"
						 borderColor="black"
						 borderStyle="solid"
						 borderVisible="true" 
						 width="250">
					<s:Label text="Summary of Total Charges" fontWeight="bold"/>
					<mx:FormItem label="Total Amount" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="100"
							id="txtTotalPayable"
							text="{new Number( new Number(txtSubTotalChargesAmt.text)+ new Number(txtSubTotalClaimAmt.text)).toFixed(NO_OF_DECIMAL_POINT)}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Total Taxable" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							text="{com_dspl_malkey_domain_Freservation.totaltaxable}"
							editable="false"
							textAlign="right"
							id="txtTotalTaxable"
							toolTip="Other Charges,Damage Charges and Fuel Charges are Excluded from Tax"
							/>
					</mx:FormItem>
					<mx:FormItem label="Total Tax" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							text="{com_dspl_malkey_domain_Freservation.taxamt}"
							editable="false"
							textAlign="right"
							id="txtTotalTax"
							/>
					</mx:FormItem>
					<mx:FormItem label="Net Total" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							text="{com_dspl_malkey_domain_Freservation.nettotal}"
							editable="false"
							textAlign="right"
							id="txtNetTotal"
							/>
					</mx:FormItem>
					<mx:FormItem label="Add Deposit" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							text="{new Number(com_dspl_malkey_domain_Freservation.deposit).toFixed(NO_OF_DECIMAL_POINT)}"
							editable="false"
							textAlign="right"
							id="txtDeposit"
							/>
					</mx:FormItem>	
					
					
					<mx:FormItem label="Total Payable" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							text="{ (new Number(com_dspl_malkey_domain_Freservation.nettotal)+new Number(txtDeposit.text)).toFixed(NO_OF_DECIMAL_POINT)}"
							editable="false"
							textAlign="right"
							id="txtTotalPayable2"
							/>
					</mx:FormItem>
					
					
					<mx:FormItem label="Less Deposit Paid" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<!--<s:TextInput 
						width="100" 
						text="{new Number(com_dspl_malkey_domain_Freservation.depositbal)}"
						toolTip="Paid Amt:{new Number(com_dspl_malkey_domain_Freservation.deposit)-new Number(com_dspl_malkey_domain_Freservation.depositbal)}/= From {com_dspl_malkey_domain_Freservation.deposit}"
						editable="false"
						textAlign="right"
						id="txtDepositbal"
						/>-->
						<s:TextInput 
							width="100" 
							text="{(new Number(com_dspl_malkey_domain_Freservation.deposit)-new Number(com_dspl_malkey_domain_Freservation.depositbal)).toFixed(NO_OF_DECIMAL_POINT)}"
							editable="false"
							textAlign="right"
							id="txtDepositPaid"
							/>
					</mx:FormItem>
					
					<!--<mx:FormItem label="Advance" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">-->
<!--						<s:TextInput 
							width="100" 
							text="{new Number(com_dspl_malkey_domain_Freservation.advancebal)}"
							toolTip="Paid Amt:{new Number(com_dspl_malkey_domain_Freservation.advance)-new Number(com_dspl_malkey_domain_Freservation.advancebal)}/= From {com_dspl_malkey_domain_Freservation.advance}"
							editable="false"
							textAlign="right"
							id="txtAdvancebal"
							/>-->
	<!--					<s:TextInput 
							width="100" 
							text="{new Number(com_dspl_malkey_domain_Freservation.advance)}"
							editable="false"
							textAlign="right"
							id="txtAdvance"
							/>
					</mx:FormItem>-->
					
					<mx:FormItem label="Less Advance Paid" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
<!--						<s:TextInput 
							width="100" 
							text="{new Number(com_dspl_malkey_domain_Freservation.advancebal)}"
							toolTip="Paid Amt:{new Number(com_dspl_malkey_domain_Freservation.advance)-new Number(com_dspl_malkey_domain_Freservation.advancebal)}/= From {com_dspl_malkey_domain_Freservation.advance}"
							editable="false"
							textAlign="right"
							id="txtAdvancebal"
							/>-->
						<s:TextInput 
							width="100" 
							text="{(new Number(com_dspl_malkey_domain_Freservation.advance)-new Number(com_dspl_malkey_domain_Freservation.advancebal)).toFixed(NO_OF_DECIMAL_POINT)}"
							editable="false"
							textAlign="right"
							id="txtAdvancePaid"
							/>
					</mx:FormItem>

					<mx:FormItem label="Balance Payable" direction="horizontal" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="100" 
							text="{ (new Number(txtTotalPayable2.text)-new Number(txtDepositPaid.text)-new Number(txtAdvancePaid.text)).toFixed(NO_OF_DECIMAL_POINT)}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>

				</mx:Form>
				
				<mx:Form height="168" x="578" y="0"
						 borderAlpha="0.10"
						 paddingTop="5"
						 paddingLeft="5"
						 paddingRight="5"
						 paddingBottom="2"
						 borderColor="black"
						 borderStyle="solid"
						 borderVisible="true" 
						 label="Amounts Summury"
						 width="250" >
					<s:Label text="Summary of Charges" fontWeight="bold"/>
<!--					<mx:FormItem label="Driver Services" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="144"  
							text="{cmpRates.txtDriverTotal.text}" 
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>-->
					<mx:FormItem label="Vehicle Services" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							width="100"  
							text="{cmpRates.txtVehicleTotal.text}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Accessories" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							width="100" 
							text="{cmpRates.txtTotalAccesories.text}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Other Services" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							width="100"  
							text="{cmpRates.txtTotalOther.text}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Additional Charges" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							width="100"  
							text="{cmpRates.txtTotalAddCharge.text}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Sub Total" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							id="txtSubTotalChargesAmt"  
							contentBackgroundColor="#C6CCFA"
							editable="false"
							text="{(/*new Number(cmpRates.txtDriverTotal.text)+*/
							new Number(cmpRates.txtVehicleTotal.text)+
							new Number(cmpRates.txtTotalAccesories.text)+
							new Number(cmpRates.txtTotalOther.text)/* +
							new Number(cmpRates.txtTotalAddCharge.text)*/).toFixed(NO_OF_DECIMAL_POINT) }"
							width="100"  
							textAlign="right"
							/>
					</mx:FormItem>
					

					
				</mx:Form>
				
				<!--Discounts-->
				<mx:Form height="276" x="578" y="182"
						 borderAlpha="0.10"
						 paddingTop="5"
						 paddingLeft="5"
						 paddingRight="5"
						 paddingBottom="2"
						 borderColor="black"
						 borderStyle="solid"
						 borderVisible="true" 
						 width="250">
					<s:Label text="Summary of Discounts Charges" fontWeight="bold"/>
					<mx:FormItem label="Accessories" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							width="100" 
							text="{cmpRates.txtTotalDiscountAccesories.text}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Other Services" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							width="100"  
							text="{cmpRates.txtTotalDiscountOther.text}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
<!--					<mx:FormItem label="Driver Services" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							width="144"  
							text="{cmpRates.txtDriverDiscount.text}" 
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>-->
					<mx:FormItem label="Vehicle Services" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							width="100"  
							text="{cmpRates.txtVehicleDiscountAmt.text}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Detention" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							id="txtDetentionDiscount"
							width="100"  
							text="{detentionDiscount/*(new Number(cmpRates.fresdriverrate.otrate) * com_dspl_malkey_domain_Freservation.cidetenhrs * new Number(com_dspl_malkey_domain_Fresdriverrate.discount_detention)/100).toFixed(2)*/}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Night Out" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							id="txtNightOutDiscout"
							width="100"  
							text="{((new Number(cmpRates.fresdriverrate.nightoutrate) * com_dspl_malkey_domain_Freservation.cinightout) * new Number(com_dspl_malkey_domain_Fresdriverrate.discount_nightout)/100).toFixed(NO_OF_DECIMAL_POINT)}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Extra Mileage" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							id="txtExtraMileageDiscout"
							width="100"  
							text="{extraMileageDiscout}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>
					<mx:FormItem label="Extra Hours" styleName="formItemL" labelStyleName="formItemLabel">
						<s:TextInput 
							id="txtExtraHoursDiscout"
							width="100"  
							text="{nFormatter.format(extraHourDiscout)}"
							editable="false"
							textAlign="right"
							/>
					</mx:FormItem>

					<mx:FormItem label="Sub Total" styleName="formItemL" labelStyleName="formItemLabel">
						<!--should chage direct access of copmponenet-->
						<s:TextInput 
							id="txtSubTotalDiscountAmt"  
							contentBackgroundColor="#C6CCFA"
							editable="false"
							text="{(new Number(cmpRates.txtTotalDiscountAccesories.text)+
							new Number(cmpRates.txtTotalDiscountOther.text)+
							new Number(txtDetentionDiscount.text)+
							new Number(txtNightOutDiscout.text)+
							new Number(txtExtraMileageDiscout.text)+
							new Number(txtExtraHoursDiscout1.text)+
							new Number(cmpRates.txtVehicleDiscountAmt.text)).toFixed(NO_OF_DECIMAL_POINT)}"
							textAlign="right"
							width="100"  
							/>
					</mx:FormItem>
				</mx:Form>
<!--				<mx:LinkButton  x="946" y="135" label="Click Here to Genarate Invoice" click="genarate_Invoice(event)" color="#0A33BB" textDecoration="underline"/>
			-->	
			</s:NavigatorContent>
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		</mx:TabNavigator>
<!--		<s:Label x="14" y="524" text="Last Modified By:{com_dspl_malkey_domain_Freservation.adduser}" visible.stNew="false" visible.stUndo="false"/>
		-->
	<mx:FormItem x="14" y="545" width="1200" direction="horizontal"   visible.stNew="false" visible.stUndo="false">
		<s:Label text="Last Modified By: {com_dspl_malkey_domain_Freservation.adduser}"/>
		<s:Label text="BOOKED By: {com_dspl_malkey_domain_Freservation.booked}"/>
		<s:Label text="CONFIRMED By: {com_dspl_malkey_domain_Freservation.confirmed}"/>
		<s:Label text="CANCELLED By: {com_dspl_malkey_domain_Freservation.cancelled}"/>
		<s:Label text="CHECKOUT By: {com_dspl_malkey_domain_Freservation.checkout}"/>
		<s:Label text="CHECKIN By: {com_dspl_malkey_domain_Freservation.checkin}"/>
		<s:Label text="COMPLETED By: {com_dspl_malkey_domain_Freservation.completed}"/>
		<s:Label text="INVOICE By: {com_dspl_malkey_domain_Freservation.invoiced}"/>
		<mx:Spacer width="30%"/>
		<s:Label text="On: {dateFormatter.format(com_dspl_malkey_domain_Freservation.adddate)}"/>
	</mx:FormItem>
	
	<!--</s:Panel>-->
</s:TitleWindow>
